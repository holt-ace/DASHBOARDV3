{"version":3,"mappings":"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","names":["AppHeader","jsx","Navbar","bg","variant","expand","className","children","jsxRuntimeExports","jsxs","Container","fluid","Brand","as","Link","to","Toggle","Dropdown","align","id","Menu","Item","Divider","Collapse","Nav","Form","InputGroup","Control","placeholder","size","Button","Header","AppSidebar","location","useLocation","collapsed","setCollapsed","useState","onClick","NavLink","isActive","path","pathname","startsWith","Fragment","AppFooter","currentYear","Date","getFullYear","Row","Col","md","ApiService","initialize","this","instance","config","baseURL","API_BASE_URL","timeout","withCredentials","axios","create","interceptors","request","use","console","log","error","Promise","reject","response","errorMessage","handleApiError","Error","data","message","status","statusText","buildQueryParams","params","queryParams","URLSearchParams","key","value","Object","entries","Array","isArray","forEach","item","append","String","fetchPOs","limit","PAGE_SIZE","offset","page","url","toString","get","metadata","total","length","pages","Math","ceil","fetchPO","poNumber","createPO","poData","post","updatePO","put","deletePO","delete","updateStatus","newStatus","notes","oldStatus","patch","getStatuses","getInitialStatus","getStatus","getAvailableTransitions","validateTransition","from","transition","fetchMetrics","queryString","METRICS_PATH","getMetricsSummary","fetchDetailedMetrics","getDetailedMetrics","bulkUpdateStatus","poNumbers","operation","fetchCategoryMetrics","category","uploadFile","file","formData","FormData","JSON","stringify","headers","__publicField","replace","initialState","items","filteredItems","loading","pagination","totalPages","totalItems","itemsPerPage","filters","query","startDate","endDate","buyerIds","locationIds","selectedItems","batchOperations","processing","fetchPurchaseOrders","createAsyncThunk","async","searchParams","rejectWithValue","result","slice","map","po","_a","header","dbError","deletePurchaseOrder","dispatch","performBatchOperation","all","poListSlice","createSlice","name","reducers","setPage","state","action","payload","setSearchQuery","setStatusFilter","setDateRange","setBuyerIds","setLocationIds","resetFilters","toggleItemSelection","index","indexOf","push","splice","selectAllItems","extraReducers","builder","addCase","pending","fulfilled","_b","_c","_d","rejected","actions","poListReducer","reducer","fetchPODetail","purchaseOrder","transitions","transError","warn","updateData","updatePOStatus","poDetailSlice","availableTransitions","clearPODetail","poDetailReducer","calendarView","viewMode","currentDate","toISOString","highlightedStatus","displayMode","timelineView","zoom","groupBy","dashboardLayout","panels","layout","activeView","theme","visualizationSlice","setActiveView","setCalendarView","setTimelineView","addDashboardPanel","removeDashboardPanel","filter","panel","updatePanelSettings","find","p","settings","updatePanelPosition","position","setDashboardLayout","resetDashboard","saveDashboardTemplate","setTheme","visualizationReducer","POStatus","LogLevel","COLORS","DEBUG","INFO","WARN","ERROR","RESET","level","levelName","color","prefix","split","Logger","debug","info","groupStart","groupCollapsed","group","groupEnd","time","label","timeEnd","detailedData","statuses","createEmptyMetrics","statusDistribution","timeline","topBuyers","topLocations","topProducts","totalOrders","totalValue","averageOrderValue","onTimePercentage","forecast","predictions","_","i","date","now","random","confidenceInterval","upper","lower","riskAssessment","highRiskCount","mediumRiskCount","lowRiskCount","getState","metrics","dateRange","searchResult","pos","reduce","sum","totalCost","statusCounts","count","percentage","round","dateMap","orderDate","dateStr","sort","a","b","localeCompare","buyerMap","buyerInfo","firstName","lastName","toLowerCase","locationMap","syscoLocation","productMap","products","product","supc","description","quantity","fobCost","DELIVERED","delivery","deliveryDate","buildMetricsFromPOs","e","rawData","transformedData","backendMetrics","debugMode","calendar","distribution","volume","daily","setDate","getDate","_f","_e","timelineData","_h","_g","operational","orders","byDate","ordersByDate","getTime","_k","_j","_i","resources","buyers","list","_l","buyersData","_o","_n","_m","locations","_p","locationsData","_q","rankings","_r","productsData","_t","_s","financial","sales","_v","_u","_x","_w","_z","_y","_B","_A","_D","_C","_F","_E","average","_H","_G","_J","_I","performance","_L","_K","onTime","_N","_M","_O","predictive","_P","risk","high","medium","low","transformMetricsData","metricsError","processingTimes","uploadToConfirm","efficiency","confirmToShip","shipToInvoice","invoiceToDeliver","values","val","detailedError","enhancedError","metricsSlice","setBuyerFilter","setLocationFilter","metricsReducer","uiSlice","global","operations","notifications","modal","sidebarCollapsed","tourActive","tourStep","globalSearch","setGlobalLoading","setOperationLoading","clearLoading","addNotification","substr","dismissible","removeNotification","n","clearNotifications","openModal","closeModal","updateModalData","toggleSidebar","setSidebarCollapsed","startTour","setTourStep","endTour","setGlobalSearch","store","configureStore","poList","poDetail","visualization","ui","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","useAppDispatch","useDispatch","DashboardPage","poItems","poLoading","useSelector","metricsData","metricsLoading","useEffect","getStatusBadgeVariant","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","DateTimeFormat","year","month","day","recentPOs","xl","Card","Body","role","width","s","lg","colSpan","Badge","height","POListPage","navigate","useNavigate","showBatchModal","setShowBatchModal","batchOperation","setBatchOperation","batchStatus","setBatchStatus","hasSelectedItems","areAllSelected","every","includes","selectedTotalValue","handleOpenBatchModal","handlePageChange","pageNumber","handleCancelBatchOperation","paginationItems","currentPage","startPage","max","endPage","min","Pagination","active","Group","Label","Text","type","onChange","searchValue","target","Select","days","parseInt","isNaN","disabled","Table","hover","Check","checked","handleToggleSelection","stopPropagation","deliveryInfo","handleViewPO","title","First","Prev","Next","Last","Modal","show","onHide","backdrop","centered","closeButton","Title","required","Footer","toDate","argument","argStr","prototype","call","constructor","NaN","constructFrom","addDays","_date","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","addMilliseconds","millisecondsInWeek","millisecondsInMinute","millisecondsInHour","defaultOptions","getDefaultOptions","startOfWeek","options","weekStartsOn","locale","getDay","diff","setHours","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfDay","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","compareAsc","_dateLeft","_dateRight","isValid","Number","differenceInDays","sign","compareLocalAsc","difference","abs","getRoundingMethod","method","number","trunc","differenceInMilliseconds","endOfDay","endOfMonth","differenceInMonths","differenceInCalendarMonths","isLastMonthNotFull","isLastDayOfMonth","differenceInYears","differenceInCalendarYears","startOfYear","cleanDate","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","defaultWidth","formats","formatLong","full","long","short","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","array","predicate","findIndex","pattern","test","object","hasOwnProperty","valueCallback","rest","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","firstWeekContainsDate","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","padStart","lightFormatters","y","signedYear","M","d","dayPeriodEnumValue","toUpperCase","h","H","m","S","numberOfDigits","milliseconds","pow","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","getDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","input","_message","subject","RangeError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","Setter","validate","_utcDate","ValueSetter","validateValue","setValue","priority","subPriority","super","set","flags","DateToSystemTimezoneSetter","arguments","timestampIsSet","fromDate","transpose","Parser","run","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","setDay","currentDay","delta","setISODay","getISODay","parsers","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setWeek","setISOWeek","isLeapYear","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","referenceDate","assign","getInternalDefaultOptions","subFnOptions","setters","tokens","usedTokens","parser","incompatibleTokens","incompatibleToken","usedToken","fullToken","uniquePrioritySetters","setterArray","parseISO","additionalDigits","dateStrings","patterns","dateTimeDelimiter","timeString","timeZoneDelimiter","timezone","exec","splitDateString","parseYearResult","regex","captures","restDateString","century","parseYear","dateRegex","isWeekDate","parseDateUnit","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","validateDate","validateDayOfYearDate","parseDate","timestamp","timeRegex","parseTimeUnit","validateTime","parseTime","dirtyDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","_hours","validateTimezone","parseTimezone","parseFloat","ValidationService","validateForStatus","_status","requirements","validationResults","errors","warnings","requirement","_executeValidator","some","criticalField","field","validatePOData","email","weights","grossWeight","netWeight","calculatedTotal","validator","Function","RequirementsChecklist","validationResult","propValidationResult","totalRequirements","keys","satisfiedRequirements","completionPercentage","warning","FileUploader","onFileUpload","acceptedFileTypes","maxFileSize","multiple","fileInputRef","useRef","isDragOver","setIsDragOver","setStatus","setErrorMessage","uploadProgress","setUploadProgress","handleFileSelect","useCallback","files","fileArray","validationError","validateFiles","uploadFiles","acceptedTypesArray","trim","fileExtension","pop","uploadedFiles","progress","newProgress","setTimeout","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","handleBrowseClick","current","click","handleFileInputChange","HTMLInputElement","containerClassName","ref","accept","display","onDragOver","onDragLeave","onDrop","UploadedStatusPanel","statusDefinition","onUpdate","onStatusChange","canTransitionToConfirmed","allowedTransitions","CONFIRMED","confirmationNotes","setConfirmationNotes","isSubmitting","setIsSubmitting","setError","success","setSuccess","supportingDocuments","setSupportingDocuments","poEdits","setPOEdits","handleInputChange","prev","Alert","onClose","createdAt","ListGroup","onSubmit","buyerName","buyerEmail","deliveryInstructions","instructions","documents","doc","uploadedAt","err","controlId","rows","handleRemoveFile","fileId","ConfirmedStatusPanel","canTransitionToShipped","SHIPPED","shippingData","setShippingData","shippingDate","carrier","trackingNumber","estimatedDeliveryDate","shippingDocuments","setShippingDocuments","validated","setValidated","prevData","history","confirmationEvent","entry","getConfirmationDate","address","noValidate","currentTarget","checkValidity","shipping","Feedback","ShippedStatusPanel","canTransitionToInvoiced","INVOICED","invoiceData","setInvoiceData","invoiceNumber","invoiceDate","dueDate","submitting","setSubmitting","handleDateChange","invoice","step","InvoicedStatusPanel","canTransitionToDelivered","todayFormatted","deliveryData","setDeliveryData","receivedBy","condition","deliveryDocuments","setDeliveryDocuments","href","rel","actualDeliveryDate","DeliveredStatusPanel","paymentNotes","setPaymentNotes","paymentDate","setPaymentDate","getConditionVariant","getConditionText","xs","isInvoiceOverdue","pill","paidDate","maxHeight","overflowY","CancelledStatusPanel","isReactivating","setIsReactivating","getCancellationDetails","cancellationEvent","CANCELLED","user","cancellationDetails","cancellationDate","canReactivate","reactivationStatus","UPLOADED","reverse","sm","StatusActionPanel","setStatusDefinition","setRequirements","setValidationResult","setLoading","statusData","validation","fetchStatusRequirements","handleStatusChange","panelProps","renderStatusPanel","WorkflowVisualizer","currentStatus","statusHistory","workflowData","setWorkflowData","transformWorkflowData","nodes","colorEnum","isCurrent","links","targetId","source","isAvailable","fetchWorkflow","svgRef","renderFn","dependencies","svg","d3.select","useD3","svgElement","node","clientWidth","clientHeight","selectAll","remove","simulation","d3.forceSimulation","force","d3.forceLink","d3.forceManyBody","strength","d3.forceCenter","d3.forceCollide","radius","link","attr","enter","on","text","select","duration","simulation$1","link$1","viewBox","preserveAspectRatio","navigateFunction","window","routerError","pathStr","fallbackError","Navigation","PODetailPage","useParams","activeTab","setActiveTab","unwrap","getStatusVariant","Spinner","animation","Heading","Tabs","activeKey","onSelect","Tab","eventKey","packSize","POCreatePage","showSuccess","setShowSuccess","setFormData","buyerFirstName","buyerLastName","locationName","locationAddress","productItems","setProductItems","price","handleProductChange","prevItems","updatedItem","calculateTotal","submitPO","revision","createdPO","scrollTo","newId","bordered","handleRemoveProduct","DebugHelper","componentDidMount","componentName","props","DEBUG_ENABLED","componentWillUnmount","componentDidUpdate","prevProps","nextProps","renderError","dataFetch","dataType","details","visualizationRendered","renderedItems","renderTime","ErrorBoundary","Component","setState","hasError","errorInfo","onRetry","getDerivedStateFromError","componentDidCatch","componentStack","render","customFallback","fallback","handleReset","CalendarView","lazy","import","__VITE_PRELOAD__","KanbanBoard","TimelineView","GeographicMap","PlanningHubPage","setViewMode","isLoading","setIsLoading","calendarDateField","setCalendarDateField","calendarDateRange","setCalendarDateRange","calendarRange","setCalendarRange","kanbanGroupBy","setKanbanGroupBy","kanbanSortBy","setKanbanSortBy","kanbanFilterStatus","setKanbanFilterStatus","timelineRange","setTimelineRange","timelineGroupBy","setTimelineGroupBy","timelineMilestoneType","setTimelineMilestoneType","mapRegion","setMapRegion","mapTimePeriod","setMapTimePeriod","mapDeliveryStatus","setMapDeliveryStatus","setSelectedItems","isBatchProcessing","setIsBatchProcessing","refreshCurrentView","totalPOCount","setTotalPOCount","loadingPlaceholder","useMemo","minHeight","handleCalendarViewChange","handleKanbanViewChange","handleTimelineViewChange","handleMapViewChange","handleApplyFilters","handleBatchSelectionChange","handleBatchOperation","handlePOSelect","navError","safeRender","handleRenderError","Content","Pane","Suspense","dateField","range","onPOSelect","sortBy","filterStatus","timeRange","onTimeRangeChange","newRange","milestoneType","region","deliveryStatus","timePeriod","onBatchSelectionChange","Chart","register","registerables","LineChart","chartRef","chartInstanceRef","responsive","maintainAspectRatio","plugins","legend","tooltip","mode","intersect","scales","grid","beginAtZero","destroy","ctx","getContext","PieChart","legendPosition","labels","usePointStyle","padding","font","callbacks","formattedValue","dataset","acc","raw","cutout","BarChart","horizontal","indexAxis","stacked","FORMATS","datetime","millisecond","second","minute","hour","_adapters","override","_id","fmt","add","addSeconds","addMinutes","addHours","addWeeks","addQuarters","addYears","roundingMethod","differenceInSeconds","differenceInMinutes","differenceInHours","differenceInWeeks","differenceInQuarters","startOf","weekday","startOfSecond","startOfMinute","startOfHour","startOfMonth","currentMonth","startOfQuarter","endOf","endOfSecond","endOfMinute","endOfHour","endOfWeek","endOfQuarter","endOfYear","ForecastChart","historicalData","forecastData","xAxisLabel","yAxisLabel","formatData","datasets","point","borderColor","backgroundColor","borderWidth","pointRadius","pointBackgroundColor","fill","tension","borderDash","upperPoints","lowerPoints","boxWidth","parsed","toLocaleDateString","tooltipFormat","displayFormats","interaction","axis","elements","line","MetricsDashboardPage","setTimeRange","refreshInterval","setRefreshInterval","isRefreshing","setIsRefreshing","lastUpdated","setLastUpdated","updateDateFilters","loadMetricsData","intervalId","setInterval","refreshMetricsData","clearInterval","formattedStartDate","formattedEndDate","then","catch","finally","handleTimeRangeChange","getVolumeChartData","sortedDates","getStatusChartData","statusColors","hoverOffset","percentages","colors","getProcessingTimeChartData","stages","times","stage","str","getForecastChartData","formatNumber","num","minimumFractionDigits","maximumFractionDigits","onTimeDelivery","avgProcessingTime","ordersChange","valueChange","deliveryChange","processingChange","toLocaleString","borderLeft","supplier","NotFoundPage","back","App","React","Routes","Route","element","Navigate","ReactDOM","createRoot","document","getElementById","StrictMode","Provider","BrowserRouter"],"ignoreList":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"sources":["../../src/components/common/AppHeader.tsx","../../src/components/common/AppSidebar.tsx","../../src/components/common/AppFooter.tsx","../../src/services/ApiService.ts","../../src/utils/env.ts","../../src/store/slices/poListSlice.ts","../../src/store/slices/poDetailSlice.ts","../../src/store/slices/visualizationSlice.ts","../../src/types/purchaseOrder.ts","../../src/utils/logger.ts","../../src/store/slices/metricsSlice.ts","../../src/utils/metricsBuilder.ts","../../src/store/slices/uiSlice.ts","../../src/store/index.ts","../../src/pages/DashboardPage.tsx","../../src/pages/POListPage.tsx","../../node_modules/date-fns/toDate.mjs","../../node_modules/date-fns/constructFrom.mjs","../../node_modules/date-fns/addDays.mjs","../../node_modules/date-fns/addMonths.mjs","../../node_modules/date-fns/addMilliseconds.mjs","../../node_modules/date-fns/constants.mjs","../../node_modules/date-fns/_lib/defaultOptions.mjs","../../node_modules/date-fns/startOfWeek.mjs","../../node_modules/date-fns/startOfISOWeek.mjs","../../node_modules/date-fns/getISOWeekYear.mjs","../../node_modules/date-fns/startOfDay.mjs","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","../../node_modules/date-fns/differenceInCalendarDays.mjs","../../node_modules/date-fns/compareAsc.mjs","../../node_modules/date-fns/isValid.mjs","../../node_modules/date-fns/isDate.mjs","../../node_modules/date-fns/differenceInDays.mjs","../../node_modules/date-fns/_lib/getRoundingMethod.mjs","../../node_modules/date-fns/differenceInMilliseconds.mjs","../../node_modules/date-fns/endOfDay.mjs","../../node_modules/date-fns/endOfMonth.mjs","../../node_modules/date-fns/differenceInMonths.mjs","../../node_modules/date-fns/differenceInCalendarMonths.mjs","../../node_modules/date-fns/isLastDayOfMonth.mjs","../../node_modules/date-fns/differenceInYears.mjs","../../node_modules/date-fns/differenceInCalendarYears.mjs","../../node_modules/date-fns/startOfYear.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","../../node_modules/date-fns/locale/_lib/buildMatchFn.mjs","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","../../node_modules/date-fns/locale/en-US.mjs","../../node_modules/date-fns/locale/en-US/_lib/localize.mjs","../../node_modules/date-fns/locale/en-US/_lib/match.mjs","../../node_modules/date-fns/getISOWeek.mjs","../../node_modules/date-fns/startOfISOWeekYear.mjs","../../node_modules/date-fns/getWeekYear.mjs","../../node_modules/date-fns/getWeek.mjs","../../node_modules/date-fns/startOfWeekYear.mjs","../../node_modules/date-fns/_lib/addLeadingZeros.mjs","../../node_modules/date-fns/_lib/format/lightFormatters.mjs","../../node_modules/date-fns/_lib/format/formatters.mjs","../../node_modules/date-fns/getDayOfYear.mjs","../../node_modules/date-fns/_lib/format/longFormatters.mjs","../../node_modules/date-fns/_lib/protectedTokens.mjs","../../node_modules/date-fns/format.mjs","../../node_modules/date-fns/parse/_lib/Setter.mjs","../../node_modules/date-fns/transpose.mjs","../../node_modules/date-fns/parse/_lib/Parser.mjs","../../node_modules/date-fns/parse/_lib/constants.mjs","../../node_modules/date-fns/parse/_lib/utils.mjs","../../node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","../../node_modules/date-fns/setDay.mjs","../../node_modules/date-fns/setISODay.mjs","../../node_modules/date-fns/getISODay.mjs","../../node_modules/date-fns/parse/_lib/parsers.mjs","../../node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","../../node_modules/date-fns/setWeek.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","../../node_modules/date-fns/setISOWeek.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","../../node_modules/date-fns/parse.mjs","../../node_modules/date-fns/getDefaultOptions.mjs","../../node_modules/date-fns/parseISO.mjs","../../src/services/ValidationService.ts","../../src/components/validations/RequirementsChecklist.tsx","../../src/components/common/FileUploader.tsx","../../src/components/action-panels/status-panels/UploadedStatusPanel.tsx","../../src/components/action-panels/status-panels/ConfirmedStatusPanel.tsx","../../src/components/action-panels/status-panels/ShippedStatusPanel.tsx","../../src/components/action-panels/status-panels/InvoicedStatusPanel.tsx","../../src/components/action-panels/status-panels/DeliveredStatusPanel.tsx","../../src/components/action-panels/status-panels/CancelledStatusPanel.tsx","../../src/components/action-panels/StatusActionPanel.tsx","../../src/components/status-workflow/WorkflowVisualizer.tsx","../../src/hooks/useD3.ts","../../src/utils/navigation.ts","../../src/pages/PODetailPage.tsx","../../src/pages/POCreatePage.tsx","../../src/utils/debugHelper.ts","../../src/components/common/ErrorBoundary.tsx","../../src/pages/PlanningHubPage.tsx","../../src/components/charts/LineChart.tsx","../../src/components/charts/PieChart.tsx","../../src/components/charts/BarChart.tsx","../../node_modules/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js","../../node_modules/date-fns/addSeconds.mjs","../../node_modules/date-fns/addMinutes.mjs","../../node_modules/date-fns/addHours.mjs","../../node_modules/date-fns/addWeeks.mjs","../../node_modules/date-fns/addQuarters.mjs","../../node_modules/date-fns/addYears.mjs","../../node_modules/date-fns/differenceInSeconds.mjs","../../node_modules/date-fns/differenceInMinutes.mjs","../../node_modules/date-fns/differenceInHours.mjs","../../node_modules/date-fns/differenceInWeeks.mjs","../../node_modules/date-fns/differenceInQuarters.mjs","../../node_modules/date-fns/startOfSecond.mjs","../../node_modules/date-fns/startOfMinute.mjs","../../node_modules/date-fns/startOfHour.mjs","../../node_modules/date-fns/startOfMonth.mjs","../../node_modules/date-fns/startOfQuarter.mjs","../../node_modules/date-fns/endOfSecond.mjs","../../node_modules/date-fns/endOfMinute.mjs","../../node_modules/date-fns/endOfHour.mjs","../../node_modules/date-fns/endOfWeek.mjs","../../node_modules/date-fns/endOfQuarter.mjs","../../node_modules/date-fns/endOfYear.mjs","../../src/components/charts/ForecastChart.tsx","../../src/pages/MetricsDashboardPage.tsx","../../src/pages/NotFoundPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React from 'react';\nimport { Navbar, Container, Nav, Dropdown, Button, Form, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n/**\n * AppHeader Component\n * \n * The main navigation header for the application.\n * Provides access to search, notifications, user profile, and main navigation links.\n */\nconst AppHeader: React.FC = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" className=\"app-header py-2\">\n      <Container fluid>\n        <Navbar.Brand as={Link} to=\"/dashboard\" className=\"me-4\">\n          <i className=\"bi bi-box me-2\"></i>\n          PO Management System\n        </Navbar.Brand>\n        \n        <div className=\"d-flex\">\n          {/* Mobile menu toggle */}\n          <Navbar.Toggle aria-controls=\"app-navbar\" className=\"me-2\" />\n          \n          {/* Profile dropdown - always visible */}\n          <Dropdown align=\"end\">\n            <Dropdown.Toggle variant=\"link\" id=\"dropdown-profile\" className=\"text-white p-0\">\n              <div className=\"avatar-circle bg-white text-primary\">\n                <span>AJ</span>\n              </div>\n            </Dropdown.Toggle>\n            \n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"bi bi-person me-2\"></i>\n                Profile\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"bi bi-gear me-2\"></i>\n                Settings\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item>\n                <i className=\"bi bi-box-arrow-right me-2\"></i>\n                Sign Out\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        \n        <Navbar.Collapse id=\"app-navbar\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/dashboard\">\n              <i className=\"bi bi-speedometer2 me-1\"></i>\n              Dashboard\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/purchase-orders\">\n              <i className=\"bi bi-file-text me-1\"></i>\n              Purchase Orders\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/planning-hub\">\n              <i className=\"bi bi-calendar3 me-1\"></i>\n              Planning Hub\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/metrics\">\n              <i className=\"bi bi-graph-up me-1\"></i>\n              Metrics\n            </Nav.Link>\n          </Nav>\n          \n          <div className=\"d-flex align-items-center\">\n            {/* Search */}\n            <Form className=\"d-none d-lg-flex me-3\">\n              <InputGroup>\n                <Form.Control\n                  placeholder=\"Search PO#, Supplier...\"\n                  aria-label=\"Search\"\n                  size=\"sm\"\n                />\n                <Button variant=\"outline-light\" size=\"sm\">\n                  <i className=\"bi bi-search\"></i>\n                </Button>\n              </InputGroup>\n            </Form>\n            \n            {/* Notifications */}\n            <Dropdown align=\"end\" className=\"me-3\">\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-notifications\" className=\"text-white p-0\">\n                <i className=\"bi bi-bell fs-5\"></i>\n                <span className=\"notification-badge\">3</span>\n              </Dropdown.Toggle>\n              \n              <Dropdown.Menu className=\"dropdown-menu-lg\">\n                <Dropdown.Header>\n                  You have 3 new notifications\n                </Dropdown.Header>\n                <Dropdown.Divider />\n                \n                <Dropdown.Item>\n                  <div className=\"notification-item\">\n                    <div className=\"icon bg-primary\">\n                      <i className=\"bi bi-truck\"></i>\n                    </div>\n                    <div className=\"content\">\n                      <div className=\"title\">PO123456 has been shipped</div>\n                      <div className=\"time\">5 minutes ago</div>\n                    </div>\n                  </div>\n                </Dropdown.Item>\n                \n                <Dropdown.Item>\n                  <div className=\"notification-item\">\n                    <div className=\"icon bg-warning\">\n                      <i className=\"bi bi-exclamation-triangle\"></i>\n                    </div>\n                    <div className=\"content\">\n                      <div className=\"title\">PO654321 requires attention</div>\n                      <div className=\"time\">1 hour ago</div>\n                    </div>\n                  </div>\n                </Dropdown.Item>\n                \n                <Dropdown.Item>\n                  <div className=\"notification-item\">\n                    <div className=\"icon bg-success\">\n                      <i className=\"bi bi-check-circle\"></i>\n                    </div>\n                    <div className=\"content\">\n                      <div className=\"title\">PO789012 has been delivered</div>\n                      <div className=\"time\">Yesterday</div>\n                    </div>\n                  </div>\n                </Dropdown.Item>\n                \n                <Dropdown.Divider />\n                <Dropdown.Item className=\"text-center\">\n                  View All Notifications\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            \n            {/* Create PO Button */}\n            <Button \n              variant=\"light\" \n              size=\"sm\" \n              className=\"fw-bold\">\n              <i className=\"bi bi-plus-lg me-2\"></i>\n              <Link to=\"/purchase-orders/create\" className=\"text-decoration-none text-dark\">\n                New PO\n              </Link>\n            </Button>\n          </div>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default AppHeader;","import React, { useState } from 'react';\nimport { Nav, Button } from 'react-bootstrap';\nimport { NavLink, useLocation } from 'react-router-dom';\n\n/**\n * AppSidebar Component\n * \n * The main navigation sidebar for the application.\n * Provides quick access to primary sections of the app with visual indicators\n * for the current active section.\n */\nconst AppSidebar: React.FC = () => {\n  const location = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n  \n  const toggleSidebar = () => {\n    setCollapsed(!collapsed);\n  };\n  \n  // Helper to determine if a path is active (exact or starts with)\n  const isPathActive = (path: string): boolean => {\n    if (path === '/') return location.pathname === '/';\n    return location.pathname.startsWith(path);\n  };\n  \n  return (\n    <div className={`app-sidebar ${collapsed ? 'collapsed' : ''}`}>\n      <div className=\"sidebar-header d-flex justify-content-between align-items-center p-3\">\n        {!collapsed && (\n          <h5 className=\"m-0\">Navigation</h5>\n        )}\n        <Button \n          variant=\"link\" \n          className=\"p-1 text-secondary border-0\"\n          onClick={toggleSidebar}\n          aria-label={collapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n        >\n          <i className={`bi ${collapsed ? 'bi-chevron-right' : 'bi-chevron-left'}`}></i>\n        </Button>\n      </div>\n      \n      <Nav className=\"flex-column p-2\" as=\"ul\">\n        <Nav.Item as=\"li\">\n          <NavLink \n            to=\"/dashboard\" \n            className={({isActive}) => \n              `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n            }\n          >\n            <i className=\"bi bi-speedometer2 me-3\"></i>\n            {!collapsed && <span>Dashboard</span>}\n          </NavLink>\n        </Nav.Item>\n        \n        <Nav.Item as=\"li\">\n          <NavLink \n            to=\"/purchase-orders\" \n            className={({isActive}) => \n              `nav-link d-flex align-items-center ${isActive || isPathActive('/purchase-orders') ? 'active' : ''}`\n            }\n          >\n            <i className=\"bi bi-file-text me-3\"></i>\n            {!collapsed && <span>Purchase Orders</span>}\n          </NavLink>\n        </Nav.Item>\n        \n        <Nav.Item as=\"li\">\n          <NavLink \n            to=\"/planning-hub\" \n            className={({isActive}) => \n              `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n            }\n          >\n            <i className=\"bi bi-calendar3 me-3\"></i>\n            {!collapsed && <span>Planning Hub</span>}\n          </NavLink>\n        </Nav.Item>\n        \n        <Nav.Item as=\"li\">\n          <NavLink \n            to=\"/metrics\" \n            className={({isActive}) => \n              `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n            }\n          >\n            <i className=\"bi bi-graph-up me-3\"></i>\n            {!collapsed && <span>Metrics & Analytics</span>}\n          </NavLink>\n        </Nav.Item>\n        \n        {!collapsed && (\n          <>\n            <div className=\"sidebar-divider my-3\"></div>\n            \n            <div className=\"sidebar-heading px-3 py-2 text-muted text-uppercase small\">\n              Quick Actions\n            </div>\n            \n            <Nav.Item as=\"li\">\n              <NavLink \n                to=\"/purchase-orders/create\" \n                className={({isActive}) => \n                  `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n                }\n              >\n                <i className=\"bi bi-plus-circle me-3\"></i>\n                <span>Create New PO</span>\n              </NavLink>\n            </Nav.Item>\n            \n            <Nav.Item as=\"li\">\n              <NavLink \n                to=\"/reports\" \n                className={({isActive}) => \n                  `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n                }\n              >\n                <i className=\"bi bi-file-earmark-bar-graph me-3\"></i>\n                <span>Reports</span>\n              </NavLink>\n            </Nav.Item>\n            \n            <div className=\"sidebar-divider my-3\"></div>\n            \n            <div className=\"sidebar-heading px-3 py-2 text-muted text-uppercase small\">\n              Support\n            </div>\n            \n            <Nav.Item as=\"li\">\n              <NavLink \n                to=\"/help\" \n                className={({isActive}) => \n                  `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n                }\n              >\n                <i className=\"bi bi-question-circle me-3\"></i>\n                <span>Help & Documentation</span>\n              </NavLink>\n            </Nav.Item>\n            \n            <Nav.Item as=\"li\">\n              <NavLink \n                to=\"/settings\" \n                className={({isActive}) => \n                  `nav-link d-flex align-items-center ${isActive ? 'active' : ''}`\n                }\n              >\n                <i className=\"bi bi-gear me-3\"></i>\n                <span>Settings</span>\n              </NavLink>\n            </Nav.Item>\n          </>\n        )}\n      </Nav>\n      \n      {!collapsed && (\n        <div className=\"sidebar-footer p-3 mt-auto\">\n          <div className=\"d-flex align-items-center bg-light p-2 rounded\">\n            <div className=\"avatar-circle bg-primary text-white me-3\">\n              <span>AJ</span>\n            </div>\n            <div>\n              <div className=\"fw-bold\">Alex Johnson</div>\n              <div className=\"text-muted small\">Procurement Manager</div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AppSidebar;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n/**\n * AppFooter Component\n * \n * Footer component for the application that includes company information, \n * quick links, and copyright notice.\n */\nconst AppFooter: React.FC = () => {\n  const currentYear = new Date().getFullYear();\n  \n  return (\n    <footer className=\"app-footer bg-light mt-auto py-3 border-top\">\n      <Container>\n        <Row className=\"align-items-center g-3\">\n          <Col md={4} className=\"text-center text-md-start\">\n            <div className=\"d-flex flex-column\">\n              <span className=\"fw-bold mb-1\">PO Management System</span>\n              <span className=\"text-muted small\">Version 1.2.3</span>\n            </div>\n          </Col>\n          \n          <Col md={4} className=\"text-center\">\n            <ul className=\"list-inline mb-0\">\n              <li className=\"list-inline-item\">\n                <Link to=\"/help\" className=\"text-decoration-none text-muted\">\n                  Help\n                </Link>\n              </li>\n              <li className=\"list-inline-item\">•</li>\n              <li className=\"list-inline-item\">\n                <Link to=\"/privacy\" className=\"text-decoration-none text-muted\">\n                  Privacy\n                </Link>\n              </li>\n              <li className=\"list-inline-item\">•</li>\n              <li className=\"list-inline-item\">\n                <Link to=\"/terms\" className=\"text-decoration-none text-muted\">\n                  Terms\n                </Link>\n              </li>\n            </ul>\n          </Col>\n          \n          <Col md={4} className=\"text-center text-md-end\">\n            <span className=\"text-muted small\">\n              &copy; {currentYear} Company, Inc. All rights reserved.\n            </span>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default AppFooter;","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\nimport { getApiBaseUrl } from '@/utils/env';\nimport { \n  PurchaseOrder, \n  POSearchParams, \n  POSearchResult, \n  POStatus,\n  StatusDefinition,\n  ValidationResult,\n  StatusTransition\n} from '@/types/purchaseOrder';\n\n\n// Types for metrics responses\nexport interface ChangeMetric {\n  value: number;\n  direction: 'up' | 'down' | 'flat';\n}\n\nexport interface StatusMetric {\n  status: POStatus;\n  count: number;\n  percentage: number;\n}\n\nexport interface TimelineMetric {\n  date: string;\n  count: number;\n  value: number;\n}\n\nexport interface SupplierMetric {\n  name: string;\n  count: number;\n  totalValue: number;\n  onTimePercentage: number;\n}\n\nexport interface MetricsSummary {\n  totalOrders: number;\n  totalValue: number;\n  onTimePercentage: number;\n  changeFromPrevious: {\n    orders: ChangeMetric;\n    value: ChangeMetric;\n    onTime: ChangeMetric;\n  };\n  statusDistribution: StatusMetric[];\n  timeline: TimelineMetric[];\n  topBuyers: SupplierMetric[];\n}\n\nexport interface DetailedMetrics {\n  processingTimes: Record<string, number>;\n  forecastData: {\n    predictions: Array<{ date: string; value: number }>;\n    confidenceInterval: {\n      upper: Array<{ date: string; value: number }>;\n      lower: Array<{ date: string; value: number }>;\n    };\n  };\n  riskAssessment: {\n    highRiskCount: number;\n    mediumRiskCount: number;\n    lowRiskCount: number;\n    topRisks: Array<{ type: string; count: number; impact: string }>;\n  };\n}\n\n/**\n * Configuration for the API service\n */\ninterface ApiConfig {\n  baseURL: string;\n  timeout: number;\n  withCredentials: boolean;\n}\n\n/**\n * ApiService\n * \n * A comprehensive service for communicating with the backend API.\n * Provides type-safe methods for all API operations with error handling.\n */\nexport class ApiService {\n  private static instance: AxiosInstance;\n  private static readonly PAGE_SIZE = 10;\n  // Base URL for API requests - ensure it doesn't have a trailing slash\n  private static readonly API_BASE_URL = getApiBaseUrl().replace(/\\/+$/, '');\n  private static readonly METRICS_PATH = '/metrics';\n  \n  \n  /**\n   * Initialize the API service with configuration\n   */\n  private static initialize(): void {\n    if (!this.instance) {\n      const config: ApiConfig = {\n        baseURL: this.API_BASE_URL,\n        timeout: 30000, // 30 seconds\n        withCredentials: true\n      };\n      \n      this.instance = axios.create(config);\n      \n      // Request interceptor for API calls\n      this.instance.interceptors.request.use(\n        (config) => {\n          // Log base URL being used\n          console.log('[API] Using base URL:', config.baseURL);\n          // You can add auth headers or other request transformations here\n          return config;\n        },\n        (error) => {\n          return Promise.reject(error);\n        }\n      );\n      \n      // Response interceptor for API calls\n      this.instance.interceptors.response.use(\n        (response: AxiosResponse) => response,\n        (error: AxiosError) => {\n          const errorMessage = this.handleApiError(error);\n          return Promise.reject(new Error(errorMessage));\n        }\n      );\n    }\n  }\n  \n  /**\n   * Handle API errors and provide consistent error messages\n   */\n  private static handleApiError(error: AxiosError): string {\n    if (error.response) {\n      // The request was made and the server responded with a non-2xx status\n      const data = error.response.data as any;\n      return data.message || data.error || `Error: ${error.response.status} ${error.response.statusText}`;\n    } else if (error.request) {\n      // The request was made but no response was received\n      return 'No response received from server. Please check your connection and try again.';\n    } else {\n      // Something happened in setting up the request that triggered an error\n      return error.message || 'An unexpected error occurred';\n    }\n  }\n  \n  /**\n   * Build URL query parameters from an object\n   */\n  private static buildQueryParams(params: Record<string, any>): URLSearchParams {\n    const queryParams = new URLSearchParams();\n    \n    for (const [key, value] of Object.entries(params)) {\n      if (value !== undefined && value !== null && value !== '') {\n        if (Array.isArray(value)) {\n          value.forEach((item) => queryParams.append(key, String(item)));\n        } else {\n          queryParams.append(key, String(value));\n        }\n      }\n    }\n    return queryParams;\n  }\n  \n  /**\n   * Fetch a list of purchase orders with optional filtering\n   */\n  public static async fetchPOs(params: Partial<POSearchParams> = {}): Promise<POSearchResult> {\n    this.initialize();\n    const queryParams: Record<string, any> = {\n      limit: this.PAGE_SIZE,\n      offset: ((params.page || 1) - 1) * this.PAGE_SIZE,\n      ...params\n    };\n    const url = `/search?${this.buildQueryParams(queryParams).toString()}`;\n    try {\n      const response = await this.instance.get<POSearchResult | PurchaseOrder[]>(url);\n      // Handle different response structures\n      if (Array.isArray(response.data)) {\n\n        // If response is a simple array of POs, convert it to POSearchResult format\n        return {\n          data: response.data as PurchaseOrder[],\n          metadata: {\n            total: response.data.length,\n            page: params.page || 1,\n            pages: Math.ceil(response.data.length / this.PAGE_SIZE),\n            limit: this.PAGE_SIZE\n          }\n        };\n      } else if (response.data.data && response.data.metadata) {\n        // Response already in expected format\n        return response.data as POSearchResult;\n      } else {\n        // Handle unexpected response structure\n        return {\n          data: [response.data] as unknown as PurchaseOrder[],\n          metadata: {\n            total: 1,\n            page: 1,\n            pages: 1,\n            limit: this.PAGE_SIZE\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error fetching POs:', error);\n      \n      throw error instanceof Error ? error : new Error('Failed to fetch purchase orders');\n    }\n  }\n  \n  /**\n   * Fetch a single purchase order by number\n   */\n  public static async fetchPO(poNumber: string): Promise<PurchaseOrder> {\n    this.initialize();\n    \n    console.log('Fetching PO details for:', poNumber);\n    console.log('API URL:', `${this.API_BASE_URL}/${poNumber}`);\n    \n    try {\n      const response = await this.instance.get<PurchaseOrder>(`/${poNumber}`);\n      console.log('PO details response:', response.data);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to fetch PO ${poNumber}`);\n    }\n  }\n  \n  /**\n   * Create a new purchase order\n   */\n  public static async createPO(poData: PurchaseOrder): Promise<PurchaseOrder> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.post<PurchaseOrder>('', poData);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to create purchase order');\n    }\n  }\n  \n  /**\n   * Update an existing purchase order\n   */\n  public static async updatePO(poNumber: string, poData: Partial<PurchaseOrder>): Promise<PurchaseOrder> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.put<PurchaseOrder>(`/${poNumber}`, poData);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to update PO ${poNumber}`);\n    }\n  }\n  \n  /**\n   * Delete a purchase order\n   */\n  public static async deletePO(poNumber: string): Promise<void> {\n    this.initialize();\n    \n    try {\n      await this.instance.delete(`/${poNumber}`);\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to delete PO ${poNumber}`);\n    }\n  }\n  \n  /**\n   * Update the status of a purchase order\n   */\n  public static async updateStatus(\n    poNumber: string, \n    newStatus: POStatus, \n    notes: string = '', \n    oldStatus?: POStatus\n  ): Promise<PurchaseOrder> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.patch<PurchaseOrder>(\n        `/${poNumber}/status`,\n        { status: newStatus, notes, oldStatus }\n      );\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to update status for PO ${poNumber}`);\n    }\n  }\n  \n  /**\n   * Fetch all available statuses\n   */\n  public static async getStatuses(): Promise<Record<string, StatusDefinition>> {\n    this.initialize();\n    \n    try {\n      console.log('Fetching statuses from URL:', `${this.API_BASE_URL}/statuses`);\n      \n      const response = await this.instance.get<Record<string, StatusDefinition>>(`/statuses`);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to fetch statuses');\n    }\n  }\n  \n  /**\n   * Get the initial status\n   */\n  public static async getInitialStatus(): Promise<StatusDefinition> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.get<StatusDefinition>(`/statuses/initial`);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to fetch initial status');\n    }\n  }\n  \n  /**\n   * Get a specific status by name\n   */\n  public static async getStatus(status: POStatus): Promise<StatusDefinition> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.get<StatusDefinition>(`/statuses/${status}`);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to fetch status ${status}`);\n    }\n  }\n  \n  /**\n   * Get available transitions for a status\n   */\n  public static async getAvailableTransitions(status: POStatus): Promise<POStatus[]> {\n    this.initialize();\n    const url = `/statuses/${status}/transitions`;\n    console.log('Fetching transitions for status URL:', `${this.API_BASE_URL}${url}`);\n    \n    try {\n      const response = await this.instance.get<POStatus[]>(url);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(`Failed to fetch transitions for status ${status}`);\n    }\n  }\n  \n  /**\n   * Validate a status transition\n   */\n  public static async validateTransition(\n    from: POStatus,\n    to: POStatus,\n    data: any\n  ): Promise<ValidationResult> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.post<ValidationResult>(`/validateTransition`, { from, to, data });\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to validate transition');\n    }\n  }\n  \n  /**\n   * Execute a status transition\n   */\n  public static async transition(\n    transition: StatusTransition\n  ): Promise<any> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.post<any>(`/transition`, transition);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to execute transition');\n    }\n  }\n  \n  /**\n   * Fetch basic metrics with optional filters\n   * @param params Filter parameters including date range\n   * @returns Promise with metrics data\n   */\n  public static async fetchMetrics(params: {\n    startDate?: string; \n    endDate?: string;\n    region?: string; \n  } = {}): Promise<any> {\n    this.initialize();\n    \n    try {\n      // Add query parameters if provided\n      const queryParams = this.buildQueryParams(params);\n      const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      const response = await this.instance.get<MetricsSummary>(this.METRICS_PATH + queryString);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n      throw error instanceof Error ? error : new Error('Failed to fetch metrics');\n    }\n  }\n  \n  /**\n   * Fetches summary metrics data\n   * @param params Filter parameters including date range\n   * @returns Promise with metrics data\n   */\n  public static async getMetricsSummary(params: {\n    startDate?: string; \n    endDate?: string;\n    region?: string;\n  } = {}): Promise<MetricsSummary> {\n    this.initialize();\n    \n    try {\n      const queryParams = this.buildQueryParams(params);\n      const response = await this.instance.get<MetricsSummary>(`${this.METRICS_PATH}/summary?${queryParams.toString()}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching metrics summary:', error);\n      throw error instanceof Error ? error : new Error('Failed to fetch metrics summary');\n    }\n  }\n  \n  /**\n   * Fetch detailed metrics\n   * @param params Filter parameters including date range\n   * @returns Promise with detailed metrics data\n   */\n  public static async fetchDetailedMetrics(params: {\n    startDate?: string; \n    endDate?: string;\n  } = {}): Promise<any> {\n    this.initialize();\n\n    try {\n      // Add query parameters if provided\n      const queryParams = this.buildQueryParams(params);\n      const queryString = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      const response = await this.instance.get<any>(`${this.METRICS_PATH}/detailed${queryString}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching detailed metrics:', error);\n      throw error instanceof Error ? error : new Error('Failed to fetch detailed metrics');\n    }\n  }\n  \n  /**\n   * Get detailed metrics data with filtering\n   * @param params Filter parameters\n   * @returns Promise with detailed metrics\n   */\n  public static async getDetailedMetrics(params: { \n    startDate?: string; \n    endDate?: string;\n    groupBy?: string;\n  } = {}): Promise<DetailedMetrics> {\n    this.initialize();\n    \n    try {\n      const queryParams = this.buildQueryParams(params);\n      const response = await this.instance.get<DetailedMetrics>(`${this.METRICS_PATH}/detailed?${queryParams.toString()}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching detailed metrics:', error);\n      throw error instanceof Error ? error : new Error('Failed to fetch detailed metrics');\n    }\n  }\n  \n  /**\n   * Perform bulk status update for multiple purchase orders\n   */\n  public static async bulkUpdateStatus(\n    poNumbers: string[],\n    newStatus: POStatus\n  ): Promise<any> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.post('/bulk-operations', {\n        poNumbers,\n        operation: 'status',\n        status: newStatus\n      });\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to perform bulk status update');\n    }\n  }\n  \n  /**\n   * Fetch category-specific metrics\n   */\n  public static async fetchCategoryMetrics(category: string): Promise<any> {\n    this.initialize();\n    \n    try {\n      const response = await this.instance.get<any>(`${this.METRICS_PATH}/${category}`);\n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to fetch category metrics');\n    }\n  }\n  \n  /**\n   * Upload a file (for attachments, etc.)\n   */\n  public static async uploadFile(\n    file: File, \n    metadata: Record<string, any> = {}\n  ): Promise<{ id: string; url: string }> {\n    this.initialize();\n    \n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      // Add any metadata as additional form fields\n      Object.entries(metadata).forEach(([key, value]) => {\n        formData.append(key, typeof value === 'string' ? value : JSON.stringify(value));\n      });\n      \n      const response = await this.instance.post<{ id: string; url: string }>(\n        '/upload',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n      \n      return response.data;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error('Failed to upload file');\n    }\n  }\n}","/**\n * Environment utility to centralize access to environment variables\n * This helps abstract away the differences between Vite's import.meta.env and Node's process.env\n */\n\n// Helper for checking development mode\nexport const isDevelopment = (): boolean => {\n  // Use import.meta.env for Vite\n  return import.meta.env.VITE_NODE_ENV === 'development' || \n         import.meta.env.DEV === true ||\n         import.meta.env.MODE === 'development';\n};\n\n// Helper for checking production mode\nexport const isProduction = (): boolean => {\n  return !isDevelopment();\n};\n\n// API URL with fallbacks\nexport const getApiBaseUrl = (): string => {\n  return import.meta.env.VITE_API_URL || '/api/po';\n};\n\n// Get any environment variable with a fallback\nexport const getEnv = (key: string, fallback: string): string => {\n  const value = (import.meta.env as Record<string, any>)[key];\n  return value !== undefined ? String(value) : fallback;\n};\n\n// For direct NODE_ENV access (compatibility layer)\nexport const getNodeEnv = (): string => {\n  return isDevelopment() ? 'development' : 'production';\n};\n\n// For build configuration\nexport const useEsbuild = (): boolean => {\n  return getEnv('VITE_USE_ESBUILD', 'false') === 'true';\n};\n\n// Export a default object for convenience\nexport default {\n  isDevelopment,\n  isProduction,\n  getApiBaseUrl,\n  getEnv,\n  getNodeEnv,\n  useEsbuild\n};","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { PurchaseOrder, POSearchParams, POSearchResult } from '@/types/purchaseOrder';\nimport { ApiService } from '@/services/ApiService';\n\n/**\n * State interface for the PO list\n */\ninterface POListState {\n  items: PurchaseOrder[];\n  filteredItems: PurchaseOrder[];\n  loading: boolean;\n  error: string | null;\n  pagination: {\n    page: number;\n    totalPages: number;\n    totalItems: number;\n    itemsPerPage: number;\n  };\n  filters: {\n    query: string;\n    status: string;\n    startDate: string | null;\n    endDate: string | null;\n    buyerIds: string[];\n    locationIds: string[];\n  };\n  selectedItems: string[]; // Store selected PO numbers for batch operations\n  batchOperations: {\n    processing: boolean;\n  };\n}\n\n/**\n * Initial state for the PO list\n */\nconst initialState: POListState = {\n  items: [],\n  filteredItems: [],\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    totalPages: 1,\n    totalItems: 0,\n    itemsPerPage: 10,\n  },\n  filters: {\n    query: '',\n    status: '',\n    startDate: null,\n    endDate: null,\n    buyerIds: [],\n    locationIds: [],\n  },\n  selectedItems: [],\n  batchOperations: {\n    processing: false,\n  }\n};\n\n/**\n * Async thunk to fetch purchase orders with search params\n */\nexport const fetchPurchaseOrders = createAsyncThunk(\n  'poList/fetchPurchaseOrders',\n  async (searchParams: Partial<POSearchParams>, { rejectWithValue }) => {\n    console.log('Fetching purchase orders with direct database connection...');\n    try {\n      // First attempt to fetch from MongoDB database\n      try {\n        console.log('Attempting to fetch POs from MongoDB...');\n        const result = await ApiService.fetchPOs({\n          ...searchParams,\n          limit: searchParams.limit || 100 // Ensure we get all available POs\n        });\n        \n        if (result.data && result.data.length > 0) {\n          console.log(`Successfully found ${result.data.length} purchase orders in database`);\n          \n          // Log sample PO numbers to verify data\n          const poNumbers = result.data.slice(0, 5).map(po => po.header?.poNumber || 'unknown');\n          console.log('Sample PO Numbers from database:', poNumbers);\n          \n          return result as POSearchResult;\n        }\n        return result as POSearchResult;\n      } catch (dbError) {\n        console.error('Error fetching from MongoDB:', dbError);\n        // If MongoDB fetch fails, fall back to regular API\n        console.log('Falling back to API endpoint...');\n        const fallbackResult = await ApiService.fetchPOs(searchParams);\n        return fallbackResult as POSearchResult;\n      }\n    } catch (error) {\n      console.error('Error in fetchPurchaseOrders:', error);\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch purchase orders');\n    }\n  }\n);\n\n/**\n * Async thunk to delete a purchase order\n */\nexport const deletePurchaseOrder = createAsyncThunk(\n  'poList/deletePurchaseOrder',\n  async (poNumber: string, { rejectWithValue, dispatch }) => {\n    try {\n      await ApiService.deletePO(poNumber);\n      // Refresh the list after deletion\n      dispatch(fetchPurchaseOrders({}));\n      return poNumber;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to delete purchase order');\n    }\n  }\n);\n\n/**\n * Async thunk to perform batch operations on multiple purchase orders\n */\nexport const performBatchOperation = createAsyncThunk(\n  'poList/performBatchOperation',\n  async ({ \n    poNumbers, \n    operation, \n    params \n  }: { \n    poNumbers: string[]; \n    operation: string; \n    params?: Record<string, any> \n  }, { rejectWithValue, dispatch }) => {\n    try {\n      if (poNumbers.length === 0) {\n        throw new Error('No purchase orders selected');\n      }\n\n      // Different operations require different API calls\n      if (operation === 'status' && params?.status) {\n        // Update status for multiple POs\n        const result = await ApiService.bulkUpdateStatus(poNumbers, params.status);\n        // Refresh the list after the batch operation\n        dispatch(fetchPurchaseOrders({}));\n        return result;\n      } else if (operation === 'delete') {\n        // Delete multiple POs\n        const result = await Promise.all(\n          poNumbers.map(poNumber => ApiService.deletePO(poNumber))\n        );\n        dispatch(fetchPurchaseOrders({}));\n        return result;\n      } else {\n        throw new Error(`Operation ${operation} not implemented or missing required parameters`);\n      }\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to perform batch operation');\n    }\n  }\n);\n\n/**\n * PO list slice with reducers and actions\n */\nconst poListSlice = createSlice({\n  name: 'poList',\n  initialState,\n  reducers: {\n    /**\n     * Set the current page for pagination\n     */\n    setPage: (state, action: PayloadAction<number>) => {\n      state.pagination.page = action.payload;\n    },\n    \n    /**\n     * Set the search query filter\n     */\n    setSearchQuery: (state, action: PayloadAction<string>) => {\n      state.filters.query = action.payload;\n      // Reset page when filter changes\n      state.pagination.page = 1;\n    },\n    \n    /**\n     * Set the status filter\n     */\n    setStatusFilter: (state, action: PayloadAction<string>) => {\n      state.filters.status = action.payload;\n      // Reset page when filter changes\n      state.pagination.page = 1;\n    },\n    \n    /**\n     * Set the date range filter\n     */\n    setDateRange: (state, action: PayloadAction<{ startDate: string | null; endDate: string | null }>) => {\n      state.filters.startDate = action.payload.startDate;\n      state.filters.endDate = action.payload.endDate;\n      // Reset page when filter changes\n      state.pagination.page = 1;\n    },\n    \n    /**\n     * Set the buyer IDs filter\n     */\n    setBuyerIds: (state, action: PayloadAction<string[]>) => {\n      state.filters.buyerIds = action.payload;\n      // Reset page when filter changes\n      state.pagination.page = 1;\n    },\n    \n    /**\n     * Set the location IDs filter\n     */\n    setLocationIds: (state, action: PayloadAction<string[]>) => {\n      state.filters.locationIds = action.payload;\n      // Reset page when filter changes\n      state.pagination.page = 1;\n    },\n    \n    /**\n     * Reset all filters to their initial values\n     */\n    resetFilters: (state) => {\n      state.filters = initialState.filters;\n      state.pagination.page = 1;\n    },\n\n    /**\n     * Toggle selection of a purchase order for batch operations\n     */\n    toggleItemSelection: (state, action: PayloadAction<string>) => {\n      const poNumber = action.payload;\n      const index = state.selectedItems.indexOf(poNumber);\n      \n      if (index === -1) {\n        state.selectedItems.push(poNumber);\n      } else {\n        state.selectedItems.splice(index, 1);\n      }\n    },\n\n    /**\n     * Set the selection state for all visible items\n     */\n    selectAllItems: (state, action: PayloadAction<boolean>) => {\n      if (action.payload) {\n        // Select all visible items\n        state.selectedItems = state.items.map(po => po.header.poNumber);\n      } else {\n        // Deselect all\n        state.selectedItems = [];\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Handle fetchPurchaseOrders pending state\n      .addCase(fetchPurchaseOrders.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle fetchPurchaseOrders fulfilled state\n      .addCase(fetchPurchaseOrders.fulfilled, (state, action) => {\n        state.loading = false;\n        // Handle both array and object with data property responses\n        if (Array.isArray(action.payload)) {\n          state.items = action.payload;\n          state.filteredItems = action.payload;\n          state.pagination.totalItems = action.payload.length;\n          state.pagination.totalPages = Math.ceil(action.payload.length / state.pagination.itemsPerPage);\n        } else {\n          state.items = action.payload.data;\n          state.filteredItems = action.payload.data;\n          state.pagination.totalItems = action.payload.metadata?.total || action.payload.data.length;\n          state.pagination.totalPages = action.payload.metadata?.pages || \n            Math.ceil((action.payload.metadata?.total || action.payload.data.length) / state.pagination.itemsPerPage);\n          state.pagination.page = action.payload.metadata?.page || state.pagination.page;\n        }\n      })\n      // Handle fetchPurchaseOrders rejected state\n      .addCase(fetchPurchaseOrders.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      // Handle deletePurchaseOrder pending state\n      .addCase(deletePurchaseOrder.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle deletePurchaseOrder rejected state\n      .addCase(deletePurchaseOrder.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      // Handle batch operation states\n      .addCase(performBatchOperation.pending, (state) => {\n        state.batchOperations.processing = true;\n        state.error = null;\n      })\n      .addCase(performBatchOperation.fulfilled, (state) => {\n        state.batchOperations.processing = false;\n        state.selectedItems = []; // Clear selections after successful operation\n      })\n      .addCase(performBatchOperation.rejected, (state, action) => {\n        state.batchOperations.processing = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\n// Export actions and reducer\nexport const { \n  setPage,\n  setSearchQuery,\n  setStatusFilter,\n  setDateRange,\n  setBuyerIds,\n  setLocationIds,\n  resetFilters,\n  toggleItemSelection,\n  selectAllItems\n} = poListSlice.actions;\n\nexport default poListSlice.reducer;","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { PurchaseOrder, POStatus } from '@/types/purchaseOrder';\nimport { ApiService } from '@/services/ApiService';\n\n/**\n * State interface for the PO detail\n */\ninterface PODetailState {\n  purchaseOrder: PurchaseOrder | null;\n  loading: boolean;\n  error: string | null;\n  availableTransitions: POStatus[];\n}\n\n/**\n * Initial state for the PO detail\n */\nconst initialState: PODetailState = {\n  purchaseOrder: null,\n  loading: false,\n  error: null,\n  availableTransitions: [],\n};\n\n/**\n * Async thunk to fetch a purchase order by ID/number\n */\nexport const fetchPODetail = createAsyncThunk(\n  'poDetail/fetchPODetail',\n  async (poNumber: string, { rejectWithValue }) => {\n    try {\n      const purchaseOrder = await ApiService.fetchPO(poNumber);\n      \n      // Temporarily use empty transitions array to avoid 404 error\n      // We'll implement this properly once the status transitions endpoint is fixed\n      let transitions: POStatus[] = [];\n      try {\n        transitions = await ApiService.getAvailableTransitions(purchaseOrder.header.status);\n      } catch (transError) {\n        console.warn('Could not fetch transitions, using empty array:', transError);\n      }\n      return { purchaseOrder, transitions };      \n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch purchase order');\n    }\n  }\n);\n\n/**\n * Async thunk to update a purchase order\n */\nexport const updatePO = createAsyncThunk(\n  'poDetail/updatePO',\n  async ({ poNumber, updateData }: { poNumber: string; updateData: Partial<PurchaseOrder> }, { rejectWithValue }) => {\n    try {\n      const updatedPO = await ApiService.updatePO(poNumber, updateData);\n      return updatedPO;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to update purchase order');\n    }\n  }\n);\n\n/**\n * Async thunk to update the status of a purchase order\n */\nexport const updatePOStatus = createAsyncThunk(\n  'poDetail/updatePOStatus',\n  async ({ \n    poNumber, \n    newStatus, \n    notes,\n    oldStatus\n  }: { \n    poNumber: string; \n    newStatus: POStatus; \n    notes?: string;\n    oldStatus?: POStatus;\n  }, { rejectWithValue }) => {\n    try {\n      const updatedPO = await ApiService.updateStatus(poNumber, newStatus, notes, oldStatus);\n      return updatedPO;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to update purchase order status');\n    }\n  }\n);\n\n/**\n * PO detail slice with reducers and actions\n */\nconst poDetailSlice = createSlice({\n  name: 'poDetail',\n  initialState,\n  reducers: {\n    /**\n     * Clear the current PO detail\n     */\n    clearPODetail: (state) => {\n      state.purchaseOrder = null;\n      state.loading = false;\n      state.error = null;\n      state.availableTransitions = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Handle fetchPODetail pending state\n      .addCase(fetchPODetail.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle fetchPODetail fulfilled state\n      .addCase(fetchPODetail.fulfilled, (state, action: PayloadAction<{ purchaseOrder: PurchaseOrder; transitions: POStatus[] }>) => {\n        state.loading = false;\n        state.purchaseOrder = action.payload.purchaseOrder;\n        state.availableTransitions = action.payload.transitions;\n      })\n      // Handle fetchPODetail rejected state\n      .addCase(fetchPODetail.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      // Handle updatePO pending state\n      .addCase(updatePO.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle updatePO fulfilled state (actual update is done in fetchPODetail)\n      .addCase(updatePO.fulfilled, (state) => {\n        state.loading = false;\n      })\n      // Handle updatePO rejected state\n      .addCase(updatePO.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      // Handle updatePOStatus pending state\n      .addCase(updatePOStatus.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle updatePOStatus fulfilled state (actual update is done in fetchPODetail)\n      .addCase(updatePOStatus.fulfilled, (state, action: PayloadAction<PurchaseOrder>) => {\n        state.loading = false;\n        state.purchaseOrder = action.payload;\n        // We need to fetch available transitions again as they may have changed\n      })\n      // Handle updatePOStatus rejected state\n      .addCase(updatePOStatus.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\n// Export actions and reducer\nexport const { clearPODetail } = poDetailSlice.actions;\nexport default poDetailSlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { POStatus } from '@/types/purchaseOrder';\n\n/**\n * Types for visualization settings\n */\nexport interface CalendarView {\n  viewMode: 'month' | 'week' | 'day';\n  currentDate: string;\n  highlightedStatus: POStatus | null;\n  displayMode: 'delivery' | 'order' | 'invoice';\n}\n\nexport interface TimelineView {\n  zoom: number;\n  startDate: string | null;\n  endDate: string | null;\n  groupBy: 'status' | 'buyer' | 'location' | null;\n  displayMode: 'compact' | 'detailed';\n}\n\nexport interface DashboardLayout {\n  panels: Array<{\n    id: string;\n    type: string;\n    position: { x: number; y: number; w: number; h: number };\n    settings: Record<string, any>;\n    title: string;\n  }>;\n  layout: 'grid' | 'fixed';\n}\n\n/**\n * State interface for the visualization settings\n */\ninterface VisualizationState {\n  calendarView: CalendarView;\n  timelineView: TimelineView;\n  dashboardLayout: DashboardLayout;\n  activeView: 'calendar' | 'timeline' | 'dashboard';\n  theme: 'light' | 'dark' | 'auto';\n}\n\n/**\n * Initial state for visualization\n */\nconst initialState: VisualizationState = {\n  calendarView: {\n    viewMode: 'month',\n    currentDate: new Date().toISOString(),\n    highlightedStatus: null,\n    displayMode: 'delivery',\n  },\n  timelineView: {\n    zoom: 1,\n    startDate: null,\n    endDate: null,\n    groupBy: 'status',\n    displayMode: 'compact',\n  },\n  dashboardLayout: {\n    panels: [],\n    layout: 'grid',\n  },\n  activeView: 'dashboard',\n  theme: 'light',\n};\n\n/**\n * Visualization slice with reducers and actions\n */\nconst visualizationSlice = createSlice({\n  name: 'visualization',\n  initialState,\n  reducers: {\n    /**\n     * Set the active visualization view\n     */\n    setActiveView: (state, action: PayloadAction<VisualizationState['activeView']>) => {\n      state.activeView = action.payload;\n    },\n    \n    /**\n     * Set the calendar view settings\n     */\n    setCalendarView: (state, action: PayloadAction<Partial<CalendarView>>) => {\n      state.calendarView = { ...state.calendarView, ...action.payload };\n    },\n    \n    /**\n     * Set the timeline view settings\n     */\n    setTimelineView: (state, action: PayloadAction<Partial<TimelineView>>) => {\n      state.timelineView = { ...state.timelineView, ...action.payload };\n    },\n    \n    /**\n     * Add a panel to the dashboard\n     */\n    addDashboardPanel: (state, action: PayloadAction<DashboardLayout['panels'][0]>) => {\n      state.dashboardLayout.panels.push(action.payload);\n    },\n    \n    /**\n     * Remove a panel from the dashboard\n     */\n    removeDashboardPanel: (state, action: PayloadAction<string>) => {\n      state.dashboardLayout.panels = state.dashboardLayout.panels.filter(\n        panel => panel.id !== action.payload\n      );\n    },\n    \n    /**\n     * Update dashboard panel settings\n     */\n    updatePanelSettings: (state, action: PayloadAction<{ id: string; settings: Record<string, any> }>) => {\n      const panel = state.dashboardLayout.panels.find(p => p.id === action.payload.id);\n      if (panel) {\n        panel.settings = { ...panel.settings, ...action.payload.settings };\n      }\n    },\n    \n    /**\n     * Update dashboard panel position\n     */\n    updatePanelPosition: (\n      state, \n      action: PayloadAction<{ \n        id: string; \n        position: Partial<DashboardLayout['panels'][0]['position']> \n      }>\n    ) => {\n      const panel = state.dashboardLayout.panels.find(p => p.id === action.payload.id);\n      if (panel) {\n        panel.position = { ...panel.position, ...action.payload.position };\n      }\n    },\n    \n    /**\n     * Set the dashboard layout type\n     */\n    setDashboardLayout: (state, action: PayloadAction<DashboardLayout['layout']>) => {\n      state.dashboardLayout.layout = action.payload;\n    },\n    \n    /**\n     * Reset dashboard to default layout\n     */\n    resetDashboard: (state) => {\n      state.dashboardLayout = initialState.dashboardLayout;\n    },\n    \n    /**\n     * Save the current dashboard as a template\n     */\n    saveDashboardTemplate: () => {\n      // In a real app, would save to backend or localStorage\n      // For now, just a placeholder\n    },\n    \n    /**\n     * Set the UI theme\n     */\n    setTheme: (state, action: PayloadAction<VisualizationState['theme']>) => {\n      state.theme = action.payload;\n    },\n  },\n});\n\n// Export actions and reducer\nexport const {\n  setActiveView,\n  setCalendarView,\n  setTimelineView,\n  addDashboardPanel,\n  removeDashboardPanel,\n  updatePanelSettings,\n  updatePanelPosition,\n  setDashboardLayout,\n  resetDashboard,\n  saveDashboardTemplate,\n  setTheme,\n} = visualizationSlice.actions;\n\nexport default visualizationSlice.reducer;","/**\n * Purchase Order Model Types\n * \n * These types define the structure of Purchase Orders and related data\n * They are based on the backend schema but adapted for frontend usage\n */\n\n/**\n * Purchase Order Status Enum\n * Represents all possible states in the PO lifecycle\n */\nexport enum POStatus {\n  UPLOADED = 'UPLOADED',\n  CONFIRMED = 'CONFIRMED',\n  SHIPPED = 'SHIPPED',\n  INVOICED = 'INVOICED',\n  DELIVERED = 'DELIVERED',\n  CANCELLED = 'CANCELLED'\n}\n\n/**\n * Purchase Order Header\n * Contains primary metadata about the PO\n */\nexport interface POHeader {\n  poNumber: string;\n  ocNumber?: string;\n  orderDate: string;\n  status: POStatus;\n  \n  buyerInfo: {\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  \n  syscoLocation: {\n    name: string;\n    address?: string;\n    region?: string;\n  };\n  \n  deliveryInfo?: {\n    date?: string;\n    instructions?: string;\n  };\n}\n\n/**\n * Purchase Order Product\n * Represents a product line item in the PO\n */\nexport interface POProduct {\n  supc: string;\n  itemCode?: string;\n  description?: string;\n  packSize?: string;\n  quantity: number;\n  fobCost: number;\n  total: number;\n}\n\n/**\n * Purchase Order History Entry\n * Records a historical change to the PO\n */\nexport interface POHistoryEntry {\n  timestamp: string;\n  status: POStatus;\n  user?: string;\n  notes?: string;\n  changes?: {\n    field: string;\n    oldValue: any;\n    newValue: any;\n  }[];\n}\n\n/**\n * Purchase Order Weights\n * Contains weight information for the PO\n */\nexport interface POWeights {\n  grossWeight: number;\n  netWeight: number;\n}\n\n/**\n * Purchase Order Document\n * Represents a file attached to a PO\n */\nexport interface PODocument {\n  id: string;\n  url: string;\n  name: string;\n  type: string;\n  uploadedAt: string;\n}\n\n/**\n * Purchase Order Invoice\n * Contains invoice information for a PO\n */\nexport interface POInvoice {\n  invoiceNumber: string;\n  invoiceDate: string;\n  amount: number;\n  dueDate: string;\n  paidDate?: string;\n  status?: 'pending' | 'paid' | 'overdue' | 'cancelled';\n}\n\n/**\n * Purchase Order Shipping\n * Contains shipping information for a PO\n */\nexport interface POShipping {\n  carrier: string;\n  trackingNumber: string;\n  shippingDate: string;\n  estimatedDeliveryDate: string;\n  actualDeliveryDate?: string;\n  status?: 'in-transit' | 'delivered' | 'delayed' | 'returned';\n}\n\n/**\n * Purchase Order Delivery\n * Contains delivery confirmation information\n */\nexport interface PODelivery {\n  deliveryDate: string;\n  receivedBy: string;\n  condition: 'good' | 'damaged' | 'partial';\n  notes?: string;\n  signatureUrl?: string;\n}\n\n/**\n * Complete Purchase Order\n * The main PO data structure\n */\nexport interface PurchaseOrder {\n  header: POHeader;\n  products: POProduct[];\n  weights: POWeights;\n  totalCost: number;\n  revision: number;\n  revisionInfo?: string;\n  notes?: string;\n  history?: POHistoryEntry[];\n  documents?: PODocument[];\n  invoice?: POInvoice;\n  shipping?: POShipping;\n  delivery?: PODelivery;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n/**\n * Status Requirement\n * Describes a validation requirement for a specific status\n */\nexport interface StatusRequirement {\n  level: 'MANDATORY' | 'RECOMMENDED' | 'OPTIONAL';\n  validate: (data: any) => boolean;\n  message: string;\n}\n\n/**\n * Status Requirements Map\n * Maps requirement keys to their definitions\n */\nexport interface StatusRequirements {\n  [key: string]: StatusRequirement;\n}\n\n/**\n * Status Definition\n * Defines a status and its properties\n */\nexport interface StatusDefinition {\n  name: string;\n  label: string;\n  description: string;\n  color: string;\n  allowedTransitions: POStatus[];\n  requirements: StatusRequirements;\n  metadata: {\n    editable: boolean;\n    requiresNotes: boolean;\n    isInitial?: boolean;\n    isTerminal?: boolean;\n  };\n}\n\n/**\n * Validation Result\n * Result of validating PO data against requirements\n */\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: ValidationError[];\n  warnings: ValidationError[];\n  info: ValidationError[];\n}\n\n/**\n * Validation Error\n * Describes a validation issue\n */\nexport interface ValidationError {\n  field: string;\n  message: string;\n}\n\n/**\n * PO Search Parameters\n * Parameters for searching and filtering POs\n */\nexport interface POSearchParams {\n  page?: number;\n  limit?: number;\n  query?: string;\n  status?: POStatus;\n  startDate?: string;\n  endDate?: string;\n  buyerIds?: string[];\n  locationIds?: string[];\n}\n\n/**\n * PO Search Result\n * Result of a PO search operation\n */\nexport interface POSearchResult {\n  data: PurchaseOrder[];\n  metadata?: {\n    total: number;\n    page: number;\n    pages: number;\n    limit: number;\n  };\n}\n\n/**\n * Status Transition\n * Represents a transition between statuses\n */\nexport interface StatusTransition {\n  from: POStatus;\n  to: POStatus;\n  notes?: string;\n  options?: Record<string, any>;\n}","import { isDevelopment, isProduction } from './env';\n\n/**\n * Logger Utility\n * \n * Environment-aware logging utility to replace direct console calls.\n * In production, logs will be suppressed or sent to a monitoring service.\n * In development, logs will be output to the console with enhanced formatting.\n */\n\n// Log levels\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3\n}\n\n// Minimum log level for current environment\n// In production, we only want to see warnings and errors\nconst MIN_LOG_LEVEL = isProduction() \n  ? LogLevel.WARN\n  : LogLevel.DEBUG;\n\n// Color codes for console output in development\nconst COLORS = {\n  DEBUG: '#7B7B7B', // gray\n  INFO: '#0976DB',  // blue\n  WARN: '#F5A623',  // orange\n  ERROR: '#D0021B', // red\n  RESET: ''\n};\n\n/**\n * Log a message at the specified level\n * @param level The log level\n * @param message The message to log\n * @param data Additional data to log\n */\nfunction log(level: LogLevel, message: string, ...data: any[]): void {\n  // Skip logging if level is below minimum\n  if (level < MIN_LOG_LEVEL) {\n    return;\n  }\n  \n  // Get level name for display\n  const levelName = LogLevel[level];\n  \n  // In production, logs could be sent to a monitoring service\n  if (isProduction()) {\n    // For now, just use console methods based on level\n    switch (level) {\n      case LogLevel.DEBUG:\n      case LogLevel.INFO:\n        console.info(`[${levelName}] ${message}`, ...data);\n        break;\n      case LogLevel.WARN:\n        console.warn(`[${levelName}] ${message}`, ...data);\n        break;\n      case LogLevel.ERROR:\n        console.error(`[${levelName}] ${message}`, ...data);\n        break;\n    }\n    \n    // In a real app, we might send logs to a service like Sentry\n    // Example:\n    // if (level >= LogLevel.ERROR) {\n    //   Sentry.captureException(new Error(message), {\n    //     extra: { data }\n    //   });\n    // }\n    \n    return;\n  }\n  \n  // In development, use formatted console logs\n  // Use type assertion to ensure TypeScript knows levelName is a valid key\n  const color = COLORS[levelName as keyof typeof COLORS] || COLORS.RESET;\n  // Format the output\n  const timestamp = new Date().toISOString().split('T')[1].split('.')[0]; // HH:MM:SS\n  const prefix = `%c[${levelName}]%c ${timestamp}:`;\n  \n  // Log with styling\n  switch (level) {\n    case LogLevel.DEBUG:\n    case LogLevel.INFO:\n      console.log(prefix, `color: ${color}; font-weight: bold`, '', message, ...data);\n      break;\n    case LogLevel.WARN:\n      console.warn(prefix, `color: ${color}; font-weight: bold`, '', message, ...data);\n      break;\n    case LogLevel.ERROR:\n      console.error(prefix, `color: ${color}; font-weight: bold`, '', message, ...data);\n      break;\n  }\n}\n\n// Convenience methods for each log level\nexport const Logger = {\n  debug: (message: string, ...data: any[]) => log(LogLevel.DEBUG, message, ...data),\n  info: (message: string, ...data: any[]) => log(LogLevel.INFO, message, ...data),\n  warn: (message: string, ...data: any[]) => log(LogLevel.WARN, message, ...data),\n  error: (message: string, ...data: any[]) => log(LogLevel.ERROR, message, ...data),\n  \n  // Group methods for related logs\n  groupStart: (name: string, collapsed = false) => {\n    if (isDevelopment()) {\n      collapsed ? console.groupCollapsed(name) : console.group(name);\n    }\n  },\n  groupEnd: () => {\n    if (isDevelopment()) {\n      console.groupEnd();\n    }\n  },\n  \n  // Performance logging\n  time: (label: string) => {\n    if (isDevelopment()) {\n      console.time(label);\n    }\n  },\n  timeEnd: (label: string) => {\n    if (isDevelopment()) {\n      console.timeEnd(label);\n    }\n  }\n};\n\nexport default Logger;","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { ApiService } from '@/services/ApiService';\nimport { POStatus } from '@/types/purchaseOrder';\nimport { buildMetricsFromPOs } from '@/utils/metricsBuilder';\nimport Logger from '@/utils/logger';\n\n/**\n * Types for metrics data\n */\nexport interface StatusMetric {\n  status: POStatus;\n  count: number;\n  percentage: number;\n}\n\nexport interface TimelineMetric {\n  date: string;\n  count: number;\n  status?: POStatus;\n}\n\nexport interface BuyerMetric {\n  id: string;\n  name: string;\n  count: number;\n  totalValue: number;\n}\n\nexport interface LocationMetric {\n  id: string;\n  name: string;\n  count: number;\n  totalValue: number;\n}\n\nexport interface ProductMetric {\n  supc: string;\n  description: string;\n  quantity: number;\n  totalValue: number;\n}\n\nexport interface DetailedMetricsData {\n  processingTimes: {\n    [key: string]: number;\n  }\n}\n\nexport interface MetricsData {\n  statusDistribution: StatusMetric[];\n  timeline: TimelineMetric[];\n  topBuyers: BuyerMetric[];\n  topLocations: LocationMetric[];\n  topProducts: ProductMetric[];\n  totalOrders: number;\n  totalValue: number;\n  averageOrderValue: number;\n  onTimePercentage?: number;\n  // Add fields for beta features\n  forecast?: {\n    predictions: Array<{ date: string; value: number }>;\n    confidenceInterval?: { upper: any[]; lower: any[] };\n  };\n  riskAssessment?: { highRiskCount: number; mediumRiskCount: number; lowRiskCount: number; };\n}\n\n/**\n * State interface for the metrics\n */\ninterface MetricsState {\n  data: MetricsData | null;\n  detailedData: DetailedMetricsData | null;\n  loading: boolean;\n  error: string | null;\n  filters: {\n    startDate: string | null;\n    endDate: string | null;\n    statuses: POStatus[];\n    buyerIds: string[];\n    locationIds: string[];\n  };\n}\n\n/**\n * Initial state for metrics\n */\nconst initialState: MetricsState = {\n  data: null,\n  detailedData: null,\n  loading: false,\n  error: null,\n  filters: {\n    startDate: null,\n    endDate: null,\n    statuses: [],\n    buyerIds: [],\n    locationIds: [],\n  },\n};\n\n/**\n * Create empty metrics data structure\n * Used as a fallback when no data is available\n */\nfunction createEmptyMetrics(): MetricsData {\n  return {\n    statusDistribution: [],\n    timeline: [],\n    topBuyers: [],\n    topLocations: [],\n    topProducts: [],\n    totalOrders: 0,\n    totalValue: 0,\n    averageOrderValue: 0,\n    onTimePercentage: 0,\n    // Default data for beta features\n    forecast: {\n      predictions: Array.from({ length: 7 }, (_, i) => ({\n        date: new Date(Date.now() + i * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        value: 5 + Math.random() * 5\n      })),\n      confidenceInterval: { upper: [], lower: [] }\n    },\n    riskAssessment: { highRiskCount: 3, mediumRiskCount: 8, lowRiskCount: 15 }\n  };\n}\n\n/**\n * Transform backend metrics format to frontend expected structure\n * This adapter bridges the gap between the backend API response and frontend expectations\n * It handles various potential backend data structures\n */\nconst transformMetricsData = (backendMetrics: any, debugMode: boolean = false): MetricsData => {\n  if (!backendMetrics) {\n    Logger.warn('transformMetricsData received null or undefined data');\n    return createEmptyMetrics();\n  }\n  \n  // Log the structure in debug mode for easier troubleshooting\n  if (debugMode) {\n    Logger.debug('Backend metrics structure:', JSON.stringify(backendMetrics, null, 2));\n  }\n  \n  try {\n    // Create empty return structure to populate\n    const result: MetricsData = createEmptyMetrics();\n    \n    // Early return with mock data for development mode\n    if (process.env.NODE_ENV === 'development' && (!backendMetrics || Object.keys(backendMetrics).length === 0)) {\n      Logger.debug('Using mock metrics data for development');\n      return createEmptyMetrics();\n    }\n    \n    // Extract status distribution - support multiple potential backend structures\n    if (backendMetrics.calendar?.status?.distribution) {\n      // Format 1: Nested under calendar.status.distribution\n      result.statusDistribution = Object.entries(backendMetrics.calendar.status.distribution)\n        .map(([status, count]) => ({\n          status: status as POStatus,\n          count: count as number,\n          percentage: 0 // Will be calculated below\n        }));\n    } else if (backendMetrics.statuses) {\n      // Format 2: Directly under statuses object\n      result.statusDistribution = Object.entries(backendMetrics.statuses)\n        .map(([status, count]) => ({\n          status: status as POStatus,\n          count: typeof count === 'number' ? count : 0,\n          percentage: 0\n        }));\n    }\n    \n    // Calculate percentages based on total\n    const totalOrders = result.statusDistribution.reduce((sum, item) => sum + item.count, 0);\n    result.statusDistribution.forEach(item => {\n      item.percentage = totalOrders > 0 ? Math.round((item.count / totalOrders) * 100) : 0;\n    });\n    \n    // Use the distribution total as our first totalOrders value\n    result.totalOrders = totalOrders;\n    \n    // Extract timeline data - handle different possible formats\n    if (Array.isArray(backendMetrics.calendar?.volume?.daily)) {\n      // Format 1: Daily array of counts\n      const daily = backendMetrics.calendar.volume.daily;\n      result.timeline = daily.map((count: number, index: number) => {\n        const date = new Date();\n        date.setDate(date.getDate() - (daily.length - index - 1));\n        return {\n          date: date.toISOString().split('T')[0], // Just use the date part\n          count\n        };\n      });\n    } else if (backendMetrics.calendar?.volume?.timeline) {\n      // Format 2: Object with date keys\n      const timelineData = backendMetrics.calendar.volume.timeline;\n      result.timeline = Object.entries(timelineData).map(([dateStr, count]) => ({\n        date: dateStr,\n        count: typeof count === 'number' ? count : 0\n      }));\n    } else if (backendMetrics.operational?.orders?.byDate) {\n      // Format 3: Orders by date\n      const ordersByDate = backendMetrics.operational.orders.byDate;\n      result.timeline = Object.entries(ordersByDate).map(([dateStr, count]) => ({\n        date: dateStr,\n        count: typeof count === 'number' ? count : 0\n      }));\n    } else if (backendMetrics.timeline) {\n      // Format 4: Direct timeline array\n      if (Array.isArray(backendMetrics.timeline)) {\n        result.timeline = backendMetrics.timeline;\n      }\n    }\n    \n    // Sort timeline by date\n    result.timeline.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    \n    // Extract top buyers\n    if (Array.isArray(backendMetrics.operational?.resources?.buyers?.list)) {\n      // Format 1: Nested under operational.resources.buyers.list\n      result.topBuyers = backendMetrics.operational.resources.buyers.list;\n    } else if (backendMetrics.operational?.buyers) {\n      // Format 2: Nested under operational.buyers\n      const buyersData = backendMetrics.operational.buyers;\n      result.topBuyers = Object.entries(buyersData)\n        .map(([id, data]: [string, any]) => ({\n          id,\n          name: data.name || id,\n          count: data.count || 0,\n          totalValue: data.value || data.totalValue || 0\n        }))\n        .sort((a, b) => b.totalValue - a.totalValue)\n        .slice(0, 5); // Take top 5\n    } else if (backendMetrics.buyers) {\n      // Format 3: Directly under buyers\n      if (Array.isArray(backendMetrics.buyers)) {\n        result.topBuyers = backendMetrics.buyers;\n      }\n    }\n    \n    // Extract top locations\n    if (Array.isArray(backendMetrics.operational?.resources?.locations?.list)) {\n      // Format 1: Nested under operational.resources.locations.list\n      result.topLocations = backendMetrics.operational.resources.locations.list;\n    } else if (backendMetrics.operational?.locations) {\n      // Format 2: Nested under operational.locations\n      const locationsData = backendMetrics.operational.locations;\n      result.topLocations = Object.entries(locationsData)\n        .map(([id, data]: [string, any]) => ({\n          id,\n          name: data.name || id,\n          count: data.count || 0,\n          totalValue: data.value || data.totalValue || 0\n        }))\n        .sort((a, b) => b.totalValue - a.totalValue)\n        .slice(0, 5); // Take top 5\n    } else if (backendMetrics.locations) {\n      // Format 3: Directly under locations\n      if (Array.isArray(backendMetrics.locations)) {\n        result.topLocations = backendMetrics.locations;\n      }\n    }\n    \n    // Extract top products\n    if (Array.isArray(backendMetrics.product?.rankings)) {\n      // Format 1: Nested under product.rankings\n      result.topProducts = backendMetrics.product.rankings;\n    } else if (backendMetrics.product?.items) {\n      // Format 2: Nested under product.items\n      const productsData = backendMetrics.product.items;\n      result.topProducts = Object.entries(productsData)\n        .map(([supc, data]: [string, any]) => ({\n          supc,\n          description: data.description || `Product ${supc}`,\n          quantity: data.quantity || 0,\n          totalValue: data.value || data.totalValue || 0\n        }))\n        .sort((a, b) => b.totalValue - a.totalValue)\n        .slice(0, 5); // Take top 5\n    } else if (backendMetrics.products) {\n      // Format 3: Directly under products\n      if (Array.isArray(backendMetrics.products)) {\n        result.topProducts = backendMetrics.products.slice(0, 5);\n      }\n    }\n    \n    // Extract financial metrics with fallbacks\n    \n    // Total orders (if not already set from status distribution)\n    if (!result.totalOrders) {\n      result.totalOrders = backendMetrics.totalOrders || \n        backendMetrics.financial?.sales?.total || \n        backendMetrics.operational?.orders?.total || \n        backendMetrics.calendar?.volume?.total || 0;\n    }\n    \n    // Total value\n    result.totalValue = backendMetrics.totalValue ||\n      backendMetrics.financial?.sales?.total || \n      backendMetrics.financial?.value?.total || \n      backendMetrics.operational?.value?.total || 0;\n    \n    // Average order value\n    result.averageOrderValue = backendMetrics.averageOrderValue ||\n      backendMetrics.financial?.sales?.average || \n      backendMetrics.financial?.value?.average || \n      (result.totalOrders > 0 ? result.totalValue / result.totalOrders : 0);\n    \n    // On-time percentage\n    result.onTimePercentage = backendMetrics.onTimePercentage ||\n      backendMetrics.calendar?.delivery?.performance || \n      backendMetrics.operational?.delivery?.onTime || \n      backendMetrics.operational?.performance?.onTime || 0;\n    \n    // Add forecast data if available\n    if (backendMetrics.forecast) {\n      result.forecast = backendMetrics.forecast;\n    } else if (backendMetrics.predictive?.forecast) {\n      result.forecast = backendMetrics.predictive.forecast;\n    }\n    \n    // Add risk assessment data if available\n    if (backendMetrics.riskAssessment) {\n      result.riskAssessment = backendMetrics.riskAssessment;\n    } else if (backendMetrics.predictive?.risk) {\n      result.riskAssessment = {\n        highRiskCount: backendMetrics.predictive.risk.high || 0,\n        mediumRiskCount: backendMetrics.predictive.risk.medium || 0,\n        lowRiskCount: backendMetrics.predictive.risk.low || 0\n      };\n    }\n    return result;\n    \n  } catch (error) {\n    Logger.error('Error transforming metrics data:', error);\n    // Return empty data as a fallback\n    return createEmptyMetrics();\n  }\n};\n\n/**\n * Async thunk to fetch basic metrics\n * Uses multiple data sources with fallback mechanisms\n */\nexport const fetchMetrics = createAsyncThunk(\n  'metrics/fetchMetrics',\n  async (_, { getState }) => {\n    try {\n      Logger.info('Fetching metrics data...');\n      \n      // Get current filters from state\n      const state = getState() as { metrics: MetricsState };\n      const { filters } = state.metrics;\n      \n      // Create a formatted date range for API requests\n      const dateRange = {\n        startDate: filters.startDate || undefined,\n        endDate: filters.endDate || undefined\n      };\n      \n      // First try using the fetchPOs API to get actual MongoDB data\n      try {\n        Logger.info('Attempting to fetch real POs to build metrics...');\n        const searchResult = await ApiService.fetchPOs({\n          limit: 100, // Fetch up to 100 POs to build metrics from\n          ...dateRange\n        });\n        \n        // If we have PO data, build metrics directly from it\n        if (searchResult?.data && Array.isArray(searchResult.data) && searchResult.data.length > 0) {\n          Logger.info(`Using ${searchResult.data.length} purchase orders to build metrics`);\n          \n          try {\n            // Use our utility to build metrics directly from PO data\n            const realMetrics = buildMetricsFromPOs(searchResult.data);\n            return realMetrics;\n          } catch (e) { \n            Logger.error('Error building metrics from POs:', e);\n            // Continue to try other methods\n          }\n        }\n      } catch (e) { \n        Logger.error('Error fetching POs:', e);\n        // Continue to try other methods\n      }\n\n      // Try the main metrics API endpoint\n      try {\n        Logger.info('Fetching metrics from API...');\n        // Pass the date range to the metrics API\n        const response = await ApiService.fetchMetrics(dateRange);\n        \n        // Transform the backend metrics format to match frontend expectations\n        if (response && (response.data || response)) {\n          const rawData = response.data || response;\n          Logger.info('Transforming metrics data from API...');\n          \n          // Use our enhanced adapter with debug mode to help troubleshoot API structure\n          const transformedData = transformMetricsData(rawData, true);\n          Logger.debug('Transformed metrics:', JSON.stringify(transformedData, null, 2));\n          return transformedData;\n        }\n      } catch (metricsError) {\n        Logger.error('Error fetching from metrics API:', metricsError);\n        // In development mode, return mock data instead of failing\n        if (process.env.NODE_ENV === 'development') {\n          Logger.info('Using mock metrics for development');\n          return createEmptyMetrics();\n        }\n      }\n      \n    } catch (error) {\n      return createEmptyMetrics();\n    }\n  }\n);\n\n/**\n * Async thunk to fetch detailed metrics\n */\nexport const fetchDetailedMetrics = createAsyncThunk(\n  'metrics/fetchDetailedMetrics',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      Logger.info('Fetching detailed metrics data...');\n      \n      // Get current filters from state\n      const state = getState() as { metrics: MetricsState };\n      const { filters } = state.metrics;\n      \n      // Create a formatted date range for API requests\n      const dateRange = {\n        startDate: filters.startDate || undefined,\n        endDate: filters.endDate || undefined\n      };\n      \n      // Try the main detailed metrics endpoint\n      try {\n        Logger.info('Fetching detailed metrics from API...');\n        const response = await ApiService.fetchDetailedMetrics();\n        \n        if (response && (response.data || response)) {\n          // Extract processing times from the response\n          const rawData = response.data || response;\n          \n          // Map the received data to our structure with fallbacks\n          return {\n            processingTimes: {\n              'Uploaded to Confirmed': rawData.processingTimes?.uploadToConfirm || \n                rawData.operational?.efficiency?.processing || 1.2,\n              'Confirmed to Shipped': rawData.processingTimes?.confirmToShip || 2.5,\n              'Shipped to Invoiced': rawData.processingTimes?.shipToInvoice || 0.8,\n              'Invoiced to Delivered': rawData.processingTimes?.invoiceToDeliver || 1.4,\n              total: rawData.processingTimes?.total || \n                (rawData.processingTimes ? \n                  Object.values(rawData.processingTimes)\n                    .filter((val): val is number => typeof val === 'number')\n                    .reduce((a: number, b: number) => a + b, 0) \n                  : 5.9)\n              }\n          };\n        }\n      } catch (detailedError) {\n        Logger.error('Error fetching detailed metrics:', detailedError);\n        // Continue to try other methods\n      }\n      \n      // Try the enhanced detailed metrics endpoint\n      try {\n        Logger.info('Trying enhanced detailed metrics API...');\n        const response = await ApiService.getDetailedMetrics(dateRange);\n        \n        if (response) {\n          return response;\n        }\n      } catch (enhancedError) {\n        Logger.error('Error fetching enhanced detailed metrics:', enhancedError);\n        // Continue to fallback options\n      }\n      \n      // Return zeroed processing times if all attempts fail\n      return {\n        processingTimes: {\n          'Uploaded to Confirmed': 0,\n          'Confirmed to Shipped': 0,\n          'Shipped to Invoiced': 0,\n          'Invoiced to Delivered': 0,\n          total: 0\n        }\n      };\n    } catch (error) {\n      // Catch-all for any unhandled errors\n      Logger.error('Unhandled error in fetchDetailedMetrics:', error);\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch detailed metrics');\n    }\n  }\n);\n\n/**\n * Metrics slice with reducers and actions\n */\nconst metricsSlice = createSlice({\n  name: 'metrics',\n  initialState,\n  reducers: {\n    /**\n     * Set the date range filter\n     */\n    setDateRange: (state, action: PayloadAction<{ startDate: string | null; endDate: string | null }>) => {\n      state.filters.startDate = action.payload.startDate;\n      state.filters.endDate = action.payload.endDate;\n    },\n    \n    /**\n     * Set the statuses filter\n     */\n    setStatusFilter: (state, action: PayloadAction<POStatus[]>) => {\n      state.filters.statuses = action.payload;\n    },\n    \n    /**\n     * Set the buyer IDs filter\n     */\n    setBuyerFilter: (state, action: PayloadAction<string[]>) => {\n      state.filters.buyerIds = action.payload;\n    },\n    \n    /**\n     * Set the location IDs filter\n     */\n    setLocationFilter: (state, action: PayloadAction<string[]>) => {\n      state.filters.locationIds = action.payload;\n    },\n    \n    /**\n     * Reset all filters\n     */\n    resetFilters: (state) => {\n      state.filters = initialState.filters;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Handle fetchMetrics pending state\n      .addCase(fetchMetrics.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle fetchMetrics fulfilled state\n      .addCase(fetchMetrics.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload || createEmptyMetrics();\n      })\n      // Handle fetchMetrics rejected state\n      .addCase(fetchMetrics.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      // Handle fetchDetailedMetrics pending state\n      .addCase(fetchDetailedMetrics.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      // Handle fetchDetailedMetrics fulfilled state\n      .addCase(fetchDetailedMetrics.fulfilled, (state, action) => {\n        state.loading = false;\n        state.detailedData = action.payload;\n      })\n      // Handle fetchDetailedMetrics rejected state\n      .addCase(fetchDetailedMetrics.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\n// Export actions and reducer\nexport const {\n  setDateRange,\n  setStatusFilter,\n  setBuyerFilter,\n  setLocationFilter,\n  resetFilters,\n} = metricsSlice.actions;\n\nexport default metricsSlice.reducer;","import { PurchaseOrder, POStatus } from '@/types/purchaseOrder';\nimport { MetricsData, StatusMetric, TimelineMetric, BuyerMetric, LocationMetric, ProductMetric } from '@/store/slices/metricsSlice';\nimport Logger from '@/utils/logger';\n\n/**\n * Builds metrics data directly from PO data rather than relying on metrics endpoints\n * This is used as a fallback when the metrics endpoints are not available\n */\nexport function buildMetricsFromPOs(pos: PurchaseOrder[]): MetricsData {\n  if (!pos || pos.length === 0) {\n    return createEmptyMetrics();\n  }\n\n  Logger.info(`Building metrics from ${pos.length} POs`);\n\n  // Calculate total value\n  const totalValue = pos.reduce((sum, po) => sum + (po.totalCost || 0), 0);\n  \n  // Calculate average order value\n  const averageOrderValue = totalValue / pos.length;\n  \n  // Build status distribution\n  const statusCounts: Record<string, number> = {};\n  pos.forEach(po => {\n    const status = po.header?.status || 'UNKNOWN';\n    statusCounts[status] = (statusCounts[status] || 0) + 1;\n  });\n  \n  const statusDistribution: StatusMetric[] = Object.entries(statusCounts).map(([status, count]) => ({\n    status: status as POStatus,\n    count,\n    percentage: Math.round((count / pos.length) * 100)\n  }));\n  \n  // Build timeline data - group by date\n  const dateMap: Record<string, number> = {};\n  pos.forEach(po => {\n    if (po.header?.orderDate) {\n      const dateStr = new Date(po.header.orderDate).toISOString().split('T')[0];\n      dateMap[dateStr] = (dateMap[dateStr] || 0) + 1;\n    }\n  });\n  \n  const timeline: TimelineMetric[] = Object.entries(dateMap)\n    .map(([date, count]) => ({\n      date,\n      count,\n      status: undefined\n    }))\n    .sort((a, b) => a.date.localeCompare(b.date));\n  \n  // Build buyer metrics\n  const buyerMap: Record<string, { name: string; count: number; totalValue: number }> = {};\n  pos.forEach(po => {\n    if (po.header?.buyerInfo?.firstName && po.header?.buyerInfo?.lastName) {\n      const name = `${po.header.buyerInfo.firstName} ${po.header.buyerInfo.lastName}`;\n      const id = name.replace(/\\s+/g, '-').toLowerCase();\n      \n      if (!buyerMap[id]) {\n        buyerMap[id] = { name, count: 0, totalValue: 0 };\n      }\n      \n      buyerMap[id].count++;\n      buyerMap[id].totalValue += po.totalCost || 0;\n    }\n  });\n  \n  const topBuyers: BuyerMetric[] = Object.entries(buyerMap)\n    .map(([id, data]) => ({\n      id,\n      name: data.name,\n      count: data.count,\n      totalValue: data.totalValue\n    }))\n    .sort((a, b) => b.totalValue - a.totalValue)\n    .slice(0, 5);\n  \n  // Build location metrics\n  const locationMap: Record<string, { name: string; count: number; totalValue: number }> = {};\n  pos.forEach(po => {\n    if (po.header?.syscoLocation?.name) {\n      const name = po.header.syscoLocation.name;\n      const id = name.replace(/\\s+/g, '-').toLowerCase();\n      \n      if (!locationMap[id]) {\n        locationMap[id] = { name, count: 0, totalValue: 0 };\n      }\n      \n      locationMap[id].count++;\n      locationMap[id].totalValue += po.totalCost || 0;\n    }\n  });\n  \n  const topLocations: LocationMetric[] = Object.entries(locationMap)\n    .map(([id, data]) => ({\n      id,\n      name: data.name,\n      count: data.count,\n      totalValue: data.totalValue\n    }))\n    .sort((a, b) => b.totalValue - a.totalValue)\n    .slice(0, 5);\n  \n  // Build product metrics\n  const productMap: Record<string, { description: string; quantity: number; totalValue: number }> = {};\n  pos.forEach(po => {\n    if (po.products && Array.isArray(po.products)) {\n      po.products.forEach(product => {\n        if (product.supc) {\n          if (!productMap[product.supc]) {\n            productMap[product.supc] = { \n              description: product.description || 'Unknown Product', \n              quantity: 0, \n              totalValue: 0 \n            };\n          }\n          \n          productMap[product.supc].quantity += product.quantity || 0;\n          productMap[product.supc].totalValue += (product.fobCost || 0) * (product.quantity || 0);\n        }\n      });\n    }\n  });\n  \n  const topProducts: ProductMetric[] = Object.entries(productMap)\n    .map(([supc, data]) => ({\n      supc,\n      description: data.description,\n      quantity: data.quantity,\n      totalValue: data.totalValue\n    }))\n    .sort((a, b) => b.totalValue - a.totalValue)\n    .slice(0, 5);\n  \n  // Calculate on-time percentage (just a placeholder calculation)\n  // In a real implementation, we'd need more data for this\n  const onTimePercentage = Math.round((pos.filter(po => \n    po.header?.status === POStatus.DELIVERED && (po.delivery?.deliveryDate || '')\n  ).length / pos.length) * 100);\n  \n  return {\n    statusDistribution,\n    timeline,\n    topBuyers,\n    topLocations,\n    topProducts,\n    totalOrders: pos.length,\n    totalValue,\n    averageOrderValue,\n    onTimePercentage: onTimePercentage || 85 // Fall back to 85% if calculation fails\n  };\n}\n\n/**\n * Create empty metrics data structure with default values\n */\nfunction createEmptyMetrics(): MetricsData {\n  return {\n    statusDistribution: [],\n    timeline: [],\n    topBuyers: [],\n    topLocations: [],\n    topProducts: [],\n    totalOrders: 0,\n    totalValue: 0,\n    averageOrderValue: 0,\n    onTimePercentage: 0\n  };\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n/**\n * Types for UI notifications\n */\nexport interface Notification {\n  id: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  message: string;\n  title?: string;\n  timeout?: number;\n  actions?: Array<{\n    label: string;\n    action: string;\n  }>;\n  dismissible?: boolean;\n}\n\n/**\n * Types for UI modal\n */\nexport interface Modal {\n  id: string;\n  type: string;\n  title: string;\n  size?: 'sm' | 'lg' | 'xl';\n  data?: any;\n  options?: {\n    closable?: boolean;\n    closeOnBackdropClick?: boolean;\n  };\n}\n\n/**\n * State interface for the UI\n */\ninterface UIState {\n  // Global loading state\n  loading: {\n    global: boolean;\n    operations: Record<string, boolean>;\n  };\n  // Notifications system\n  notifications: Notification[];\n  // Modal system\n  modal: Modal | null;\n  // Sidebar state\n  sidebarCollapsed: boolean;\n  // Tour state\n  tourActive: boolean;\n  tourStep: number;\n  // Search state\n  globalSearch: string;\n}\n\n/**\n * Initial state for UI\n */\nconst initialState: UIState = {\n  loading: {\n    global: false,\n    operations: {},\n  },\n  notifications: [],\n  modal: null,\n  sidebarCollapsed: false,\n  tourActive: false,\n  tourStep: 0,\n  globalSearch: '',\n};\n\n/**\n * UI slice with reducers and actions\n */\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    /**\n     * Set global loading state\n     */\n    setGlobalLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading.global = action.payload;\n    },\n    \n    /**\n     * Set loading state for a specific operation\n     */\n    setOperationLoading: (state, action: PayloadAction<{ operation: string; loading: boolean }>) => {\n      state.loading.operations[action.payload.operation] = action.payload.loading;\n    },\n    \n    /**\n     * Clear all loading states\n     */\n    clearLoading: (state) => {\n      state.loading.global = false;\n      state.loading.operations = {};\n    },\n    \n    /**\n     * Add a notification\n     */\n    addNotification: (state, action: PayloadAction<Omit<Notification, 'id'>>) => {\n      const id = `notification-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      state.notifications.push({\n        ...action.payload,\n        id,\n        dismissible: action.payload.dismissible !== false, // Default to true\n      });\n    },\n    \n    /**\n     * Remove a notification by ID\n     */\n    removeNotification: (state, action: PayloadAction<string>) => {\n      state.notifications = state.notifications.filter(n => n.id !== action.payload);\n    },\n    \n    /**\n     * Clear all notifications\n     */\n    clearNotifications: (state) => {\n      state.notifications = [];\n    },\n    \n    /**\n     * Open a modal\n     */\n    openModal: (state, action: PayloadAction<Modal>) => {\n      state.modal = action.payload;\n    },\n    \n    /**\n     * Close the current modal\n     */\n    closeModal: (state) => {\n      state.modal = null;\n    },\n    \n    /**\n     * Update modal data\n     */\n    updateModalData: (state, action: PayloadAction<any>) => {\n      if (state.modal) {\n        state.modal.data = action.payload;\n      }\n    },\n    \n    /**\n     * Toggle sidebar collapsed state\n     */\n    toggleSidebar: (state) => {\n      state.sidebarCollapsed = !state.sidebarCollapsed;\n    },\n    \n    /**\n     * Set sidebar collapsed state\n     */\n    setSidebarCollapsed: (state, action: PayloadAction<boolean>) => {\n      state.sidebarCollapsed = action.payload;\n    },\n    \n    /**\n     * Start the application tour\n     */\n    startTour: (state) => {\n      state.tourActive = true;\n      state.tourStep = 0;\n    },\n    \n    /**\n     * Set the current tour step\n     */\n    setTourStep: (state, action: PayloadAction<number>) => {\n      state.tourStep = action.payload;\n    },\n    \n    /**\n     * End the application tour\n     */\n    endTour: (state) => {\n      state.tourActive = false;\n      state.tourStep = 0;\n    },\n    \n    /**\n     * Set global search query\n     */\n    setGlobalSearch: (state, action: PayloadAction<string>) => {\n      state.globalSearch = action.payload;\n    },\n  },\n});\n\n// Export actions and reducer\nexport const {\n  setGlobalLoading,\n  setOperationLoading,\n  clearLoading,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  openModal,\n  closeModal,\n  updateModalData,\n  toggleSidebar,\n  setSidebarCollapsed,\n  startTour,\n  setTourStep,\n  endTour,\n  setGlobalSearch,\n} = uiSlice.actions;\n\nexport default uiSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { isProduction } from '@/utils/env';\nimport poListReducer from './slices/poListSlice';\nimport poDetailReducer from './slices/poDetailSlice';\nimport visualizationReducer from './slices/visualizationSlice';\nimport metricsReducer from './slices/metricsSlice';\nimport uiReducer from './slices/uiSlice';\n\n/**\n * Configure the Redux store with all reducers\n * Using Redux Toolkit for simplified Redux logic\n */\nexport const store = configureStore({\n  reducer: {\n    poList: poListReducer,\n    poDetail: poDetailReducer,\n    visualization: visualizationReducer,\n    metrics: metricsReducer,\n    ui: uiReducer,\n  },\n  // Enable Redux DevTools in development environment\n  devTools: !isProduction(),\n  middleware: (getDefaultMiddleware) => \n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types in serializability check\n        ignoredActions: ['poList/setDateRange'],\n        // Ignore these field paths in serializability check\n        ignoredPaths: ['poList.filters.startDate', 'poList.filters.endDate'],\n      },\n    }),\n});\n\n// Export types for Redux usage\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n/**\n * Custom hooks for typed Redux usage\n * Provides type safety for useDispatch and useSelector\n */\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState, useAppDispatch } from '@/store';\nimport { fetchPurchaseOrders } from '@/store/slices/poListSlice';\nimport { fetchMetrics } from '@/store/slices/metricsSlice';\n\n/**\n * DashboardPage Component\n * \n * Main dashboard that provides an overview of the system with key metrics,\n * recent purchase orders, and quick access links to common functions.\n * Now using real data from MongoDB instead of hardcoded values.\n */\nconst DashboardPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { items: poItems, loading: poLoading } = useSelector((state: RootState) => state.poList);\n  const { data: metricsData, loading: metricsLoading } = useSelector((state: RootState) => state.metrics);\n  \n  // Fetch data on component mount\n  useEffect(() => {\n    dispatch(fetchPurchaseOrders({ \n      limit: 4  // Only need a few recent POs for the dashboard\n    }));\n    dispatch(fetchMetrics());\n  }, [dispatch]);\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case 'UPLOADED': return 'warning';\n      case 'CONFIRMED': return 'info';\n      case 'SHIPPED': return 'primary';\n      case 'INVOICED': return 'secondary';\n      case 'DELIVERED': return 'success';\n      case 'CANCELLED': return 'danger';\n      default: return 'light';\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    \n    try {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      }).format(date);\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n  // Get total orders from metrics or fallback to PO items length\n  const totalOrders = metricsData?.totalOrders || poItems.length || 0;\n  \n  // Get total value from metrics or calculate from PO items\n  const totalValue = metricsData?.totalValue || \n    poItems.reduce((sum, po) => sum + (po.totalCost || 0), 0);\n  \n  // Get on-time percentage from metrics or use a default\n  const onTimePercentage = metricsData?.onTimePercentage || 85;\n  \n  // Use actual recent POs or an empty array if still loading\n  const recentPOs = poItems.slice(0, 4);\n\n  // Get status distribution from metrics or create an empty array\n  const statusDistribution = metricsData?.statusDistribution || [];\n  \n  return (\n    <Container fluid>\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n        <h1 className=\"h2 mb-0 text-gray-800\">Dashboard</h1>\n        <div>\n          <Button \n            variant=\"primary\" \n            size=\"sm\" \n            className=\"me-2\">\n            <i className=\"bi bi-download me-1\"></i> Generate Report\n          </Button>\n          <Button \n            variant=\"success\" \n            size=\"sm\">\n            <i className=\"bi bi-plus-lg me-1\"></i> New PO\n            <Link to=\"/purchase-orders/create\" className=\"stretched-link text-white text-decoration-none\"></Link>\n          </Button>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <Row className=\"g-3 mb-4\">\n        <Col xl={3} md={6}>\n          <Card className=\"border-start-primary h-100\">\n            <Card.Body>\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <div className=\"text-xs fw-bold text-primary text-uppercase mb-1\">\n                    Total POs (Monthly)\n                  </div>\n                  <div className=\"h5 mb-0 fw-bold text-gray-800\">\n                    {metricsLoading ? (\n                      <span className=\"placeholder col-4\"></span>\n                    ) : (\n                      totalOrders\n                    )}\n                  </div>\n                </div>\n                <div className=\"fa-2x text-gray-300\">\n                  <i className=\"bi bi-file-text fs-1 text-primary opacity-25\"></i>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={3} md={6}>\n          <Card className=\"border-start-success h-100\">\n            <Card.Body>\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <div className=\"text-xs fw-bold text-success text-uppercase mb-1\">\n                    Total Value (Monthly)\n                  </div>\n                  <div className=\"h5 mb-0 fw-bold text-gray-800\">\n                    {metricsLoading ? (\n                      <span className=\"placeholder col-4\"></span>\n                    ) : (\n                      formatCurrency(totalValue)\n                    )}\n                  </div>\n                </div>\n                <div className=\"fa-2x text-gray-300\">\n                  <i className=\"bi bi-currency-dollar fs-1 text-success opacity-25\"></i>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={3} md={6}>\n          <Card className=\"border-start-info h-100\">\n            <Card.Body>\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <div className=\"text-xs fw-bold text-info text-uppercase mb-1\">\n                    On-Time Delivery\n                  </div>\n                  <div className=\"row no-gutters align-items-center\">\n                    <div className=\"col-auto\">\n                      <div className=\"h5 mb-0 me-3 fw-bold text-gray-800\">\n                        {metricsLoading ? (\n                          <span className=\"placeholder col-2\"></span>\n                        ) : (\n                          `${onTimePercentage}%`\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"progress progress-sm\">\n                        <div \n                          className=\"progress-bar bg-info\" \n                          role=\"progressbar\" \n                          style={{ width: `${onTimePercentage}%` }} \n                          aria-valuenow={onTimePercentage} \n                          aria-valuemin={0} \n                          aria-valuemax={100}>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"fa-2x text-gray-300\">\n                  <i className=\"bi bi-truck fs-1 text-info opacity-25\"></i>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={3} md={6}>\n          <Card className=\"border-start-warning h-100\">\n            <Card.Body>\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <div className=\"text-xs fw-bold text-warning text-uppercase mb-1\">\n                    Pending Approvals\n                  </div>\n                  <div className=\"h5 mb-0 fw-bold text-gray-800\">\n                    {metricsLoading ? (\n                      <span className=\"placeholder col-2\"></span>\n                    ) : (\n                      statusDistribution.find(s => s.status === 'UPLOADED')?.count || 0\n                    )}\n                  </div>\n                </div>\n                <div className=\"fa-2x text-gray-300\">\n                  <i className=\"bi bi-hourglass-split fs-1 text-warning opacity-25\"></i>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"g-3 mb-4\">\n        {/* Recent Purchase Orders */}\n        <Col xl={8} lg={7}>\n          <Card className=\"mb-4\">\n            <Card.Header className=\"py-3 d-flex flex-row align-items-center justify-content-between\">\n              <h6 className=\"m-0 fw-bold\">Recent Purchase Orders</h6>\n              <Link to=\"/purchase-orders\" className=\"btn btn-sm btn-primary\">\n                View All\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"table-responsive\">\n                <table className=\"table table-hover\">\n                  <thead>\n                    <tr>\n                      <th>PO Number</th>\n                      <th>Date</th>\n                      <th>Supplier</th>\n                      <th>Amount</th>\n                      <th>Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {poLoading ? (\n                      <tr>\n                        <td colSpan={5} className=\"text-center\">\n                          <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                          </div>\n                        </td>\n                      </tr>\n                    ) : recentPOs.length === 0 ? (\n                      <tr>\n                        <td colSpan={5} className=\"text-center\">No purchase orders found</td>\n                      </tr>\n                    ) : (\n                      recentPOs.map(po => (\n                        <tr key={po.header?.poNumber}>\n                          <td>\n                            <Link to={`/purchase-orders/${po.header?.poNumber}`} className=\"fw-bold text-decoration-none\">\n                              {po.header?.poNumber}\n                            </Link>\n                          </td>\n                          <td>{formatDate(po.header?.orderDate)}</td>\n                          <td>{`${po.header?.buyerInfo?.firstName} ${po.header?.buyerInfo?.lastName}`}</td>\n                          <td>{formatCurrency(po.totalCost || 0)}</td>\n                          <td>\n                            <Badge bg={getStatusBadgeVariant(po.header?.status || 'UNKNOWN')}>\n                              {po.header?.status || 'UNKNOWN'}\n                            </Badge>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        {/* Quick Actions */}\n        <Col xl={4} lg={5}>\n          <Card className=\"mb-4\">\n            <Card.Header className=\"py-3\">\n              <h6 className=\"m-0 fw-bold\">Quick Actions</h6>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"d-grid gap-2\">\n                <Button variant=\"primary\" className=\"position-relative\">\n                  <i className=\"bi bi-plus-circle me-2\"></i>\n                  Create New Purchase Order\n                  <Link to=\"/purchase-orders/create\" className=\"stretched-link text-white text-decoration-none\"></Link>\n                </Button>\n                <Button variant=\"outline-primary\" className=\"position-relative\">\n                  <i className=\"bi bi-search me-2\"></i>\n                  Search Purchase Orders\n                  <Link to=\"/purchase-orders\" className=\"stretched-link text-decoration-none\"></Link>\n                </Button>\n                <Button variant=\"outline-primary\" className=\"position-relative\">\n                  <i className=\"bi bi-calendar3 me-2\"></i>\n                  Go to Planning Hub\n                  <Link to=\"/planning-hub\" className=\"stretched-link text-decoration-none\"></Link>\n                </Button>\n                <Button variant=\"outline-primary\" className=\"position-relative\">\n                  <i className=\"bi bi-graph-up me-2\"></i>\n                  View Metrics & Reports\n                  <Link to=\"/metrics\" className=\"stretched-link text-decoration-none\"></Link>\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n          \n          {/* Status Distribution */}\n          <Card>\n            <Card.Header className=\"py-3\">\n              <h6 className=\"m-0 fw-bold\">Status Distribution</h6>\n            </Card.Header>\n            <Card.Body>\n              {metricsLoading ? (\n                <div className=\"text-center py-3\">\n                  <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                  </div>\n                </div>\n              ) : statusDistribution.length === 0 ? (\n                <p className=\"text-center\">No status data available</p>\n              ) : (\n                statusDistribution.map(item => (\n                  <div className=\"mb-3\" key={item.status}>\n                    <div className=\"d-flex justify-content-between mb-1\">\n                      <span>{item.status}</span>\n                      <span>{item.percentage}%</span>\n                    </div>\n                    <div className=\"progress\" style={{ height: '10px' }}>\n                      <div \n                        className={`progress-bar bg-${getStatusBadgeVariant(item.status)}`} \n                        style={{ width: `${item.percentage}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default DashboardPage;","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Table, Button, Form, InputGroup, Pagination, Badge, Dropdown, Modal } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState, useAppDispatch } from '@/store';\nimport { \n  fetchPurchaseOrders,\n  setPage,\n  setSearchQuery,\n  setStatusFilter,\n  setDateRange,\n  resetFilters,\n  toggleItemSelection,\n  selectAllItems,\n  performBatchOperation\n} from '@/store/slices/poListSlice';\nimport { POStatus, POSearchParams, PurchaseOrder } from '@/types/purchaseOrder';\n\n\n/**\n * POListPage Component\n * \n * Page that displays a searchable, sortable list of purchase orders\n * with filtering capabilities and batch operations.\n * Now using real data from MongoDB instead of mock data.\n */\nconst POListPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  \n  const { \n    items, \n    loading, \n    error, \n    pagination, \n    filters,\n    selectedItems,\n    batchOperations\n  } = useSelector((state: RootState) => state.poList);\n  \n  // Local state for batch operation modal\n  const [showBatchModal, setShowBatchModal] = useState(false);\n  const [batchOperation, setBatchOperation] = useState<string>('');\n  const [batchStatus, setBatchStatus] = useState<POStatus | ''>('');\n\n  // Check if any items are selected\n  const hasSelectedItems = selectedItems.length > 0;\n  \n  // Check if all visible items are selected\n  const areAllSelected = items.length > 0 && \n    items.every(po => selectedItems.includes(po.header?.poNumber || ''));\n  \n  // Calculate total value of selected items\n  const selectedTotalValue = items\n    .filter(po => selectedItems.includes(po.header?.poNumber || ''))\n    .reduce((sum, po) => sum + (po.totalCost || 0), 0);\n  \n  // Get selected POs for display\n  const getSelectedPOs = (): PurchaseOrder[] => {\n    return items.filter(po => \n      po.header?.poNumber && \n      selectedItems.includes(po.header.poNumber)\n    );\n  };\n\n  // Fetch purchase orders on component mount and when filters change\n  useEffect(() => {\n    const params: Partial<POSearchParams> = {\n      page: pagination.page,\n      query: filters.query,\n      // Convert string to POStatus enum if it's a valid status\n      status: filters.status ? filters.status as POStatus : undefined,\n      startDate: filters.startDate || undefined,\n      endDate: filters.endDate || undefined\n    };\n    \n    dispatch(fetchPurchaseOrders(params));\n  }, [dispatch, pagination.page]);\n\n  // Handle toggling a single item selection\n  const handleToggleSelection = (poNumber: string) => {\n    dispatch(toggleItemSelection(poNumber));\n  };\n\n  // Handle toggling all items selection\n  const handleToggleSelectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(selectAllItems(e.target.checked));\n  };\n\n  // Handle opening batch operation modal\n  const handleOpenBatchModal = (operation: string) => {\n    setBatchOperation(operation);\n    if (operation === 'status') {\n      setBatchStatus('');\n    }\n    setShowBatchModal(true);\n  };\n\n  // Execute the batch operation\n  const handleExecuteBatchOperation = async () => {\n    if (batchOperation === 'status' && batchStatus) {\n      await dispatch(performBatchOperation({ poNumbers: selectedItems, operation: 'status', params: { status: batchStatus } }));\n    } else if (batchOperation === 'delete') {\n      await dispatch(performBatchOperation({ poNumbers: selectedItems, operation: 'delete' }));\n    }\n    setShowBatchModal(false);\n  };\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case 'UPLOADED': return 'warning';\n      case 'CONFIRMED': return 'info';\n      case 'SHIPPED': return 'primary';\n      case 'INVOICED': return 'secondary';\n      case 'DELIVERED': return 'success';\n      case 'CANCELLED': return 'danger';\n      default: return 'light';\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string) => {\n    if (!dateString) return 'N/A';\n    \n    try {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      }).format(date);\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = e.target.value;\n    dispatch(setSearchQuery(searchValue));\n  };\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  const handleDateRangeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const days = parseInt(e.target.value, 10);\n    if (!isNaN(days)) {\n      const endDate = new Date().toISOString();\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - days);\n      dispatch(setDateRange({ startDate: startDate.toISOString(), endDate }));\n    }\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    dispatch(setPage(pageNumber));\n  };\n\n  const handleApplyFilters = () => {\n    const params: Partial<POSearchParams> = {\n      page: pagination.page,\n      query: filters.query,\n      status: filters.status ? filters.status as POStatus : undefined,\n      startDate: filters.startDate || undefined,\n      endDate: filters.endDate || undefined\n    };\n    \n    dispatch(fetchPurchaseOrders(params));\n  };\n\n  const handleClearFilters = () => {\n    dispatch(resetFilters());\n    dispatch(fetchPurchaseOrders({ page: 1 }));\n  };\n\n  // Handle viewing a PO detail page\n  const handleViewPO = (poNumber: string) => {\n    navigate(`/purchase-orders/${poNumber}`);\n  };\n\n\n  // Handle cancelling batch operation\n  const handleCancelBatchOperation = () => {\n    setShowBatchModal(false);\n  };\n\n  // Pagination items\n  const paginationItems = [];\n  const totalPages = pagination.totalPages || 1;\n  const currentPage = pagination.page;\n  \n  // Show at most 5 page links centered around current page\n  const startPage = Math.max(1, currentPage - 2);\n  const endPage = Math.min(totalPages, startPage + 4);\n  \n  for (let i = startPage; i <= endPage; i++) {\n    paginationItems.push(\n      <Pagination.Item key={i} active={i === currentPage} onClick={() => handlePageChange(i)}>\n        {i}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <Container fluid>\n      {/* Page Header */}\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n        <h1 className=\"h2 mb-0 text-gray-800\">Purchase Orders</h1>\n        <Button \n          variant=\"primary\" \n          className=\"position-relative\"\n        >\n          <i className=\"bi bi-plus-lg me-2\"></i>\n          Create New PO\n          <Link \n            to=\"/purchase-orders/create\" \n            className=\"stretched-link text-white text-decoration-none\"\n          />\n        </Button>\n      </div>\n\n      {/* Filters Card */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header className=\"bg-light py-3\">\n          <h6 className=\"m-0 font-weight-bold\">Filters & Search</h6>\n        </Card.Header>\n        <Card.Body>\n          <Row className=\"g-3\">\n            <Col md={6} lg={4}>\n              <Form.Group>\n                <Form.Label>Search</Form.Label>\n                <InputGroup>\n                  <InputGroup.Text>\n                    <i className=\"bi bi-search\"></i>\n                  </InputGroup.Text>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"PO#, Supplier, etc.\"\n                    value={filters.query}\n                    onChange={handleSearch}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col md={6} lg={3}>\n              <Form.Group>\n                <Form.Label>Status</Form.Label>\n                <Form.Select value={filters.status} onChange={handleStatusChange}>\n                  <option value=\"\">All Statuses</option>\n                  {Object.values(POStatus).map(status => (\n                    <option key={status} value={status}>\n                      {status}\n                    </option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </Col>\n            <Col md={6} lg={2}>\n              <Form.Group>\n                <Form.Label>Date Range</Form.Label>\n                <Form.Select onChange={handleDateRangeChange}>\n                  <option value=\"\">Select Range</option>\n                  <option value=\"7\">Last 7 days</option>\n                  <option value=\"30\">Last 30 days</option>\n                  <option value=\"90\">Last 90 days</option>\n                  <option value=\"365\">Last year</option>\n                </Form.Select>\n              </Form.Group>\n            </Col>\n            <Col md={6} lg={3} className=\"d-flex align-items-end\">\n              <Button \n                variant=\"primary\" \n                className=\"me-2\"\n                onClick={handleApplyFilters}\n              >\n                <i className=\"bi bi-funnel me-1\"></i> Apply\n              </Button>\n              <Button \n                variant=\"outline-secondary\"\n                onClick={handleClearFilters}\n              >\n                <i className=\"bi bi-x-lg me-1\"></i> Clear\n              </Button>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n\n      {/* PO Table */}\n      <Card className=\"shadow-sm\">\n        <Card.Body>\n          <div className=\"d-flex justify-content-between mb-3\">\n            <div>\n              <span className=\"text-muted\">\n                {hasSelectedItems ? (\n                  <span className=\"text-primary fw-bold\">\n                    {selectedItems.length} item{selectedItems.length !== 1 ? 's' : ''} selected\n                    {' '}({formatCurrency(selectedTotalValue)})\n                    <Button size=\"sm\" variant=\"link\" className=\"p-0 ms-2\" onClick={() => dispatch(selectAllItems(false))}>\n                      Clear Selection\n                    </Button>\n                  </span>\n                ) : (\n                  `Showing ${items.length} of ${pagination.totalItems} entries`\n                )}\n              </span>\n            </div>\n            <div className=\"d-flex\">\n              <Dropdown className=\"me-2\">\n                <Dropdown.Toggle variant=\"outline-secondary\" size=\"sm\">\n                  <i className=\"bi bi-gear me-1\"></i> Display Options\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>Show 10 entries</Dropdown.Item>\n                  <Dropdown.Item>Show 25 entries</Dropdown.Item>\n                  <Dropdown.Item>Show 50 entries</Dropdown.Item>\n                  <Dropdown.Item>Show all entries</Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item>Customize columns</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n\n              {/* Batch Operations Dropdown */}\n              <Dropdown className=\"ms-2\">\n                <Dropdown.Toggle \n                  variant={hasSelectedItems ? \"primary\" : \"outline-secondary\"}\n                  size=\"sm\"\n                  disabled={!hasSelectedItems} \n                >\n                  <i className=\"bi bi-list-check me-1\"></i> Batch Actions\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => handleOpenBatchModal('status')}>\n                    <i className=\"bi bi-arrow-repeat me-2\"></i> Change Status\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    <i className=\"bi bi-file-earmark-arrow-down me-2\"></i> Export Selected\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item className=\"text-danger\" onClick={() => handleOpenBatchModal('delete')}>\n                    <i className=\"bi bi-trash me-2\"></i> Delete Selected\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n\n              {/* More Actions Dropdown */}\n              <Dropdown className=\"ms-2\">\n                <Dropdown.Toggle variant=\"outline-secondary\" size=\"sm\" id=\"more-actions-dropdown\">\n                  <i className=\"bi bi-three-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item><i className=\"bi bi-file-earmark-arrow-down me-2\"></i> Export to CSV</Dropdown.Item>\n                  <Dropdown.Item><i className=\"bi bi-file-earmark-pdf me-2\"></i> Export to PDF</Dropdown.Item>\n                  <Dropdown.Item><i className=\"bi bi-printer me-2\"></i> Print</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </div>\n          \n          <div className=\"table-responsive\">\n            <Table hover className=\"align-middle\">\n              <thead>\n                <tr>\n                  <th>\n                    <Form.Check \n                      type=\"checkbox\" \n                      checked={areAllSelected}\n                      onChange={handleToggleSelectAll}\n                      disabled={items.length === 0}\n                    />\n                  </th>\n                  \n                  <th>PO Number <i className=\"bi bi-arrow-down-up text-muted ms-1\"></i></th>\n                  <th>Date <i className=\"bi bi-arrow-down text-primary ms-1\"></i></th>\n                  <th>Supplier <i className=\"bi bi-arrow-down-up text-muted ms-1\"></i></th>\n                  <th>Items</th>\n                  <th>Amount <i className=\"bi bi-arrow-down-up text-muted ms-1\"></i></th>\n                  <th>Status <i className=\"bi bi-arrow-down-up text-muted ms-1\"></i></th>\n                  <th>Due Date</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <tr>\n                    <td colSpan={9} className=\"text-center py-4\">\n                      <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : error ? (\n                  <tr>\n                    <td colSpan={9} className=\"text-center py-4 text-danger\">\n                      {error}\n                    </td>\n                  </tr>\n                ) : items.length === 0 ? (\n                  <tr>\n                    <td colSpan={9} className=\"text-center py-4\">\n                      No purchase orders found. Try adjusting your filters.\n                    </td>\n                  </tr>\n                ) : items.map(po => {\n                  // Ensure poNumber is available for key\n                  const poNumber = po.header?.poNumber || 'unknown';\n                  return (\n                    <tr key={poNumber}>\n                      <td>\n                        <Form.Check \n                          type=\"checkbox\" \n                          id={`select-po-${poNumber}`}\n                          checked={selectedItems.includes(poNumber)}\n                          onChange={() => handleToggleSelection(poNumber)}\n                          aria-label={`Select purchase order ${poNumber}`}\n                          onClick={(e) => e.stopPropagation()}\n                        />\n                      </td>\n                      <td>\n                        <Link \n                          to={`/purchase-orders/${poNumber}`} \n                          className=\"fw-bold text-decoration-none\"\n                        >\n                          {poNumber}\n                        </Link>\n                      </td>\n                      <td>{formatDate(po.header?.orderDate || '')}</td>\n                      <td>{po.header?.buyerInfo?.firstName} {po.header?.buyerInfo?.lastName}</td>\n                      <td>{po.products?.length || 0}</td>\n                      <td>{formatCurrency(po.totalCost || 0)}</td>\n                      <td>\n                        <Badge bg={getStatusBadgeVariant(po.header?.status || 'UNKNOWN')}>\n                          {po.header?.status || 'UNKNOWN'}\n                        </Badge>\n                      </td>\n                      <td>{po.header?.deliveryInfo?.date ? formatDate(po.header.deliveryInfo.date) : 'N/A'}</td>\n                      <td>\n                        <div className=\"d-flex\">\n                          <Button variant=\"outline-primary\" size=\"sm\" className=\"me-1\" onClick={() => handleViewPO(poNumber)}>\n                            <i className=\"bi bi-eye\"></i>\n                          </Button>\n                          <Dropdown>\n                            <Dropdown.Toggle \n                              variant=\"outline-secondary\" \n                              title=\"Actions\" \n                              size=\"sm\" \n                              id={`dropdown-${poNumber}`}\n                            >\n                              <i className=\"bi bi-three-dots-vertical\"></i>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                              <Dropdown.Item><i className=\"bi bi-pencil me-2\"></i> Edit</Dropdown.Item>\n                              <Dropdown.Item><i className=\"bi bi-files me-2\"></i> Duplicate</Dropdown.Item>\n                              <Dropdown.Item><i className=\"bi bi-file-earmark-pdf me-2\"></i> Export</Dropdown.Item>\n                              <Dropdown.Divider />\n                              <Dropdown.Item className=\"text-danger\"><i className=\"bi bi-trash me-2\"></i> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                          </Dropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n          \n          <div className=\"d-flex justify-content-between align-items-center mt-3\">\n            <div>\n              <span className=\"text-muted\">Page {pagination.page} of {pagination.totalPages}</span>\n            </div>\n            <Pagination className=\"mb-0\">\n              <Pagination.First \n                onClick={() => handlePageChange(1)} \n                disabled={pagination.page === 1} \n              />\n              <Pagination.Prev \n                onClick={() => handlePageChange(Math.max(1, pagination.page - 1))} \n                disabled={pagination.page === 1}\n              />\n              {paginationItems}\n              <Pagination.Next \n                onClick={() => handlePageChange(Math.min(pagination.totalPages, pagination.page + 1))} \n                disabled={pagination.page === pagination.totalPages}\n              />\n              <Pagination.Last \n                onClick={() => handlePageChange(pagination.totalPages)} \n                disabled={pagination.page === pagination.totalPages}\n              />\n            </Pagination>\n          </div>\n        </Card.Body>\n      </Card>\n\n      {/* Batch Operation Modal */}\n      <Modal \n        show={showBatchModal} \n        onHide={handleCancelBatchOperation}\n        backdrop=\"static\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {batchOperation === 'status' && 'Change Status for Multiple POs'}\n            {batchOperation === 'delete' && 'Delete Multiple Purchase Orders'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* Status Change Operation */}\n          {batchOperation === 'status' && (\n            <>\n              <p>\n                You are about to change the status of <strong>{selectedItems.length}</strong> purchase order{selectedItems.length !== 1 ? 's' : ''}.\n              </p>\n              \n              <Form.Group className=\"mb-3\">\n                <Form.Label>Select New Status</Form.Label>\n                <Form.Select \n                  value={batchStatus}\n                  onChange={(e) => setBatchStatus(e.target.value as POStatus)}\n                  required\n                >\n                  <option value=\"\">-- Select Status --</option>\n                  {Object.values(POStatus).map((status) => (\n                    <option key={status} value={status}>{status}</option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n              \n              <div className=\"alert alert-warning\">\n                <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                This action will change the status for all selected purchase orders. \n                Please ensure the selected status is valid for all POs.\n              </div>\n            </>\n          )}\n\n          {/* Delete Operation */}\n          {batchOperation === 'delete' && (\n            <>\n              <div className=\"alert alert-danger mb-3\">\n                <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                <strong>Warning:</strong> This action cannot be undone.\n              </div>\n              \n              <p>You are about to delete the following purchase orders:</p>\n              \n              <div className=\"table-responsive mb-3\">\n                <table className=\"table table-sm table-bordered\">\n                  <thead className=\"table-light\">\n                    <tr>\n                      <th>PO Number</th>\n                      <th>Date</th>\n                      <th>Status</th>\n                      <th>Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {getSelectedPOs().map((po) => (\n                      <tr key={po.header?.poNumber}>\n                        <td>{po.header?.poNumber}</td>\n                        <td>{formatDate(po.header?.orderDate || '')}</td>\n                        <td>{po.header?.status}</td>\n                        <td className=\"text-end\">{formatCurrency(po.totalCost || 0)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCancelBatchOperation}>\n            Cancel\n          </Button>\n          <Button \n            variant={batchOperation === 'delete' ? 'danger' : 'primary'} \n            onClick={handleExecuteBatchOperation}\n            disabled={(batchOperation === 'status' && !batchStatus) || batchOperations.processing}\n          >\n            {batchOperations.processing ? (\n              <>\n                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                Processing...\n              </>\n            ) : (\n              <>\n                {batchOperation === 'status' && 'Apply Status Change'}\n                {batchOperation === 'delete' && 'Confirm Delete'}\n              </>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default POListPage;","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be added.\n *\n * @returns The new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport function addMilliseconds(date, amount) {\n  const timestamp = +toDate(date);\n  return constructFrom(date, timestamp + amount);\n}\n\n// Fallback for modularized imports:\nexport default addMilliseconds;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareLocalAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarDays(_dateLeft, _dateRight));\n\n  _dateLeft.setDate(_dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(_dateLeft, _dateRight) === -sign,\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  const diff =\n    dateLeft.getFullYear() - dateRight.getFullYear() ||\n    dateLeft.getMonth() - dateRight.getMonth() ||\n    dateLeft.getDate() - dateRight.getDate() ||\n    dateLeft.getHours() - dateRight.getHours() ||\n    dateLeft.getMinutes() - dateRight.getMinutes() ||\n    dateLeft.getSeconds() - dateRight.getSeconds() ||\n    dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { \n  PurchaseOrder, \n  StatusRequirement, \n  ValidationResult,\n  POStatus\n} from '@/types/purchaseOrder';\nimport { ApiService } from './ApiService';\n\n/**\n * ValidationService\n * \n * A service for validating PO data against status requirements.\n * Provides both client-side validation and integration with backend validation.\n */\nexport class ValidationService {\n  /**\n   * Validate PO data against requirements for a specific status\n   * \n   * @param poData The purchase order data to validate\n   * @param status The status to validate against\n   * @param requirements The requirements to check\n   * @returns Validation results including errors, warnings, and info messages\n   */\n  public static validateForStatus(\n    poData: Partial<PurchaseOrder>,\n    _status: POStatus, // Using underscore to indicate intentionally unused parameter\n    requirements?: Record<string, StatusRequirement>\n  ): ValidationResult {\n    const validationResults: ValidationResult = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n      info: []\n    };\n    \n    // Skip if no requirements\n    if (!requirements) return validationResults;\n    \n    // Check each requirement\n    Object.entries(requirements).forEach(([key, requirement]) => {\n      const { level, validate, message } = requirement;\n      const isValid = this._executeValidator(validate, poData);\n      \n      if (!isValid) {\n        switch (level) {\n          case 'MANDATORY':\n            // Special case for certain status transitions\n            // If the field is not critical, don't block the transition\n            const criticalFields = ['header', 'products', 'header.poNumber', 'header.buyerInfo'];\n            const isCriticalField = criticalFields.some(criticalField => \n              key.startsWith(criticalField)\n            );\n            \n            // Only set isValid to false for critical fields\n            if (isCriticalField) validationResults.isValid = false;\n            validationResults.errors.push({\n              field: key,\n              message: message || `Required: ${key}`\n            });\n            break;\n          case 'RECOMMENDED':\n            validationResults.warnings.push({\n              field: key,\n              message: message || `Recommended: ${key}`\n            });\n            break;\n          case 'OPTIONAL':\n            validationResults.info.push({\n              field: key,\n              message: message || `Optional: ${key}`\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    \n    return validationResults;\n  }\n  \n  /**\n   * Validate a transition between statuses using the backend API\n   * \n   * @param from Starting status\n   * @param to Target status\n   * @param data PO data to validate\n   * @returns Promise with validation results\n   */\n  public static async validateTransition(\n    from: POStatus,\n    to: POStatus,\n    data: Partial<PurchaseOrder>\n  ): Promise<ValidationResult> {\n    try {\n      return await ApiService.validateTransition(from, to, data);\n    } catch (error) {\n      // If API validation fails, use a more permissive default validation\n      // to prevent UI from getting stuck\n      return {\n        isValid: true, // Allow transition even if API validation fails\n        errors: [], \n        warnings: [{ \n          field: 'status', \n          message: error instanceof Error ? error.message : 'Failed to validate transition, proceeding anyway' \n        }],\n        info: []\n      };\n    }\n  }\n  \n  /**\n   * Validate PO data against common rules\n   * \n   * @param poData Purchase order data to validate\n   * @returns Validation results\n   */\n  public static validatePOData(poData: Partial<PurchaseOrder>): ValidationResult {\n    const validationResults: ValidationResult = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n      info: []\n    };\n    \n    // Header validation\n    if (!poData.header) {\n      validationResults.isValid = false;\n      validationResults.errors.push({\n        field: 'header',\n        message: 'Purchase order header is required'\n      });\n    } else if (poData.header.poNumber) { // Only validate if PO number exists (skip for creation)\n      // PO Number validation\n      if (!poData.header.poNumber) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'header.poNumber',\n          message: 'PO Number is required'\n        });\n      } else if (!/^\\d{6,10}$/.test(poData.header.poNumber)) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'header.poNumber',\n          message: 'PO Number must be 6-10 digits'\n        });\n      }\n      \n      // Buyer info validation\n      if (!poData.header.buyerInfo) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'header.buyerInfo',\n          message: 'Buyer information is required'\n        });\n      } else {\n        if (!poData.header.buyerInfo.firstName) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: 'header.buyerInfo.firstName',\n            message: 'Buyer first name is required'\n          });\n        }\n        \n        if (!poData.header.buyerInfo.lastName) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: 'header.buyerInfo.lastName',\n            message: 'Buyer last name is required'\n          });\n        }\n        \n        if (!poData.header.buyerInfo.email) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: 'header.buyerInfo.email',\n            message: 'Buyer email is required'\n          });\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(poData.header.buyerInfo.email)) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: 'header.buyerInfo.email',\n            message: 'Please enter a valid email address'\n          });\n        }\n      }\n      \n      // Location validation\n      if (!poData.header.syscoLocation) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'header.syscoLocation',\n          message: 'Sysco location is required'\n        });\n      } else if (!poData.header.syscoLocation.name) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'header.syscoLocation.name',\n          message: 'Location name is required'\n        });\n      }\n    }\n    \n    // Products validation\n    if (!poData.products || poData.products.length === 0) {\n      validationResults.isValid = false;\n      validationResults.errors.push({\n        field: 'products',\n        message: 'At least one product is required'\n      });\n    } else {\n      poData.products.forEach((product, index) => {\n        if (!product.supc) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: `products[${index}].supc`,\n            message: 'SUPC is required for all products'\n          });\n        }\n        \n        if (product.quantity <= 0) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: `products[${index}].quantity`,\n            message: 'Quantity must be greater than 0'\n          });\n        }\n        \n        if (product.fobCost <= 0) {\n          validationResults.isValid = false;\n          validationResults.errors.push({\n            field: `products[${index}].fobCost`,\n            message: 'FOB cost must be greater than 0'\n          });\n        }\n      });\n    }\n    \n    // Weights validation\n    if (!poData.weights) {\n      // Make this a warning instead of an error\n      validationResults.warnings.push({\n        field: 'weights',\n        message: 'Weight information is required'\n      });\n    } else {\n      if (poData.weights.grossWeight <= 0) {\n        // Make this a warning instead of an error\n        validationResults.warnings.push({\n          field: 'weights.grossWeight',\n          message: 'Gross weight must be greater than 0'\n        });\n      }\n      \n      if (poData.weights.netWeight <= 0) {\n        // Make this a warning instead of an error\n        validationResults.warnings.push({\n          field: 'weights.netWeight',\n          message: 'Net weight must be greater than 0'\n        });\n      }\n      \n      if (poData.weights.netWeight > poData.weights.grossWeight) {\n        validationResults.isValid = false;\n        validationResults.errors.push({\n          field: 'weights',\n          message: 'Net weight cannot exceed gross weight'\n        });\n      }\n    }\n    \n    // Total cost validation\n    if (!poData.totalCost && poData.totalCost !== 0) {\n      validationResults.isValid = false;\n      validationResults.errors.push({\n        field: 'totalCost',\n        message: 'Total cost is required'\n      });\n    } else if (poData.totalCost < 0) {\n      validationResults.isValid = false;\n      validationResults.errors.push({\n        field: 'totalCost',\n        message: 'Total cost cannot be negative'\n      });\n    }\n    \n    // Check if total cost matches sum of products\n    if (poData.products && poData.products.length > 0 && poData.totalCost != null) {\n      const calculatedTotal = poData.products.reduce((sum, product) => sum + (product.total || 0), 0);\n      if (Math.abs(calculatedTotal - poData.totalCost) > 0.01) {\n        validationResults.warnings.push({\n          field: 'totalCost',\n          message: 'Total cost does not match sum of product totals'\n        });\n      }\n    }\n    \n    return validationResults;\n  }\n  \n  /**\n   * Execute a validation function safely\n   * \n   * @param validator The validation function or expression\n   * @param data The data to validate\n   * @returns Whether validation was successful\n   */\n  private static _executeValidator(\n    validator: ((data: any) => boolean) | string,\n    data: any\n  ): boolean {\n    // Handle string-based validator functions\n    if (typeof validator === 'string') {\n      try {\n        // Convert string to function (CAUTION: potential security risk in some contexts)\n        // This is meant for use with trusted validation rules from the backend\n        // eslint-disable-next-line no-new-func\n        return new Function('data', `return ${validator}`)(data);\n      } catch (error) {\n        console.error('Validator execution error:', error);\n        return false;\n      }\n    }\n    \n    // Handle function validators\n    if (typeof validator === 'function') {\n      try {\n        return validator(data);\n      } catch (error) {\n        console.error('Validator execution error:', error);\n        return false;\n      }\n    }\n    \n    // Default to true if validator not recognized\n    return true;\n  }\n}","import React from 'react';\nimport { ValidationResult, PurchaseOrder, POStatus } from '@/types/purchaseOrder';\nimport { ValidationService } from '@/services/ValidationService';\n\n/**\n * Props for the RequirementsChecklist component\n */\ninterface RequirementsChecklistProps {\n  poData: Partial<PurchaseOrder>;\n  status: POStatus;\n  requirements?: Record<string, any>;\n  validationResult?: ValidationResult;\n  className?: string;\n}\n\n/**\n * RequirementsChecklist Component\n * \n * Displays a checklist of requirements for a particular status,\n * showing which requirements are satisfied and which are not.\n * \n * Includes a progress bar for visual feedback on completion status.\n */\nexport const RequirementsChecklist: React.FC<RequirementsChecklistProps> = ({\n  poData,\n  status,\n  requirements,\n  validationResult: propValidationResult,\n  className = ''\n}) => {\n  // Use provided validation result or generate one if not provided\n  const validationResults = propValidationResult || \n    ValidationService.validateForStatus(poData, status, requirements);\n  \n  // Count total requirements and satisfied ones\n  const totalRequirements = \n    validationResults.errors.length + \n    validationResults.warnings.length + \n    validationResults.info.length +\n    // Count the items that passed validation\n    (Object.keys(requirements || {}).length - \n      (validationResults.errors.length + \n       0 + // Don't count warnings as requirements that failed validation\n       validationResults.info.length));\n  \n  const satisfiedRequirements = totalRequirements - \n    validationResults.errors.length;\n  \n  const completionPercentage = \n    totalRequirements > 0 \n      ? Math.round((satisfiedRequirements / totalRequirements) * 100) \n      : 100;\n  \n  // If no requirements or validation errors, show a success message\n  if (totalRequirements === 0) {\n    return (\n      <div className={`requirements-checklist ${className}`}>\n        <div className=\"alert alert-success mb-0\">\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          No specific requirements for this status.\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`requirements-checklist ${className}`}>\n      <h4 className=\"requirements-checklist__title mb-2\">Requirements for {status}</h4>\n      \n      {/* Progress bar showing completion percentage */}\n      <div className=\"progress mb-3\">\n        <div \n          className={`progress-bar ${completionPercentage < 100 ? 'bg-primary' : 'bg-success'}`}\n          role=\"progressbar\" \n          style={{ width: `${completionPercentage}%` }}\n          aria-valuenow={completionPercentage} \n          aria-valuemin={0} \n          aria-valuemax={100}\n        >\n          {completionPercentage}%\n        </div>\n      </div>\n      \n      {/* List of requirements with their status */}\n      <div className=\"requirements-checklist__items\">\n        {/* Error items (mandatory requirements not met) */}\n        {validationResults.errors.map((error, index) => (\n          <div key={`error-${index}`} className=\"list-group-item list-group-item-danger d-flex align-items-center\">\n            <i className=\"bi bi-x-circle-fill me-2\"></i>\n            <div>\n              <strong>{error.field}:</strong> {error.message}\n            </div>\n          </div>\n        ))}\n        \n        {/* Warning items (recommended requirements not met) */}\n        {validationResults.warnings.map((warning, index) => (\n          <div key={`warning-${index}`} className=\"list-group-item list-group-item-warning d-flex align-items-center\">\n            <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n            <div>\n              <strong>{warning.field}:</strong> {warning.message}\n            </div>\n          </div>\n        ))}\n        \n        {/* Info items (optional requirements not met) */}\n        {validationResults.info.map((info, index) => (\n          <div key={`info-${index}`} className=\"list-group-item list-group-item-info d-flex align-items-center\">\n            <i className=\"bi bi-info-circle-fill me-2\"></i>\n            <div>\n              <strong>{info.field}:</strong> {info.message}\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {/* Show overall status */}\n      {validationResults.isValid ? (\n        validationResults.warnings.length > 0 ? (\n          <div className=\"alert alert-warning mt-3\">\n            <i className=\"bi bi-check-circle me-2\"></i>\n            All mandatory requirements met, but there are some recommendations to consider.\n          </div>\n        ) : (\n          <div className=\"alert alert-success mt-3\">\n            <i className=\"bi bi-check-circle-fill me-2\"></i>\n            All requirements met! Ready to proceed.\n          </div>\n        )\n      ) : (\n        <div className=\"alert alert-danger mt-3\">\n          <i className=\"bi bi-x-circle-fill me-2\"></i>\n          Cannot proceed until all mandatory requirements are met.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RequirementsChecklist;","import React, { useCallback, useState, useRef } from 'react';\nimport { ApiService } from '@/services/ApiService';\n\n/**\n * File upload status type\n */\ntype FileStatus = 'idle' | 'uploading' | 'success' | 'error';\n\n/**\n * Uploaded file info\n */\nexport interface UploadedFile {\n  id: string;\n  url: string;\n  name: string;\n  size: number;\n  type: string;\n}\n\n/**\n * Props for FileUploader component\n */\ninterface FileUploaderProps {\n  onFileUpload: (files: UploadedFile[]) => void;\n  acceptedFileTypes?: string;\n  maxFileSize?: number; // in MB\n  multiple?: boolean;\n  metadata?: Record<string, any>;\n  className?: string;\n  disabled?: boolean;\n}\n\n/**\n * FileUploader Component\n * \n * A drag-and-drop file uploader with preview and progress indication.\n * Handles file validation, uploading to the server, and provides feedback.\n */\nexport const FileUploader: React.FC<FileUploaderProps> = ({\n  onFileUpload,\n  acceptedFileTypes = '.pdf,.jpg,.jpeg,.png,.doc,.docx',\n  maxFileSize = 10, // 10MB default\n  multiple = false,\n  metadata = {},\n  className = '',\n  disabled = false\n}) => {\n  // References and state\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isDragOver, setIsDragOver] = useState<boolean>(false);\n  const [status, setStatus] = useState<FileStatus>('idle');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n  \n  /**\n   * Handle file selection\n   */\n  const handleFileSelect = useCallback((files: FileList | null) => {\n    if (!files || files.length === 0) return;\n    \n    // Reset states\n    setStatus('uploading');\n    setErrorMessage('');\n    setUploadProgress(0);\n    \n    // Convert FileList to array for processing\n    const fileArray = Array.from(files);\n    \n    // Validate files\n    const validationError = validateFiles(fileArray);\n    if (validationError) {\n      setStatus('error');\n      setErrorMessage(validationError);\n      return;\n    }\n    \n    // Upload files\n    uploadFiles(fileArray);\n  }, [acceptedFileTypes, maxFileSize, metadata, onFileUpload]);\n  \n  /**\n   * Validate files before upload\n   */\n  const validateFiles = (files: File[]): string | null => {\n    // Check file types\n    const acceptedTypesArray = acceptedFileTypes.split(',').map(type => type.trim().toLowerCase());\n    \n    for (const file of files) {\n      // Check file size\n      if (file.size > maxFileSize * 1024 * 1024) {\n        return `File \"${file.name}\" exceeds the maximum size of ${maxFileSize}MB.`;\n      }\n      \n      // Check file type\n      const fileExtension = `.${file.name.split('.').pop()?.toLowerCase()}`;\n      if (!acceptedTypesArray.includes(fileExtension) && !acceptedTypesArray.includes('.*')) {\n        return `File \"${file.name}\" has an unsupported file type. Allowed types: ${acceptedFileTypes}`;\n      }\n    }\n    \n    return null;\n  };\n  \n  /**\n   * Upload files to the server\n   */\n  const uploadFiles = async (files: File[]) => {\n    try {\n      const uploadedFiles: UploadedFile[] = [];\n      \n      // Upload each file sequentially\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const progress = Math.round((i / files.length) * 50); // First half of progress\n        setUploadProgress(progress);\n        \n        // Upload file\n        const result = await ApiService.uploadFile(file, metadata);\n        \n        // Add uploaded file info\n        uploadedFiles.push({\n          id: result.id,\n          url: result.url,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        });\n        \n        // Update progress\n        const newProgress = Math.round(50 + (i + 1) / files.length * 50); // Second half of progress\n        setUploadProgress(newProgress);\n      }\n      \n      // Complete upload\n      setStatus('success');\n      setUploadProgress(100);\n      onFileUpload(uploadedFiles);\n      \n      // Reset after a delay\n      setTimeout(() => {\n        setStatus('idle');\n        setUploadProgress(0);\n      }, 1500);\n      \n    } catch (error) {\n      setStatus('error');\n      setErrorMessage(error instanceof Error ? error.message : 'Failed to upload files');\n    }\n  };\n  \n  /**\n   * Handle drag-and-drop events\n   */\n  const handleDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!disabled) {\n      setIsDragOver(true);\n    }\n  }, [disabled]);\n  \n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n  }, []);\n  \n  const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n    \n    if (!disabled) {\n      handleFileSelect(e.dataTransfer.files);\n    }\n  }, [disabled, handleFileSelect]);\n  \n  /**\n   * Handle browse button click\n   */\n  const handleBrowseClick = useCallback(() => {\n    if (fileInputRef.current && !disabled) {\n      fileInputRef.current.click();\n    }\n  }, [disabled]);\n  \n  /**\n   * Handle file input change\n   */\n  const handleFileInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    handleFileSelect(e.target.files);\n    // Reset the input value to allow selecting the same file again\n    if (e.target && e.target instanceof HTMLInputElement) {\n      e.target.value = '';\n    }\n  }, [handleFileSelect]);\n  \n  /**\n   * Build class name based on component state\n   */\n  const containerClassName = `\n    file-uploader \n    ${isDragOver ? 'file-uploader--dragover' : ''} \n    ${disabled ? 'file-uploader--disabled' : ''} \n    ${className}\n  `.trim();\n  \n  return (\n    <div className={containerClassName}>\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept={acceptedFileTypes}\n        multiple={multiple}\n        onChange={handleFileInputChange}\n        style={{ display: 'none' }}\n        disabled={disabled}\n      />\n      \n      {/* Drag and drop area */}\n      <div\n        className=\"file-uploader__dropzone\"\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        onClick={handleBrowseClick}\n      >\n        <div className=\"file-uploader__content\">\n          {status === 'idle' && (\n            <>\n              <i className=\"bi bi-cloud-upload file-uploader__icon\"></i>\n              <div className=\"file-uploader__text\">\n                <span>Drag and drop files here, or</span>\n                <span className=\"file-uploader__browse\">browse files</span>\n              </div>\n              <div className=\"file-uploader__hint text-muted\">\n                {multiple ? 'Multiple files supported' : 'Single file only'}\n                {maxFileSize && <span> (Max size: {maxFileSize}MB)</span>}\n              </div>\n              <div className=\"file-uploader__types text-muted\">\n                Accepted file types: {acceptedFileTypes}\n              </div>\n            </>\n          )}\n          \n          {status === 'uploading' && (\n            <>\n              <i className=\"bi bi-arrow-clockwise file-uploader__icon rotating\"></i>\n              <div className=\"file-uploader__text\">Uploading files...</div>\n              <div className=\"progress w-75 mt-2\">\n                <div \n                  className=\"progress-bar progress-bar-striped progress-bar-animated\"\n                  role=\"progressbar\"\n                  style={{ width: `${uploadProgress}%` }}\n                  aria-valuenow={uploadProgress}\n                  aria-valuemin={0}\n                  aria-valuemax={100}\n                >\n                  {uploadProgress}%\n                </div>\n              </div>\n            </>\n          )}\n          \n          {status === 'success' && (\n            <>\n              <i className=\"bi bi-check-circle-fill file-uploader__icon text-success\"></i>\n              <div className=\"file-uploader__text text-success\">Files uploaded successfully!</div>\n            </>\n          )}\n          \n          {status === 'error' && (\n            <>\n              <i className=\"bi bi-exclamation-circle-fill file-uploader__icon text-danger\"></i>\n              <div className=\"file-uploader__text text-danger\">Upload failed</div>\n              <div className=\"file-uploader__error\">{errorMessage}</div>\n              <button \n                className=\"btn btn-outline-primary btn-sm mt-3\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setStatus('idle');\n                }}\n              >\n                Try Again\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUploader;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { Form, Button, Card, Alert, ListGroup } from 'react-bootstrap';\nimport { FileUploader, UploadedFile } from '@/components/common/FileUploader';\nimport { format } from 'date-fns';\n\n/**\n * Props for the UploadedStatusPanel component\n */\ninterface UploadedStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * UploadedStatusPanel Component\n * \n * This panel is displayed when a PO is in the UPLOADED status.\n * It allows users to review and confirm the purchase order details,\n * add any missing information, and transition to the CONFIRMED status.\n */\nconst UploadedStatusPanel: React.FC<UploadedStatusPanelProps> = ({\n  po,\n  statusDefinition,\n  // Removed unused props from destructuring\n  validationResult,\n  onUpdate,\n  onStatusChange\n}) => {\n  // Check if we can transition to CONFIRMED status\n  const canTransitionToConfirmed = statusDefinition.allowedTransitions.includes(POStatus.CONFIRMED);\n  \n  // State for notes\n  const [confirmationNotes, setConfirmationNotes] = useState<string>('');\n  \n  // State for form submission\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Additional documents\n  const [supportingDocuments, setSupportingDocuments] = useState<UploadedFile[]>([]);\n  \n  // PO edits (simple for this example)\n  const [poEdits, setPOEdits] = useState<{\n    buyerName?: string;\n    buyerEmail?: string;\n    deliveryInstructions?: string;\n  }>({});\n  \n  /**\n   * Handle file uploads\n   */\n  const handleFileUpload = (files: UploadedFile[]) => {\n    setSupportingDocuments(prev => [...prev, ...files]);\n  };\n  \n  /**\n   * Remove an uploaded file\n   */\n  const handleRemoveFile = (fileId: string) => {\n    setSupportingDocuments(prev => prev.filter(file => file.id !== fileId));\n  };\n  \n  /**\n   * Handle input changes\n   */\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    if (name === 'notes') {\n      setConfirmationNotes(value);\n    } else {\n      setPOEdits(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  \n  /**\n   * Handle form submission to confirm the PO\n   */\n  const handleConfirmPO = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setIsSubmitting(true);\n      setError(null);\n      \n      // Prepare update data if there are any edits\n      if (Object.keys(poEdits).length > 0 || supportingDocuments.length > 0) {\n        const updateData: Partial<PurchaseOrder> = {};\n        \n        // Apply buyer info edits if any\n        if (poEdits.buyerName || poEdits.buyerEmail) {\n          const [firstName, lastName] = (poEdits.buyerName || `${po.header.buyerInfo.firstName} ${po.header.buyerInfo.lastName}`).split(' ');\n          \n          updateData.header = {\n            ...po.header,\n            buyerInfo: {\n              ...po.header.buyerInfo,\n              firstName: firstName || po.header.buyerInfo.firstName,\n              lastName: lastName || po.header.buyerInfo.lastName,\n              email: poEdits.buyerEmail || po.header.buyerInfo.email\n            }\n          };\n        }\n        \n        // Apply delivery instructions if provided\n        if (poEdits.deliveryInstructions) {\n          updateData.header = updateData.header || { ...po.header };\n          updateData.header.deliveryInfo = {\n            ...po.header.deliveryInfo,\n            instructions: poEdits.deliveryInstructions\n          };\n        }\n        \n        // Add supporting documents if any\n        if (supportingDocuments.length > 0) {\n          updateData.documents = [\n            ...(po.documents || []),\n            ...supportingDocuments.map(doc => ({\n              id: doc.id,\n              url: doc.url,\n              name: doc.name,\n              type: 'supporting',\n              uploadedAt: new Date().toISOString()\n            }))\n          ];\n        }\n        \n        // Update PO with the changes\n        await onUpdate(updateData);\n      }\n      \n      // Transition to CONFIRMED status\n      await onStatusChange(POStatus.CONFIRMED, confirmationNotes);\n      \n      setSuccess('Purchase order confirmed successfully');\n      setIsSubmitting(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to confirm purchase order');\n      setIsSubmitting(false);\n    }\n  };\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      return format(new Date(dateStr), 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  /**\n   * Format a currency value\n   */\n  const formatCurrency = (value: number | undefined) => {\n    if (value === undefined) return 'N/A';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(value);\n  };\n  \n  return (\n    <div className=\"uploaded-status-panel\">\n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\" onClose={() => setError(null)} dismissible>\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {error}\n        </Alert>\n      )}\n      \n      {/* Success alert */}\n      {success && (\n        <Alert variant=\"success\" className=\"mb-4\" onClose={() => setSuccess(null)} dismissible>\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          {success}\n        </Alert>\n      )}\n      \n      {/* PO Review Section */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-uploaded-light d-flex justify-content-between align-items-center\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-file-earmark-text me-2\"></i>\n            Purchase Order Review\n          </h5>\n          <div className=\"text-muted small\">\n            Uploaded: {formatDate(po.createdAt)}\n          </div>\n        </Card.Header>\n        \n        <Card.Body>\n          {/* PO Header Information */}\n          <div className=\"row mb-4\">\n            <div className=\"col-md-6\">\n              <h6>Purchase Order Details</h6>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <strong>PO Number:</strong> {po.header.poNumber}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Order Date:</strong> {formatDate(po.header.orderDate)}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Total Cost:</strong> {formatCurrency(po.totalCost)}\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n            \n            <div className=\"col-md-6\">\n              <h6>Buyer Information</h6>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <strong>Name:</strong> {po.header.buyerInfo.firstName} {po.header.buyerInfo.lastName}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Email:</strong> {po.header.buyerInfo.email}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Location:</strong> {po.header.syscoLocation.name}\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n          </div>\n          \n          {/* Product Summary */}\n          <h6>Products ({po.products.length})</h6>\n          <div className=\"table-responsive mb-3\">\n            <table className=\"table table-striped table-bordered\">\n              <thead>\n                <tr>\n                  <th>SUPC</th>\n                  <th>Description</th>\n                  <th>Quantity</th>\n                  <th>FOB Cost</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {po.products.map((product, index) => (\n                  <tr key={index}>\n                    <td>{product.supc}</td>\n                    <td>{product.description || 'N/A'}</td>\n                    <td>{product.quantity}</td>\n                    <td>{formatCurrency(product.fobCost)}</td>\n                    <td>{formatCurrency(product.total)}</td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot>\n                <tr>\n                  <th colSpan={4} className=\"text-end\">Total:</th>\n                  <th>{formatCurrency(po.totalCost)}</th>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n          \n          {/* PO Notes */}\n          {po.notes && (\n            <div className=\"mb-3\">\n              <h6>Purchase Order Notes</h6>\n              <div className=\"border p-3 rounded bg-light\">\n                {po.notes}\n              </div>\n            </div>\n          )}\n        </Card.Body>\n      </Card>\n      \n      {/* Confirmation Form */}\n      {canTransitionToConfirmed ? (\n        <Form onSubmit={handleConfirmPO}>\n          <Card className=\"mb-4\">\n            <Card.Header className=\"bg-status-uploaded-light\">\n              <h5 className=\"mb-0\">\n                <i className=\"bi bi-pencil me-2\"></i>\n                Additional Information & Edits\n              </h5>\n            </Card.Header>\n            <Card.Body>\n              {/* Buyer Information Edits */}\n              <h6 className=\"mb-3\">Update Buyer Information (Optional)</h6>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"buyerName\">\n                    <Form.Label>Buyer Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"buyerName\"\n                      placeholder={`${po.header.buyerInfo.firstName} ${po.header.buyerInfo.lastName}`}\n                      value={poEdits.buyerName || ''}\n                      onChange={handleInputChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      Format as \"First Last\"\n                    </Form.Text>\n                  </Form.Group>\n                </div>\n                \n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"buyerEmail\">\n                    <Form.Label>Buyer Email</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      name=\"buyerEmail\"\n                      placeholder={po.header.buyerInfo.email}\n                      value={poEdits.buyerEmail || ''}\n                      onChange={handleInputChange}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              \n              {/* Delivery Instructions */}\n              <h6 className=\"mb-3\">Delivery Instructions (Optional)</h6>\n              <Form.Group className=\"mb-4\" controlId=\"deliveryInstructions\">\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"deliveryInstructions\"\n                  rows={3}\n                  placeholder=\"Add any special delivery instructions here\"\n                  value={poEdits.deliveryInstructions || ''}\n                  onChange={handleInputChange}\n                />\n              </Form.Group>\n              \n              {/* Supporting Documents */}\n              <h6 className=\"mb-3\">Upload Supporting Documents (Optional)</h6>\n              <FileUploader\n                onFileUpload={handleFileUpload}\n                acceptedFileTypes=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                maxFileSize={5}\n                multiple={true}\n                className=\"mb-3\"\n              />\n              \n              {supportingDocuments.length > 0 && (\n                <div className=\"mb-4\">\n                  <h6>Uploaded Documents</h6>\n                  <ListGroup>\n                    {supportingDocuments.map((file) => (\n                      <ListGroup.Item key={file.id} className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                          <i className=\"bi bi-file-earmark me-2\"></i>\n                          {file.name}\n                        </div>\n                        <Button \n                          variant=\"outline-danger\" \n                          size=\"sm\"\n                          onClick={() => handleRemoveFile(file.id)}\n                        >\n                          <i className=\"bi bi-trash\"></i>\n                        </Button>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                </div>\n              )}\n              \n              {/* Confirmation Notes */}\n              <h6 className=\"mb-3\">Confirmation Notes</h6>\n              <Form.Group className=\"mb-3\" controlId=\"notes\">\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"notes\"\n                  rows={3}\n                  placeholder=\"Add notes about the confirmation process here\"\n                  value={confirmationNotes}\n                  onChange={handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  These notes will be included in the purchase order history.\n                </Form.Text>\n              </Form.Group>\n            </Card.Body>\n            <Card.Footer className=\"d-flex justify-content-end\">\n              <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting || !validationResult?.isValid}>\n                {isSubmitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-check-circle me-2\"></i>\n                    Confirm Purchase Order\n                  </>\n                )}\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Form>\n      ) : (\n        <Alert variant=\"warning\">\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          This purchase order cannot be confirmed at this time.\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport default UploadedStatusPanel;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult,\n  POShipping\n} from '@/types/purchaseOrder';\nimport { Form, Button, Card, Alert, Badge } from 'react-bootstrap';\nimport { FileUploader, UploadedFile } from '@/components/common/FileUploader';\nimport { format } from 'date-fns';\n\n/**\n * Props for the ConfirmedStatusPanel component\n */\ninterface ConfirmedStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * Form data interface for shipping information\n */\ninterface ShippingFormData {\n  shippingDate: string;\n  carrier: string;\n  trackingNumber: string;\n  estimatedDeliveryDate: string;\n  notes: string;\n}\n\n/**\n * ConfirmedStatusPanel Component\n * \n * This panel is displayed when a PO is in the CONFIRMED status.\n * It allows users to provide shipping details and documentation\n * to mark the PO as shipped.\n */\nconst ConfirmedStatusPanel: React.FC<ConfirmedStatusPanelProps> = ({\n  po,\n  statusDefinition,\n  // Removed unused prop warning\n  // requirements,\n  validationResult,\n  onUpdate,\n  onStatusChange\n}) => {\n  // Determine if the PO can be transitioned to SHIPPED\n  const canTransitionToShipped = statusDefinition.allowedTransitions.includes(POStatus.SHIPPED);\n  \n  // State for shipping form data\n  const [shippingData, setShippingData] = useState<ShippingFormData>({\n    shippingDate: format(new Date(), 'yyyy-MM-dd'),\n    carrier: '',\n    trackingNumber: '',\n    estimatedDeliveryDate: format(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), 'yyyy-MM-dd'), // Default to 7 days from now\n    notes: ''\n  });\n  \n  // State for shipping documents\n  const [shippingDocuments, setShippingDocuments] = useState<UploadedFile[]>([]);\n  \n  // State for form validation and submission\n  const [validated, setValidated] = useState<boolean>(false);\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  /**\n   * Handle form input changes\n   */\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    setShippingData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  \n  /**\n   * Handle file uploads\n   */\n  const handleFileUpload = (files: UploadedFile[]) => {\n    setShippingDocuments(prev => [...prev, ...files]);\n  };\n  \n  /**\n   * Remove an uploaded file\n   */\n  const handleRemoveFile = (fileId: string) => {\n    setShippingDocuments(prev => prev.filter(file => file.id !== fileId));\n  };\n  \n  /**\n   * Get the confirmation date from the PO history\n   */\n  const getConfirmationDate = (): string => {\n    if (!po.history) return 'N/A';\n    \n    const confirmationEvent = po.history.find(\n      entry => entry.status === POStatus.CONFIRMED\n    );\n    \n    return confirmationEvent \n      ? format(new Date(confirmationEvent.timestamp), 'MMM d, yyyy')\n      : format(new Date(po.createdAt || Date.now()), 'MMM d, yyyy');\n  };\n  \n  /**\n   * Handle form submission and status transition to SHIPPED\n   */\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    \n    // Validate form\n    if (!form.checkValidity()) {\n      e.stopPropagation();\n      setValidated(true);\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      setError(null);\n      \n      // Prepare shipping data for update\n      const updateData: Partial<PurchaseOrder> = {\n        header: {\n          ...po.header,\n          deliveryInfo: {\n            ...po.header.deliveryInfo,\n            date: shippingData.shippingDate\n          }\n        },\n        shipping: {\n          carrier: shippingData.carrier,\n          trackingNumber: shippingData.trackingNumber,\n          shippingDate: shippingData.shippingDate,\n          estimatedDeliveryDate: shippingData.estimatedDeliveryDate,\n          status: 'in-transit'\n        } as POShipping,\n        documents: [\n          ...(po.documents || []),\n          ...shippingDocuments.map(doc => ({\n            id: doc.id,\n            url: doc.url,\n            name: doc.name,\n            type: 'shipping',\n            uploadedAt: new Date().toISOString()\n          }))\n        ]\n      };\n      \n      // Update PO with shipping information\n      await onUpdate(updateData);\n      \n      // Transition to SHIPPED status\n      await onStatusChange(POStatus.SHIPPED, shippingData.notes);\n      \n      setSuccess('Purchase order marked as shipped successfully');\n      setIsSubmitting(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to mark purchase order as shipped');\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <div className=\"confirmed-status-panel\">\n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\" onClose={() => setError(null)} dismissible>\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {error}\n        </Alert>\n      )}\n      \n      {/* Success alert */}\n      {success && (\n        <Alert variant=\"success\" className=\"mb-4\" onClose={() => setSuccess(null)} dismissible>\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          {success}\n        </Alert>\n      )}\n      \n      {/* Confirmation Summary */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-confirmed-light d-flex justify-content-between align-items-center\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-check-circle me-2\"></i>\n            Confirmed Order Details\n          </h5>\n          <Badge bg=\"success\">\n            Confirmed on: {getConfirmationDate()}\n          </Badge>\n        </Card.Header>\n        \n        <Card.Body>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <h6>Order Information</h6>\n              <dl className=\"row\">\n                <dt className=\"col-sm-4\">PO Number</dt>\n                <dd className=\"col-sm-8\">{po.header.poNumber}</dd>\n                \n                <dt className=\"col-sm-4\">Order Date</dt>\n                <dd className=\"col-sm-8\">{format(new Date(po.header.orderDate), 'MMM d, yyyy')}</dd>\n                \n                <dt className=\"col-sm-4\">Total Amount</dt>\n                <dd className=\"col-sm-8\">\n                  {new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD'\n                  }).format(po.totalCost)}\n                </dd>\n                \n                <dt className=\"col-sm-4\">Products</dt>\n                <dd className=\"col-sm-8\">{po.products.length} items</dd>\n              </dl>\n            </div>\n            \n            <div className=\"col-md-6\">\n              <h6>Shipping Information</h6>\n              <dl className=\"row\">\n                <dt className=\"col-sm-4\">Ship To</dt>\n                <dd className=\"col-sm-8\">\n                  {po.header.syscoLocation.name}\n                  {po.header.syscoLocation.address && (\n                    <div className=\"small text-muted\">{po.header.syscoLocation.address}</div>\n                  )}\n                </dd>\n                \n                <dt className=\"col-sm-4\">Buyer</dt>\n                <dd className=\"col-sm-8\">\n                  {po.header.buyerInfo.firstName} {po.header.buyerInfo.lastName}\n                  <div className=\"small text-muted\">{po.header.buyerInfo.email}</div>\n                </dd>\n                \n                {po.header.deliveryInfo?.instructions && (\n                  <>\n                    <dt className=\"col-sm-4\">Instructions</dt>\n                    <dd className=\"col-sm-8\">{po.header.deliveryInfo.instructions}</dd>\n                  </>\n                )}\n              </dl>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n      \n      {/* Shipping Form */}\n      {canTransitionToShipped ? (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Card className=\"mb-4\">\n            <Card.Header className=\"bg-status-confirmed-light\">\n              <h5 className=\"mb-0\">\n                <i className=\"bi bi-truck me-2\"></i>\n                Mark Order as Shipped\n              </h5>\n            </Card.Header>\n            \n            <Card.Body>\n              <div className=\"row\">\n                {/* Shipping Date */}\n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"shippingDate\">\n                    <Form.Label>Shipping Date *</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"shippingDate\"\n                      value={shippingData.shippingDate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Shipping date is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                {/* Estimated Delivery Date */}\n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"estimatedDeliveryDate\">\n                    <Form.Label>Estimated Delivery Date *</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"estimatedDeliveryDate\"\n                      value={shippingData.estimatedDeliveryDate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Estimated delivery date is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                {/* Carrier */}\n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"carrier\">\n                    <Form.Label>Carrier *</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"carrier\"\n                      value={shippingData.carrier}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter carrier name\"\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Carrier is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                {/* Tracking Number */}\n                <div className=\"col-md-6\">\n                  <Form.Group className=\"mb-3\" controlId=\"trackingNumber\">\n                    <Form.Label>Tracking Number *</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"trackingNumber\"\n                      value={shippingData.trackingNumber}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter tracking number\"\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Tracking number is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n              </div>\n              \n              {/* Shipping Documents */}\n              <h6 className=\"mt-2 mb-3\">Shipping Documents</h6>\n              <FileUploader\n                onFileUpload={handleFileUpload}\n                acceptedFileTypes=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                maxFileSize={5}\n                multiple={true}\n                className=\"mb-3\"\n              />\n              \n              {shippingDocuments.length > 0 && (\n                <div className=\"mb-4 mt-3\">\n                  <h6>Uploaded Documents</h6>\n                  <div className=\"list-group\">\n                    {shippingDocuments.map((file) => (\n                      <div key={file.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        <div>\n                          <i className=\"bi bi-file-earmark me-2\"></i>\n                          {file.name}\n                        </div>\n                        <Button \n                          variant=\"outline-danger\" \n                          size=\"sm\"\n                          onClick={() => handleRemoveFile(file.id)}\n                        >\n                          <i className=\"bi bi-trash\"></i>\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              {/* Notes */}\n              <Form.Group className=\"mb-3\" controlId=\"notes\">\n                <Form.Label>Shipping Notes</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"notes\"\n                  rows={3}\n                  value={shippingData.notes}\n                  onChange={handleInputChange}\n                  placeholder=\"Add any notes about shipping\"\n                />\n              </Form.Group>\n            </Card.Body>\n            \n            <Card.Footer className=\"d-flex justify-content-end\">\n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={isSubmitting || (validationResult !== null && !validationResult.isValid)}\n              >\n                {isSubmitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-truck me-2\"></i>\n                    Mark as Shipped\n                  </>\n                )}\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Form>\n      ) : (\n        <Alert variant=\"warning\">\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          This purchase order cannot be marked as shipped at this time.\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport default ConfirmedStatusPanel;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { FileUploader, UploadedFile } from '@/components/common/FileUploader';\nimport { format } from 'date-fns';\n\n/**\n * Props for the ShippedStatusPanel component\n */\ninterface ShippedStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * Form data interface for invoice information\n */\ninterface InvoiceFormData {\n  invoiceNumber: string;\n  invoiceDate: Date;\n  amount: number;\n  dueDate: Date;\n  notes: string;\n}\n\n/**\n * ShippedStatusPanel Component\n * \n * This panel is displayed when a PO is in the SHIPPED status.\n * It allows users to create an invoice for the shipped order and\n * upload shipping documents before transitioning to the INVOICED status.\n */\nconst ShippedStatusPanel: React.FC<ShippedStatusPanelProps> = ({\n  po,\n  statusDefinition,\n  // Removed unused props from destructuring\n  onUpdate,\n  onStatusChange\n}) => {\n  // Determine if the PO can be transitioned to INVOICED\n  const canTransitionToInvoiced = statusDefinition.allowedTransitions.includes(POStatus.INVOICED);\n  \n  // State for invoice form data\n  const [invoiceData, setInvoiceData] = useState<InvoiceFormData>({\n    invoiceNumber: '',\n    invoiceDate: new Date(),\n    amount: po.totalCost || 0,\n    dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days from now\n    notes: ''\n  });\n  \n  // State for shipping documents\n  const [shippingDocuments, setShippingDocuments] = useState<UploadedFile[]>([]);\n  \n  // State for form validation and submission\n  const [validated, setValidated] = useState<boolean>(false);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  /**\n   * Handle form input changes\n   */\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    \n    setInvoiceData(prevData => ({\n      ...prevData,\n      [name]: name === 'amount' ? parseFloat(value) || 0 : value\n    }));\n  };\n  \n  /**\n   * Handle date changes\n   */\n  const handleDateChange = (name: string, date: Date | null) => {\n    if (date) {\n      setInvoiceData(prevData => ({\n        ...prevData,\n        [name]: date\n      }));\n    }\n  };\n  \n  /**\n   * Handle file uploads\n   */\n  const handleFileUpload = (files: UploadedFile[]) => {\n    setShippingDocuments(prev => [...prev, ...files]);\n  };\n  \n  /**\n   * Remove an uploaded file\n   */\n  const handleRemoveFile = (fileId: string) => {\n    setShippingDocuments(prev => prev.filter(file => file.id !== fileId));\n  };\n  \n  /**\n   * Handle form submission and status transition to INVOICED\n   */\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    \n    // Validate form\n    if (!form.checkValidity()) {\n      e.stopPropagation();\n      setValidated(true);\n      return;\n    }\n    \n    try {\n      setSubmitting(true);\n      setError(null);\n      \n      // Prepare invoice data for update\n      const updateData: Partial<PurchaseOrder> = {\n        invoice: {\n          invoiceNumber: invoiceData.invoiceNumber,\n          invoiceDate: format(invoiceData.invoiceDate, 'MM/dd/yy'),\n          amount: invoiceData.amount,\n          dueDate: format(invoiceData.dueDate, 'MM/dd/yy')\n        },\n        documents: [\n          ...(po.documents || []),\n          ...shippingDocuments.map(doc => ({\n            id: doc.id,\n            url: doc.url,\n            name: doc.name,\n            type: 'shipping',\n            uploadedAt: new Date().toISOString()\n          }))\n        ]\n      };\n      \n      // Update PO with invoice information\n      await onUpdate(updateData);\n      \n      // Transition to INVOICED status\n      await onStatusChange(POStatus.INVOICED, invoiceData.notes);\n      \n      setSuccess('Invoice created and status updated successfully');\n      setSubmitting(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to create invoice');\n      setSubmitting(false);\n    }\n  };\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      const date = new Date(dateStr);\n      return isNaN(date.getTime()) ? dateStr : format(date, 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  return (\n    <Card className=\"mb-3\">\n      <Card.Header className=\"bg-status-shipped text-white d-flex justify-content-between align-items-center\">\n        <div>\n          <i className=\"bi bi-truck me-2\"></i>\n          Create Invoice for Shipped Order\n        </div>\n        {po.header.deliveryInfo?.date && (\n          <div className=\"badge bg-light text-dark\">\n            Shipped on: {formatDate(po.header.deliveryInfo.date)}\n          </div>\n        )}\n      </Card.Header>\n      \n      <Card.Body>\n        {/* Error alert */}\n        {error && (\n          <Alert variant=\"danger\" onClose={() => setError(null)} dismissible>\n            <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n            {error}\n          </Alert>\n        )}\n        \n        {/* Success alert */}\n        {success && (\n          <Alert variant=\"success\" onClose={() => setSuccess(null)} dismissible>\n            <i className=\"bi bi-check-circle-fill me-2\"></i>\n            {success}\n          </Alert>\n        )}\n        \n        {/* Shipping information */}\n        <div className=\"mb-4\">\n          <h5>Shipping Information</h5>\n          <div className=\"row g-3\">\n            <div className=\"col-md-6\">\n              <strong>Ship To:</strong> {po.header.syscoLocation.name}\n              {po.header.syscoLocation.address && (\n                <div className=\"text-muted small\">{po.header.syscoLocation.address}</div>\n              )}\n            </div>\n            <div className=\"col-md-6\">\n              <strong>Shipping Date:</strong> {formatDate(po.header.deliveryInfo?.date)}\n              {po.header.deliveryInfo?.instructions && (\n                <div className=\"text-muted small\">\n                  <strong>Instructions:</strong> {po.header.deliveryInfo.instructions}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {canTransitionToInvoiced ? (\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            {/* Invoice information section */}\n            <div className=\"mb-4\">\n              <h5>Invoice Information</h5>\n              <div className=\"row g-3\">\n                <div className=\"col-md-6\">\n                  <Form.Group controlId=\"invoiceNumber\">\n                    <Form.Label>Invoice Number *</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"invoiceNumber\"\n                      value={invoiceData.invoiceNumber}\n                      onChange={handleInputChange}\n                      required\n                      placeholder=\"Enter invoice number\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Invoice number is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                <div className=\"col-md-6\">\n                  <Form.Group controlId=\"invoiceDate\">\n                    <Form.Label>Invoice Date *</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"invoiceDate\"\n                      value={invoiceData.invoiceDate.toISOString().split('T')[0]}\n                      onChange={(e) => handleDateChange('invoiceDate', e.target.value ? new Date(e.target.value) : null)}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Invoice date is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                <div className=\"col-md-6\">\n                  <Form.Group controlId=\"amount\">\n                    <Form.Label>Invoice Amount *</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"amount\"\n                      value={invoiceData.amount}\n                      onChange={handleInputChange}\n                      required\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Invoice amount is required and must be greater than 0\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n                \n                <div className=\"col-md-6\">\n                  <Form.Group controlId=\"dueDate\">\n                    <Form.Label>Due Date *</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"dueDate\"\n                      value={invoiceData.dueDate.toISOString().split('T')[0]}\n                      onChange={(e) => handleDateChange('dueDate', e.target.value ? new Date(e.target.value) : null)}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Due date is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </div>\n              </div>\n            </div>\n            \n            {/* Shipping documents section */}\n            <div className=\"mb-4\">\n              <h5>Shipping Documents</h5>\n              <FileUploader\n                onFileUpload={handleFileUpload}\n                acceptedFileTypes=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                maxFileSize={5}\n                multiple={true}\n              />\n              \n              {shippingDocuments.length > 0 && (\n                <div className=\"mt-3\">\n                  <h6>Uploaded Documents</h6>\n                  <div className=\"list-group\">\n                    {shippingDocuments.map((file) => (\n                      <div key={file.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        <div>\n                          <i className=\"bi bi-file-earmark me-2\"></i>\n                          {file.name}\n                        </div>\n                        <Button \n                          variant=\"outline-danger\" \n                          size=\"sm\"\n                          onClick={() => handleRemoveFile(file.id)}\n                        >\n                          <i className=\"bi bi-trash\"></i>\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Notes section */}\n            <div className=\"mb-4\">\n              <Form.Group controlId=\"notes\">\n                <Form.Label>Notes</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"notes\"\n                  value={invoiceData.notes}\n                  onChange={handleInputChange}\n                  rows={3}\n                  placeholder=\"Add any notes about this invoice\"\n                />\n              </Form.Group>\n            </div>\n            \n            {/* Action buttons */}\n            <div className=\"d-flex justify-content-end gap-2\">\n              <Button\n                variant=\"outline-secondary\"\n                type=\"button\"\n                disabled={submitting}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={submitting}\n              >\n                {submitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>Create Invoice & Update Status</>\n                )}\n              </Button>\n            </div>\n          </Form>\n        ) : (\n          <Alert variant=\"warning\">\n            <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n            Transitioning to INVOICED status is not currently available.\n          </Alert>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ShippedStatusPanel;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { Form, Button, Card, Alert, Row, Col } from 'react-bootstrap';\nimport { FileUploader, UploadedFile } from '@/components/common/FileUploader';\nimport { format } from 'date-fns';\n\n/**\n * Props for the InvoicedStatusPanel component\n */\ninterface InvoicedStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * Form data interface for delivery confirmation\n */\ninterface DeliveryFormData {\n  deliveryDate: string;\n  receivedBy: string;\n  condition: 'good' | 'damaged' | 'partial';\n  notes: string;\n}\n\n/**\n * InvoicedStatusPanel Component\n * \n * This panel is displayed when a PO is in the INVOICED status.\n * It allows users to confirm delivery of the order and provide\n * delivery details before transitioning to the DELIVERED status.\n */\nconst InvoicedStatusPanel: React.FC<InvoicedStatusPanelProps> = ({\n  po,\n  statusDefinition,\n  // Removed unused prop warnings\n  // requirements,\n  validationResult,\n  onUpdate,\n  onStatusChange\n}) => {\n  // Determine if the PO can be transitioned to DELIVERED\n  const canTransitionToDelivered = statusDefinition.allowedTransitions.includes(POStatus.DELIVERED);\n  \n  // Initialize default delivery date to today\n  const today = new Date();\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  \n  // State for delivery form data\n  const [deliveryData, setDeliveryData] = useState<DeliveryFormData>({\n    deliveryDate: todayFormatted,\n    receivedBy: '',\n    condition: 'good',\n    notes: ''\n  });\n  \n  // State for proof of delivery documents\n  const [deliveryDocuments, setDeliveryDocuments] = useState<UploadedFile[]>([]);\n  \n  // State for form validation and submission\n  const [validated, setValidated] = useState<boolean>(false);\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  /**\n   * Handle form input changes\n   */\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    setDeliveryData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  \n  /**\n   * Handle file uploads\n   */\n  const handleFileUpload = (files: UploadedFile[]) => {\n    setDeliveryDocuments(prev => [...prev, ...files]);\n  };\n  \n  /**\n   * Remove an uploaded file\n   */\n  const handleRemoveFile = (fileId: string) => {\n    setDeliveryDocuments(prev => prev.filter(file => file.id !== fileId));\n  };\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      return format(new Date(dateStr), 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  /**\n   * Format currency for display\n   */\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  \n  /**\n   * Handle form submission to confirm delivery\n   */\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    \n    // Validate form\n    if (!form.checkValidity()) {\n      e.stopPropagation();\n      setValidated(true);\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      setError(null);\n      \n      // Prepare delivery data for update\n      const updateData: Partial<PurchaseOrder> = {\n        delivery: {\n          deliveryDate: deliveryData.deliveryDate,\n          receivedBy: deliveryData.receivedBy,\n          condition: deliveryData.condition,\n          notes: deliveryData.notes\n        },\n        shipping: po.shipping ? {\n          ...po.shipping,\n          actualDeliveryDate: deliveryData.deliveryDate,\n          status: 'delivered'\n        } : undefined,\n        documents: [\n          ...(po.documents || []),\n          ...deliveryDocuments.map(doc => ({\n            id: doc.id,\n            url: doc.url,\n            name: doc.name,\n            type: 'delivery',\n            uploadedAt: new Date().toISOString()\n          }))\n        ]\n      };\n      \n      // Update PO with delivery information\n      await onUpdate(updateData);\n      \n      // Transition to DELIVERED status\n      await onStatusChange(POStatus.DELIVERED, deliveryData.notes);\n      \n      setSuccess('Delivery confirmed successfully');\n      setIsSubmitting(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to confirm delivery');\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <div className=\"invoiced-status-panel\">\n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\" onClose={() => setError(null)} dismissible>\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {error}\n        </Alert>\n      )}\n      \n      {/* Success alert */}\n      {success && (\n        <Alert variant=\"success\" className=\"mb-4\" onClose={() => setSuccess(null)} dismissible>\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          {success}\n        </Alert>\n      )}\n      \n      {/* Invoice Summary */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-invoiced-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-receipt me-2\"></i>\n            Invoice Details\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          {po.invoice ? (\n            <Row>\n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Invoice Number</dt>\n                  <dd className=\"col-sm-8\">{po.invoice.invoiceNumber}</dd>\n                  \n                  <dt className=\"col-sm-4\">Invoice Date</dt>\n                  <dd className=\"col-sm-8\">{formatDate(po.invoice.invoiceDate)}</dd>\n                </dl>\n              </Col>\n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Amount</dt>\n                  <dd className=\"col-sm-8\">{formatCurrency(po.invoice.amount)}</dd>\n                  \n                  <dt className=\"col-sm-4\">Due Date</dt>\n                  <dd className=\"col-sm-8\">{formatDate(po.invoice.dueDate)}</dd>\n                </dl>\n              </Col>\n            </Row>\n          ) : (\n            <Alert variant=\"warning\">\n              <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n              No invoice information available.\n            </Alert>\n          )}\n        </Card.Body>\n      </Card>\n      \n      {/* Shipping Information */}\n      {po.shipping && (\n        <Card className=\"mb-4\">\n          <Card.Header className=\"bg-status-shipped-light\">\n            <h5 className=\"mb-0\">\n              <i className=\"bi bi-truck me-2\"></i>\n              Shipping Information\n            </h5>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Carrier</dt>\n                  <dd className=\"col-sm-8\">{po.shipping.carrier}</dd>\n                  \n                  <dt className=\"col-sm-4\">Ship Date</dt>\n                  <dd className=\"col-sm-8\">{formatDate(po.shipping.shippingDate)}</dd>\n                </dl>\n              </Col>\n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Tracking</dt>\n                  <dd className=\"col-sm-8\">\n                    <a href={`https://www.google.com/search?q=${po.shipping.carrier}+tracking+${po.shipping.trackingNumber}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {po.shipping.trackingNumber}\n                      <i className=\"bi bi-box-arrow-up-right ms-2 small\"></i>\n                    </a>\n                  </dd>\n                  \n                  <dt className=\"col-sm-4\">Est. Delivery</dt>\n                  <dd className=\"col-sm-8\">{formatDate(po.shipping.estimatedDeliveryDate)}</dd>\n                </dl>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      )}\n      \n      {/* Delivery Confirmation Form */}\n      {canTransitionToDelivered ? (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Card>\n            <Card.Header className=\"bg-status-invoiced-light\">\n              <h5 className=\"mb-0\">\n                <i className=\"bi bi-clipboard-check me-2\"></i>\n                Confirm Delivery\n              </h5>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                {/* Delivery Date */}\n                <Col md={6}>\n                  <Form.Group className=\"mb-3\" controlId=\"deliveryDate\">\n                    <Form.Label>Delivery Date *</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"deliveryDate\"\n                      value={deliveryData.deliveryDate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Delivery date is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n                \n                {/* Received By */}\n                <Col md={6}>\n                  <Form.Group className=\"mb-3\" controlId=\"receivedBy\">\n                    <Form.Label>Received By *</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"receivedBy\"\n                      value={deliveryData.receivedBy}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter name of person who received delivery\"\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Receiver's name is required\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n                \n                {/* Condition */}\n                <Col md={6}>\n                  <Form.Group className=\"mb-3\" controlId=\"condition\">\n                    <Form.Label>Condition *</Form.Label>\n                    <Form.Select\n                      name=\"condition\"\n                      value={deliveryData.condition}\n                      onChange={handleInputChange}\n                      required\n                    >\n                      <option value=\"good\">Good - No issues</option>\n                      <option value=\"damaged\">Damaged - Items arrived damaged</option>\n                      <option value=\"partial\">Partial - Some items missing</option>\n                    </Form.Select>\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please select the condition\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n              \n              {/* Notes */}\n              <Form.Group className=\"mb-3\" controlId=\"notes\">\n                <Form.Label>Delivery Notes</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"notes\"\n                  rows={3}\n                  value={deliveryData.notes}\n                  onChange={handleInputChange}\n                  placeholder=\"Add any notes about the delivery\"\n                />\n              </Form.Group>\n              \n              {/* Proof of Delivery Documents */}\n              <div className=\"mb-4\">\n                <h6>Proof of Delivery Documents</h6>\n                <p className=\"text-muted small mb-2\">\n                  Upload signed delivery receipts or other proof of delivery documents\n                </p>\n                <FileUploader\n                  onFileUpload={handleFileUpload}\n                  acceptedFileTypes=\".pdf,.jpg,.jpeg,.png\"\n                  maxFileSize={5}\n                  multiple={true}\n                />\n                \n                {deliveryDocuments.length > 0 && (\n                  <div className=\"mt-3\">\n                    <h6>Uploaded Documents</h6>\n                    <div className=\"list-group\">\n                      {deliveryDocuments.map((file) => (\n                        <div key={file.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                          <div>\n                            <i className=\"bi bi-file-earmark me-2\"></i>\n                            {file.name}\n                          </div>\n                          <Button \n                            variant=\"outline-danger\" \n                            size=\"sm\"\n                            onClick={() => handleRemoveFile(file.id)}\n                          >\n                            <i className=\"bi bi-trash\"></i>\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </Card.Body>\n            <Card.Footer className=\"d-flex justify-content-end\">\n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={isSubmitting || (validationResult !== null && !validationResult.isValid)}\n              >\n                {isSubmitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-check-circle me-2\"></i>\n                    Confirm Delivery\n                  </>\n                )}\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Form>\n      ) : (\n        <Alert variant=\"warning\">\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          This purchase order cannot be marked as delivered at this time.\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport default InvoicedStatusPanel;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { Form, Button, Card, Alert, Badge, Row, Col, ListGroup } from 'react-bootstrap';\nimport { format } from 'date-fns';\n\n/**\n * Props for the DeliveredStatusPanel component\n */\ninterface DeliveredStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * DeliveredStatusPanel Component\n * \n * This panel is displayed when a PO is in the DELIVERED status.\n * It shows delivery details and provides options for marking the\n * invoice as paid and finalizing the PO.\n */\nconst DeliveredStatusPanel: React.FC<DeliveredStatusPanelProps> = ({\n  po,\n  // Removed unused props from destructuring\n  onUpdate,\n  // onStatusChange is unused but may be needed in future implementations\n}) => {\n  // State for form submission\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [paymentNotes, setPaymentNotes] = useState<string>('');\n  const [paymentDate, setPaymentDate] = useState<string>(format(new Date(), 'yyyy-MM-dd'));\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      return format(new Date(dateStr), 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  /**\n   * Format currency for display\n   */\n  const formatCurrency = (amount: number | undefined) => {\n    if (amount === undefined) return 'N/A';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  \n  /**\n   * Get delivery condition badge variant\n   */\n  const getConditionVariant = (condition?: string) => {\n    switch (condition) {\n      case 'good':\n        return 'success';\n      case 'damaged':\n        return 'danger';\n      case 'partial':\n        return 'warning';\n      default:\n        return 'secondary';\n    }\n  };\n  \n  /**\n   * Get delivery condition text\n   */\n  const getConditionText = (condition?: string) => {\n    switch (condition) {\n      case 'good':\n        return 'Good - No issues';\n      case 'damaged':\n        return 'Damaged - Items arrived damaged';\n      case 'partial':\n        return 'Partial - Some items missing';\n      default:\n        return 'Unknown condition';\n    }\n  };\n  \n  /**\n   * Calculate if the invoice is currently overdue\n   */\n  const isInvoiceOverdue = () => {\n    if (!po.invoice?.dueDate) return false;\n    \n    const dueDate = new Date(po.invoice.dueDate);\n    const today = new Date();\n    \n    return today > dueDate && po.invoice.status !== 'paid';\n  };\n  \n  /**\n   * Handle payment form submit\n   */\n  const handlePaymentSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setIsSubmitting(true);\n      setError(null);\n      \n      // Prepare update data\n      const updateData: Partial<PurchaseOrder> = {\n        invoice: {\n          ...po.invoice!,\n          status: 'paid',\n          paidDate: paymentDate\n        }\n      };\n      \n      // Update PO with payment information\n      await onUpdate(updateData);\n      \n      setSuccess('Payment recorded successfully');\n      setIsSubmitting(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record payment');\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <div className=\"delivered-status-panel\">\n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\" onClose={() => setError(null)} dismissible>\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {error}\n        </Alert>\n      )}\n      \n      {/* Success alert */}\n      {success && (\n        <Alert variant=\"success\" className=\"mb-4\" onClose={() => setSuccess(null)} dismissible>\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          {success}\n        </Alert>\n      )}\n      \n      {/* Delivery Information */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-delivered-light d-flex align-items-center\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-truck-flatbed me-2\"></i>\n            Delivery Information\n          </h5>\n          {po.delivery && (\n            <Badge bg=\"success\" className=\"ms-auto\">\n              Delivered on: {formatDate(po.delivery.deliveryDate)}\n            </Badge>\n          )}\n        </Card.Header>\n        \n        <Card.Body>\n          {po.delivery ? (\n            <Row>\n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Delivery Date</dt>\n                  <dd className=\"col-sm-8\">{formatDate(po.delivery.deliveryDate)}</dd>\n                  \n                  <dt className=\"col-sm-4\">Received By</dt>\n                  <dd className=\"col-sm-8\">{po.delivery.receivedBy}</dd>\n                </dl>\n              </Col>\n              \n              <Col md={6}>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Condition</dt>\n                  <dd className=\"col-sm-8\">\n                    <Badge bg={getConditionVariant(po.delivery.condition)}>\n                      {getConditionText(po.delivery.condition)}\n                    </Badge>\n                  </dd>\n                </dl>\n              </Col>\n              \n              {po.delivery.notes && (\n                <Col xs={12} className=\"mt-3\">\n                  <h6>Delivery Notes</h6>\n                  <div className=\"border p-3 rounded bg-light\">\n                    {po.delivery.notes}\n                  </div>\n                </Col>\n              )}\n            </Row>\n          ) : (\n            <Alert variant=\"warning\">\n              <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n              No delivery information available.\n            </Alert>\n          )}\n          \n          {/* Delivery Documents */}\n          {po.documents && po.documents.length > 0 && (\n            <div className=\"mt-4\">\n              <h6>Delivery Documents</h6>\n              <ListGroup>\n                {po.documents.filter(doc => doc.type === 'delivery').map(doc => (\n                  <ListGroup.Item key={doc.id} className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                      <i className=\"bi bi-file-earmark me-2\"></i>\n                      {doc.name}\n                    </div>\n                    <Button \n                      variant=\"outline-primary\" \n                      size=\"sm\"\n                      as=\"a\"\n                      href={doc.url}\n                      target=\"_blank\"\n                    >\n                      <i className=\"bi bi-eye me-1\"></i>\n                      View\n                    </Button>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </div>\n          )}\n        </Card.Body>\n      </Card>\n      \n      {/* Invoice & Payment Information */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-invoiced-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-credit-card me-2\"></i>\n            Invoice & Payment\n          </h5>\n        </Card.Header>\n        \n        <Card.Body>\n          {po.invoice ? (\n            <>\n              <Row className=\"mb-4\">\n                <Col md={6}>\n                  <dl className=\"row\">\n                    <dt className=\"col-sm-4\">Invoice #</dt>\n                    <dd className=\"col-sm-8\">{po.invoice.invoiceNumber}</dd>\n                    \n                    <dt className=\"col-sm-4\">Issue Date</dt>\n                    <dd className=\"col-sm-8\">{formatDate(po.invoice.invoiceDate)}</dd>\n                  </dl>\n                </Col>\n                \n                <Col md={6}>\n                  <dl className=\"row\">\n                    <dt className=\"col-sm-4\">Amount</dt>\n                    <dd className=\"col-sm-8\">{formatCurrency(po.invoice.amount)}</dd>\n                    \n                    <dt className=\"col-sm-4\">Due Date</dt>\n                    <dd className=\"col-sm-8\">\n                      {formatDate(po.invoice.dueDate)}\n                      {isInvoiceOverdue() && (\n                        <Badge bg=\"danger\" pill className=\"ms-2\">Overdue</Badge>\n                      )}\n                    </dd>\n                    \n                    <dt className=\"col-sm-4\">Status</dt>\n                    <dd className=\"col-sm-8\">\n                      <Badge \n                        bg={po.invoice.status === 'paid' ? 'success' : \n                           (po.invoice.status === 'overdue' ? 'danger' : 'warning')}\n                      >\n                        {po.invoice.status === 'paid' ? 'Paid' : \n                         (po.invoice.status === 'overdue' ? 'Overdue' : 'Pending')}\n                      </Badge>\n                      {po.invoice.paidDate && (\n                        <span className=\"ms-2 text-muted\">\n                          (Paid on: {formatDate(po.invoice.paidDate)})\n                        </span>\n                      )}\n                    </dd>\n                  </dl>\n                </Col>\n              </Row>\n              \n              {/* Payment form - Only show if not yet paid */}\n              {po.invoice.status !== 'paid' && (\n                <Form onSubmit={handlePaymentSubmit}>\n                  <Card className=\"mb-0 mt-3\">\n                    <Card.Header>\n                      <h6 className=\"mb-0\">Record Payment</h6>\n                    </Card.Header>\n                    \n                    <Card.Body>\n                      <Row>\n                        <Col md={6}>\n                          <Form.Group className=\"mb-3\" controlId=\"paymentDate\">\n                            <Form.Label>Payment Date</Form.Label>\n                            <Form.Control\n                              type=\"date\"\n                              value={paymentDate}\n                              onChange={(e) => setPaymentDate(e.target.value)}\n                              required\n                            />\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                      \n                      <Form.Group className=\"mb-3\" controlId=\"paymentNotes\">\n                        <Form.Label>Payment Notes</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          value={paymentNotes}\n                          onChange={(e) => setPaymentNotes(e.target.value)}\n                          placeholder=\"Add any notes about the payment\"\n                        />\n                      </Form.Group>\n                    </Card.Body>\n                    \n                    <Card.Footer className=\"d-flex justify-content-end\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                      >\n                        {isSubmitting ? (\n                          <>\n                            <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                            Processing...\n                          </>\n                        ) : (\n                          <>\n                            <i className=\"bi bi-check-circle me-2\"></i>\n                            Record Payment\n                          </>\n                        )}\n                      </Button>\n                    </Card.Footer>\n                  </Card>\n                </Form>\n              )}\n            </>\n          ) : (\n            <Alert variant=\"warning\">\n              <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n              No invoice information available.\n            </Alert>\n          )}\n        </Card.Body>\n      </Card>\n      \n      {/* PO Summary */}\n      <Card>\n        <Card.Header className=\"bg-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-check2-all me-2\"></i>\n            Order Summary\n          </h5>\n        </Card.Header>\n        \n        <Card.Body>\n          <Row>\n            <Col md={6}>\n              <h6>Order Information</h6>\n              <dl className=\"row\">\n                <dt className=\"col-sm-4\">PO Number</dt>\n                <dd className=\"col-sm-8\">{po.header.poNumber}</dd>\n                \n                <dt className=\"col-sm-4\">Order Date</dt>\n                <dd className=\"col-sm-8\">{formatDate(po.header.orderDate)}</dd>\n                \n                <dt className=\"col-sm-4\">Total Amount</dt>\n                <dd className=\"col-sm-8\">{formatCurrency(po.totalCost)}</dd>\n              </dl>\n            </Col>\n            \n            <Col md={6}>\n              <h6>Status History</h6>\n              {po.history && po.history.length > 0 ? (\n                <div style={{ maxHeight: '200px', overflowY: 'auto' }}>\n                  <ListGroup variant=\"flush\">\n                    {po.history.map((entry, index) => (\n                      <ListGroup.Item key={index} className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <Badge bg=\"primary\" className=\"me-2\">{entry.status}</Badge>\n                          <span className=\"text-muted small\">\n                            {formatDate(entry.timestamp)}\n                          </span>\n                        </div>\n                        {entry.notes && (\n                          <div className=\"mt-1 small text-secondary\">\n                            {entry.notes}\n                          </div>\n                        )}\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                </div>\n              ) : (\n                <p className=\"text-muted\">No history available</p>\n              )}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default DeliveredStatusPanel;","import React, { useState } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { Card, Alert, Badge, Button, Row, Col, ListGroup } from 'react-bootstrap';\nimport { format } from 'date-fns';\n\n/**\n * Props for the CancelledStatusPanel component\n */\ninterface CancelledStatusPanelProps {\n  po: PurchaseOrder;\n  statusDefinition: StatusDefinition;\n  requirements: Record<string, StatusRequirement>;\n  validationResult: ValidationResult | null;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n}\n\n/**\n * CancelledStatusPanel Component\n * \n * This panel is displayed when a PO is in the CANCELLED status.\n * It shows cancellation details and reason, and offers options to\n * reactivate the order if applicable.\n */\nconst CancelledStatusPanel: React.FC<CancelledStatusPanelProps> = ({\n  po,\n  // statusDefinition might be used in future updates, commented out for now\n  // Removed other unused props from destructuring\n  onStatusChange\n}) => {\n  // State for reactivation\n  const [isReactivating, setIsReactivating] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      return format(new Date(dateStr), 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  /**\n   * Format currency for display\n   */\n  const formatCurrency = (amount: number | undefined) => {\n    if (amount === undefined) return 'N/A';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  \n  /**\n   * Get the cancellation details from the PO history\n   */\n  const getCancellationDetails = () => {\n    if (!po.history) return null;\n    \n    const cancellationEvent = po.history.find(\n      entry => entry.status === POStatus.CANCELLED\n    );\n    \n    if (!cancellationEvent) return null;\n    \n    return {\n      date: cancellationEvent.timestamp,\n      user: cancellationEvent.user,\n      notes: cancellationEvent.notes\n    };\n  };\n  \n  /**\n   * Determine if the PO can be reactivated based on its state\n   */\n  const canReactivate = () => {\n    // Check if the PO can be reactivated based on business rules\n    // This could depend on how long it's been cancelled, whether it's been replaced, etc.\n    \n    // For this example, we'll consider any PO cancelled less than 30 days ago as reactivatable\n    const cancellationDetails = getCancellationDetails();\n    if (!cancellationDetails) return false;\n    \n    const cancellationDate = new Date(cancellationDetails.date);\n    const today = new Date();\n    const daysSinceCancellation = Math.floor((today.getTime() - cancellationDate.getTime()) / (1000 * 60 * 60 * 24));\n    \n    return daysSinceCancellation < 30;\n  };\n  \n  /**\n   * Handle PO reactivation\n   */\n  const handleReactivate = async () => {\n    // In a real app, you might want to prompt for confirmation and reason\n    try {\n      setIsReactivating(true);\n      setError(null);\n      \n      // Determine which status to reactivate to\n      // This would typically be based on where the PO was in the workflow when it was cancelled\n      // For this example, we'll reactivate to UPLOADED status\n      const reactivationStatus = POStatus.UPLOADED;\n      \n      // Update status\n      await onStatusChange(reactivationStatus, 'Order reactivated from cancelled state');\n      \n      setSuccess('Purchase Order reactivated successfully');\n      setIsReactivating(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to reactivate purchase order');\n      setIsReactivating(false);\n    }\n  };\n  \n  // Get cancellation details\n  const cancellationDetails = getCancellationDetails();\n  \n  return (\n    <div className=\"cancelled-status-panel\">\n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\" onClose={() => setError(null)} dismissible>\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n          {error}\n        </Alert>\n      )}\n      \n      {/* Success alert */}\n      {success && (\n        <Alert variant=\"success\" className=\"mb-4\" onClose={() => setSuccess(null)} dismissible>\n          <i className=\"bi bi-check-circle-fill me-2\"></i>\n          {success}\n        </Alert>\n      )}\n      \n      {/* Cancellation Banner */}\n      <Alert variant=\"danger\" className=\"d-flex align-items-center mb-4\">\n        <div className=\"display-6 me-3\">\n          <i className=\"bi bi-x-circle\"></i>\n        </div>\n        <div>\n          <h4 className=\"alert-heading mb-1\">This Purchase Order has been cancelled</h4>\n          <p className=\"mb-0\">\n            {cancellationDetails ? (\n              <>Cancelled on {formatDate(cancellationDetails.date)}</>\n            ) : (\n              <>Cancellation date not available</>\n            )}\n            {cancellationDetails?.user && (\n              <> by {cancellationDetails.user}</>\n            )}\n          </p>\n        </div>\n      </Alert>\n      \n      {/* Cancellation Details */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-status-cancelled-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-info-circle me-2\"></i>\n            Cancellation Details\n          </h5>\n        </Card.Header>\n        \n        <Card.Body>\n          {cancellationDetails?.notes ? (\n            <div>\n              <h6>Cancellation Reason</h6>\n              <div className=\"border p-3 rounded bg-light mb-4\">\n                {cancellationDetails.notes}\n              </div>\n            </div>\n          ) : (\n            <Alert variant=\"info\" className=\"mb-4\">\n              No cancellation reason provided.\n            </Alert>\n          )}\n          \n          {canReactivate() && (\n            <div className=\"mt-3\">\n              <h6>Reactivation Options</h6>\n              <p className=\"text-muted\">\n                This order was cancelled recently and can be reactivated if needed.\n              </p>\n              <Button\n                variant=\"outline-primary\"\n                onClick={handleReactivate}\n                disabled={isReactivating}\n              >\n                {isReactivating ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-arrow-counterclockwise me-2\"></i>\n                    Reactivate Order\n                  </>\n                )}\n              </Button>\n            </div>\n          )}\n        </Card.Body>\n      </Card>\n      \n      {/* Order Summary */}\n      <Card className=\"mb-4\">\n        <Card.Header className=\"bg-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-clipboard me-2\"></i>\n            Cancelled Order Summary\n          </h5>\n        </Card.Header>\n        \n        <Card.Body>\n          <Row>\n            <Col md={6}>\n              <h6>Order Information</h6>\n              <dl className=\"row\">\n                <dt className=\"col-sm-4\">PO Number</dt>\n                <dd className=\"col-sm-8\">{po.header.poNumber}</dd>\n                \n                <dt className=\"col-sm-4\">Order Date</dt>\n                <dd className=\"col-sm-8\">{formatDate(po.header.orderDate)}</dd>\n                \n                <dt className=\"col-sm-4\">Total Amount</dt>\n                <dd className=\"col-sm-8\">{formatCurrency(po.totalCost)}</dd>\n                \n                <dt className=\"col-sm-4\">Products</dt>\n                <dd className=\"col-sm-8\">{po.products.length} items</dd>\n              </dl>\n            </Col>\n            \n            <Col md={6}>\n              <h6>Buyer/Supplier Information</h6>\n              <dl className=\"row\">\n                <dt className=\"col-sm-4\">Buyer</dt>\n                <dd className=\"col-sm-8\">\n                  {po.header.buyerInfo.firstName} {po.header.buyerInfo.lastName}\n                  <div className=\"small text-muted\">{po.header.buyerInfo.email}</div>\n                </dd>\n                \n                <dt className=\"col-sm-4\">Location</dt>\n                <dd className=\"col-sm-8\">\n                  {po.header.syscoLocation.name}\n                  {po.header.syscoLocation.address && (\n                    <div className=\"small text-muted\">{po.header.syscoLocation.address}</div>\n                  )}\n                </dd>\n              </dl>\n            </Col>\n          </Row>\n          \n          {/* Order Timeline */}\n          <div className=\"mt-4\">\n            <h6>Order Timeline</h6>\n            {po.history && po.history.length > 0 ? (\n              <div style={{ maxHeight: '250px', overflowY: 'auto' }}>\n                <ListGroup variant=\"flush\">\n                  {[...po.history].reverse().map((entry, index) => (\n                    <ListGroup.Item key={index} className=\"py-2\">\n                      <div className=\"d-flex align-items-center\">\n                        <Badge \n                          bg={entry.status === POStatus.CANCELLED ? 'danger' : 'primary'} \n                          className=\"me-2\"\n                        >\n                          {entry.status}\n                        </Badge>\n                        <span className=\"text-muted small\">\n                          {formatDate(entry.timestamp)}\n                          {entry.user && <> by {entry.user}</>}\n                        </span>\n                      </div>\n                      {entry.notes && (\n                        <div className=\"mt-1 small text-secondary\">\n                          {entry.notes}\n                        </div>\n                      )}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </div>\n            ) : (\n              <p className=\"text-muted\">No history available</p>\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n      \n      {/* Actions */}\n      <Card>\n        <Card.Header className=\"bg-light\">\n          <h5 className=\"mb-0\">\n            <i className=\"bi bi-tools me-2\"></i>\n            Available Actions\n          </h5>\n        </Card.Header>\n        \n        <Card.Body>\n          <Row className=\"g-3\">\n            <Col sm={6}>\n              <Card className=\"h-100\">\n                <Card.Body>\n                  <h6 className=\"card-title\">\n                    <i className=\"bi bi-files me-2\"></i>\n                    Create New Order\n                  </h6>\n                  <p className=\"text-muted small\">Create a new purchase order based on this one</p>\n                  <Button variant=\"outline-primary\" size=\"sm\">\n                    <i className=\"bi bi-plus-circle me-2\"></i>\n                    Create New Order\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n            \n            <Col sm={6}>\n              <Card className=\"h-100\">\n                <Card.Body>\n                  <h6 className=\"card-title\">\n                    <i className=\"bi bi-printer me-2\"></i>\n                    Export Cancelled PO\n                  </h6>\n                  <p className=\"text-muted small\">Export this cancelled purchase order to PDF</p>\n                  <Button variant=\"outline-secondary\" size=\"sm\">\n                    <i className=\"bi bi-download me-2\"></i>\n                    Export to PDF\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default CancelledStatusPanel;","import React, { useState, useEffect } from 'react';\nimport { \n  PurchaseOrder, \n  POStatus, \n  StatusDefinition, \n  StatusRequirement, \n  ValidationResult \n} from '@/types/purchaseOrder';\nimport { ApiService } from '@/services/ApiService';\nimport { ValidationService } from '@/services/ValidationService';\nimport { RequirementsChecklist } from '@/components/validations/RequirementsChecklist';\n\n// Import status-specific panels\nimport UploadedStatusPanel from './status-panels/UploadedStatusPanel';\nimport ConfirmedStatusPanel from './status-panels/ConfirmedStatusPanel';\nimport ShippedStatusPanel from './status-panels/ShippedStatusPanel';\nimport InvoicedStatusPanel from './status-panels/InvoicedStatusPanel';\nimport DeliveredStatusPanel from './status-panels/DeliveredStatusPanel';\nimport CancelledStatusPanel from './status-panels/CancelledStatusPanel';\n\n/**\n * Props for StatusActionPanel component\n */\ninterface StatusActionPanelProps {\n  po: PurchaseOrder;\n  onUpdate: (updateData: Partial<PurchaseOrder>) => Promise<void>;\n  onStatusChange: (newStatus: POStatus, notes?: string) => Promise<void>;\n  className?: string;\n}\n\n/**\n * StatusActionPanel Component\n * \n * A dynamic panel that renders different action interfaces based on the current\n * status of a purchase order. This component adapts to show only the relevant\n * actions and fields for each status, streamlining the user experience.\n * \n * It fetches status requirements from the API and provides validation feedback\n * for status transitions, ensuring data integrity throughout the PO lifecycle.\n */\nexport const StatusActionPanel: React.FC<StatusActionPanelProps> = ({\n  po,\n  onUpdate,\n  onStatusChange,\n  className = ''\n}) => {\n  // State to hold the status definition and requirements\n  const [statusDefinition, setStatusDefinition] = useState<StatusDefinition | null>(null);\n  const [requirements, setRequirements] = useState<Record<string, StatusRequirement> | null>(null);\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null);\n  \n  // Loading and error states\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Fetch status requirements on mount and when status changes\n  useEffect(() => {\n    const fetchStatusRequirements = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const statusData = await ApiService.getStatus(po.header.status);\n        setStatusDefinition(statusData);\n        setRequirements(statusData.requirements);\n        \n        // Validate PO data against requirements\n        const validation = ValidationService.validateForStatus(\n          po,\n          po.header.status,\n          statusData.requirements\n        );\n        setValidationResult(validation);\n        \n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load status requirements');\n        setLoading(false);\n      }\n    };\n    \n    fetchStatusRequirements();\n  }, [po, po.header.status]);\n  \n  /**\n   * Handle status change with validation\n   */\n  const handleStatusChange = async (newStatus: POStatus, notes: string = '') => {\n    try {\n      // Validate the transition first\n      const validationResult = await ValidationService.validateTransition(\n        po.header.status,\n        newStatus,\n        po\n      );\n      \n      if (!validationResult.isValid) {\n        // Show validation errors\n        setValidationResult(validationResult);\n        return;\n      }\n      \n      // If valid, perform the status change\n      await onStatusChange(newStatus, notes);\n    } catch (error) {\n      console.error('Error changing status:', error);\n      setError(error instanceof Error ? error.message : 'Failed to change status');\n    }\n  };\n  \n  /**\n   * Determine the background color based on status\n   */\n  const getStatusColor = (status: POStatus): string => {\n    const colorMap: Record<string, string> = {\n      [POStatus.UPLOADED]: 'bg-status-uploaded',\n      [POStatus.CONFIRMED]: 'bg-status-confirmed',\n      [POStatus.SHIPPED]: 'bg-status-shipped',\n      [POStatus.INVOICED]: 'bg-status-invoiced',\n      [POStatus.DELIVERED]: 'bg-status-delivered',\n      [POStatus.CANCELLED]: 'bg-status-cancelled'\n    };\n    return colorMap[status] || 'bg-light';\n  };\n  \n  /**\n   * Render loading state\n   */\n  const renderLoading = () => (\n    <div className=\"status-action-panel__loading p-4 text-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading status actions...</span>\n      </div>\n      <p className=\"mt-3\">Loading action panel...</p>\n    </div>\n  );\n  \n  /**\n   * Render error state\n   */\n  const renderError = () => (\n    <div className=\"status-action-panel__error p-4\">\n      <div className=\"alert alert-danger mb-0\">\n        <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n        {error}\n      </div>\n    </div>\n  );\n  \n  /**\n   * Render the appropriate panel based on current status\n   */\n  const renderStatusPanel = () => {\n    if (!statusDefinition || !requirements) return null;\n    \n    const panelProps = {\n      po,\n      statusDefinition,\n      requirements,\n      validationResult,\n      onUpdate,\n      onStatusChange: handleStatusChange\n    };\n    \n    switch (po.header.status) {\n      case POStatus.UPLOADED:\n        return <UploadedStatusPanel {...panelProps} />;\n      case POStatus.CONFIRMED:\n        return <ConfirmedStatusPanel {...panelProps} />;\n      case POStatus.SHIPPED:\n        return <ShippedStatusPanel {...panelProps} />;\n      case POStatus.INVOICED:\n        return <InvoicedStatusPanel {...panelProps} />;\n      case POStatus.DELIVERED:\n        return <DeliveredStatusPanel {...panelProps} />;\n      case POStatus.CANCELLED:\n        return <CancelledStatusPanel {...panelProps} />;\n      default:\n        return (\n          <div className=\"alert alert-warning\">\n            Unknown status: {po.header.status}\n          </div>\n        );\n    }\n  };\n  \n  return (\n    <div className={`status-action-panel ${className}`}>\n      {/* Panel header */}\n      <div className={`status-action-panel__header p-3 ${getStatusColor(po.header.status)}`}>\n        <h3 className=\"m-0 text-white\">\n          <i className=\"bi bi-clipboard-check me-2\"></i>\n          Actions for {statusDefinition?.label || po.header.status}\n        </h3>\n      </div>\n      \n      {/* Panel content */}\n      <div className=\"status-action-panel__body p-3\">\n        {loading && renderLoading()}\n        {error && renderError()}\n        {!loading && !error && (\n          <>\n            {/* Requirements checklist */}\n            {requirements && (\n              <RequirementsChecklist\n                poData={po}\n                status={po.header.status}\n                requirements={requirements}\n                validationResult={validationResult || undefined}\n                className=\"mb-4\"\n              />\n            )}\n            \n            {/* Status-specific panel */}\n            {renderStatusPanel()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StatusActionPanel;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useD3 } from '@/hooks/useD3';\nimport * as d3 from 'd3';\nimport { POStatus, StatusDefinition, POHistoryEntry } from '@/types/purchaseOrder';\nimport { ApiService } from '@/services/ApiService';\n\n// Define the shape of the node data for D3\ninterface WorkflowNode {\n  id: string;\n  label: string;\n  description: string;\n  color: string;\n  isCurrent: boolean;\n}\n\n// Define the shape of the link data for D3\ninterface WorkflowLink {\n  source: string;\n  target: string;\n  isAvailable: boolean;\n}\n\n// Interface for transformed workflow data\ninterface WorkflowData {\n  nodes: WorkflowNode[];\n  links: WorkflowLink[];\n}\n\n// Props for the WorkflowVisualizer component\ninterface WorkflowVisualizerProps {\n  currentStatus: POStatus;\n  statusHistory?: POHistoryEntry[];\n  availableTransitions: POStatus[];\n  onStatusChange: (status: POStatus) => void;\n  className?: string;\n}\n\n/**\n * WorkflowVisualizer Component\n * \n * Visualizes the PO workflow as an interactive node-based graph,\n * showing the current status, available transitions, and workflow history.\n * \n * The graph is rendered using D3.js with force-directed layout for\n * optimal node positioning.\n */\nexport const WorkflowVisualizer: React.FC<WorkflowVisualizerProps> = ({\n  currentStatus,\n  statusHistory = [],\n  availableTransitions = [],\n  onStatusChange,\n  className = ''\n}) => {\n  // State to hold the workflow data fetched from the API\n  const [workflowData, setWorkflowData] = useState<WorkflowData | null>(null);\n  // Loading state\n  const [loading, setLoading] = useState<boolean>(true);\n  // Error state\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to map status colors to CSS colors\n  const getStatusColor = (colorEnum: string): string => {\n    const colorMap: Record<string, string> = {\n      'UPLOADED': '#FF9800', // Orange\n      'CONFIRMED': '#2196F3', // Blue\n      'SHIPPED': '#673AB7',  // Purple\n      'INVOICED': '#3F51B5', // Indigo\n      'DELIVERED': '#4CAF50', // Green\n      'CANCELLED': '#F44336'  // Red\n    };\n    return colorMap[colorEnum] || '#9E9E9E'; // Default to gray\n  };\n\n  // Function to transform API workflow data to D3 format\n  const transformWorkflowData = useCallback((\n    statuses: Record<string, StatusDefinition>,\n    currentStatus: POStatus\n  ): WorkflowData => {\n    // Transform nodes\n    const nodes: WorkflowNode[] = Object.entries(statuses).map(([key, status]) => ({\n      id: key,\n      label: status.label,\n      description: status.description,\n      color: getStatusColor(status.color),\n      isCurrent: key === currentStatus,\n    }));\n\n    // Transform links\n    const links: WorkflowLink[] = [];\n    Object.entries(statuses).forEach(([key, status]) => {\n      status.allowedTransitions.forEach(targetId => {\n        links.push({\n          source: key,\n          target: targetId,\n          isAvailable: key === currentStatus && availableTransitions.includes(targetId as POStatus)\n        });\n      });\n    });\n\n    return { nodes, links };\n  }, []);\n\n  // Fetch workflow data from API\n  useEffect(() => {\n    const fetchWorkflow = async () => {\n      try { \n        setLoading(true);\n        const statuses = await ApiService.getStatuses();\n        const transformedData = transformWorkflowData(statuses, currentStatus);\n        setWorkflowData(transformedData);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load workflow data');\n        setLoading(false);\n      }\n    };\n\n    fetchWorkflow();\n  }, [currentStatus, statusHistory, transformWorkflowData]);\n  \n  // Clear error state when currentStatus or availableTransitions change\n  useEffect(() => {\n    setError(null);\n  }, [currentStatus, availableTransitions]);\n\n  // D3 rendering function\n  const renderD3 = useCallback((\n    svg: d3.Selection<SVGSVGElement, unknown, null, undefined>\n  ) => {\n    if (!workflowData) return;\n\n    // Get the dimensions from the SVG element\n    const svgElement = svg.node();\n    if (!svgElement) return;\n\n    const width = svgElement.clientWidth || 800;\n    const height = svgElement.clientHeight || 200;\n    \n    // Clear existing elements\n    svg.selectAll('*').remove();\n    \n    // Create a force simulation for the graph layout\n    const simulation = d3.forceSimulation(workflowData.nodes as any)\n      .force('link', d3.forceLink(workflowData.links).id((d: any) => d.id))\n      .force('charge', d3.forceManyBody().strength(-300))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('collision', d3.forceCollide().radius(50)); // Prevent node overlap\n\n    // Create a group for links\n    const link = svg.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(workflowData.links)\n      .enter()\n      .append('line')\n      .attr('class', 'link')\n      .attr('stroke', d => d.isAvailable ? '#4CAF50' : '#9E9E9E')\n      .attr('stroke-width', 2)\n      .attr('stroke-dasharray', d => d.isAvailable ? '0' : '5,5');\n    \n    // Create a group for nodes\n    const node = svg.append('g')\n      .attr('class', 'nodes')\n      .selectAll('.node')\n      .data(workflowData.nodes)\n      .enter()\n      .append('g')\n      .attr('class', d => `node ${d.isCurrent ? 'current' : ''} ${availableTransitions.includes(d.id as POStatus) ? 'available' : ''}`)\n      .style('cursor', d => availableTransitions.includes(d.id as POStatus) ? 'pointer' : 'default')\n      .on('click', (_, d) => {\n        if (availableTransitions.includes(d.id as POStatus)) {\n          onStatusChange(d.id as POStatus);\n        }\n      });\n\n    // Add circles to nodes\n    node.append('circle')\n      .attr('r', 30)\n      .attr('fill', d => d.color)\n      .attr('stroke', d => d.id === currentStatus ? '#1565C0' : 'none')\n      .attr('stroke-width', 3);\n    \n    // Add text labels to nodes\n    node.append('text')\n      .attr('dy', '0.35em')\n      .attr('text-anchor', 'middle')\n      .attr('fill', 'white')\n      .attr('font-size', '12px')\n      .text(d => d.label);\n    \n    // Add tooltips\n    node.append('title')\n      .text(d => `${d.label}: ${d.description}`);\n\n    // Handle hover effects\n    node.on('mouseover', function() {\n      d3.select(this).select('circle')\n        .transition()\n        .duration(200)\n        .attr('r', 33);\n    }).on('mouseout', function() {\n      d3.select(this).select('circle')\n        .transition()\n        .duration(200)\n        .attr('r', 30);\n    });\n    \n    // Update force simulation on each tick\n    simulation.on('tick', () => {\n      // Constrain nodes within the SVG bounds\n      workflowData.nodes.forEach(d => {\n        const r = 30; // Node radius\n        (d as any).x = Math.max(r, Math.min(width - r, (d as any).x));\n        (d as any).y = Math.max(r, Math.min(height - r, (d as any).y));\n      });\n      \n      // Update link positions\n      link\n        .attr('x1', (d: any) => d.source.x)\n        .attr('y1', (d: any) => d.source.y)\n        .attr('x2', (d: any) => d.target.x)\n        .attr('y2', (d: any) => d.target.y);\n      \n      // Update node positions\n      node.attr('transform', (d: any) => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Add arrowheads to links\n    svg.append('defs').selectAll('marker')\n      .data(['available', 'unavailable'])\n      .enter().append('marker')\n      .attr('id', d => `arrowhead-${d}`)\n      .attr('viewBox', '0 -5 10 10')\n      .attr('refX', 30) // Position the arrowhead at the end of the line\n      .attr('refY', 0)\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M0,-5L10,0L0,5')\n      .attr('fill', d => d === 'available' ? '#4CAF50' : '#9E9E9E');\n    \n    // Add arrowheads to links\n    link.attr('marker-end', d => `url(#arrowhead-${d.isAvailable ? 'available' : 'unavailable'})`);\n    \n    // Add hover effect for links\n    link.on('mouseover', function() {\n      d3.select(this).transition().duration(200).attr('stroke-width', 3);\n    }).on('mouseout', function() {\n      d3.select(this).transition().duration(200).attr('stroke-width', 2);\n    });\n    \n  }, [workflowData, currentStatus, availableTransitions, onStatusChange]);\n\n  // Use the custom D3 hook to render the visualization\n  const svgRef = useD3(renderD3, [workflowData, currentStatus, availableTransitions]);\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className={`workflow-visualizer ${className}`}>\n        <div className=\"workflow-visualizer__loading\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading workflow...</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className={`workflow-visualizer ${className}`}>\n        <div className=\"workflow-visualizer__error alert alert-danger\">\n          <i className=\"bi bi-exclamation-triangle me-2\"></i>\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`workflow-visualizer ${className}`}>\n      <h3 className=\"workflow-visualizer__title\">Purchase Order Workflow</h3>\n      <div className=\"workflow-visualizer__container\">\n        <svg\n          ref={svgRef}\n          className=\"workflow-visualizer__svg\"\n          width=\"100%\"\n          height=\"220\"\n          viewBox=\"0 0 800 200\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n      <div className=\"workflow-visualizer__legend\">\n        <span className=\"legend-item current\">Current Status</span>\n        <span className=\"legend-item available\">Available Transitions</span>\n        <span className=\"legend-item unavailable\">Other Statuses</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowVisualizer;","import { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n/**\n * Custom hook for integrating D3.js with React\n * \n * This hook provides a clean way to use D3's imperative DOM manipulation\n * within React's declarative component lifecycle.\n *\n * @param renderFn - D3 rendering function that receives the root SVG selection\n * @param dependencies - Array of dependencies that should trigger a re-render\n * @returns A ref object to attach to the SVG element\n * \n * @example\n * ```tsx\n * const svgRef = useD3((svg) => {\n *   // D3 rendering code here\n *   svg.selectAll('rect')\n *     .data(data)\n *     .join('rect')\n *     .attr('width', 40)\n *     .attr('height', d => d);\n * }, [data]);\n * \n * return <svg ref={svgRef}></svg>;\n * ```\n */\nexport const useD3 = (\n  renderFn: (selection: d3.Selection<SVGSVGElement, unknown, null, undefined>) => void,\n  dependencies: any[] = []\n) => {\n  const ref = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const svg = d3.select(ref.current);\n      renderFn(svg);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderFn, ...dependencies]);\n\n  return ref;\n};","/**\n * Navigation Utility\n * \n * Provides a consistent way to handle navigation in the application.\n * Instead of directly manipulating window.location, this utility uses\n * React Router methods when possible, falling back to direct manipulation\n * only when necessary.\n */\n\nimport { NavigateFunction, NavigateOptions, To } from 'react-router-dom';\nimport Logger from './logger';\n\n// Store the navigate function from useNavigate hook\nlet navigateFunction: ((to: To, options?: NavigateOptions) => void) | null = null;\n\n/**\n * Initialize the navigation utility with the navigate function from React Router\n * This should be called in the main App component or a high-level context provider\n */\nexport const initializeNavigation = (navigate: NavigateFunction): void => {\n  navigateFunction = navigate;\n  Logger.debug('[DEBUG] Navigation utility initialized with React Router navigate function');\n};\n\n/**\n * Navigate to a route using React Router\n * @param path The path to navigate to\n * @param options Navigation options\n */\nexport const navigate = (path: To, options?: NavigateOptions): void => {\n  try {\n    Logger.debug(`[NAVIGATION] Attempting to navigate to: ${path}`, options);\n    \n    // Check if we have a valid navigate function\n    if (!navigateFunction) {\n      Logger.warn('[NAVIGATION] React Router navigate function not available, falling back to window.location');\n      \n      // Fall back to window.location if React Router is not available\n      if (options?.replace) {\n        window.location.replace(path.toString());\n      } else {\n        window.location.href = path.toString();\n      }\n      return;\n    }\n    \n    // React Router navigation\n    try {\n      navigateFunction(path, options);\n      Logger.debug(`[NAVIGATION] Successfully navigated to: ${path}`);\n    } catch (routerError) {\n      Logger.error(`[NAVIGATION] React Router navigation failed:`, routerError);\n      throw routerError; // Re-throw to allow caller to handle\n    }\n  }\n  catch (error) {\n    Logger.error(`[NAVIGATION] Critical error during navigation:`, error);\n    // Try fallback navigation as last resort\n    try {\n      const pathStr = typeof path === 'string' ? path : JSON.stringify(path);\n      Logger.warn(`[NAVIGATION] Attempting fallback navigation to ${pathStr}`);\n      window.location.href = path.toString();\n    } catch (fallbackError) {\n      Logger.error(`[NAVIGATION] Fallback navigation failed:`, fallbackError);\n    }\n  }\n};\n\n/**\n * Navigate to a purchase order detail page\n * @param poNumber The purchase order number\n */\nexport const navigateToPODetail = (poNumber: string | number): void => {\n  navigate(`/purchase-orders/${poNumber}`);\n};\n\n/**\n * Navigate to the purchase order creation page\n */\nexport const navigateToPOCreation = (options?: NavigateOptions): void => {\n  navigate('/purchase-orders/create', options);\n};\n\n/**\n * Navigate to the purchase order list page\n */\nexport const navigateToPOList = (options?: NavigateOptions): void => {\n  navigate('/purchase-orders', options);\n};\n\n/**\n * Navigate to the dashboard page\n */\nexport const navigateToDashboard = (options?: NavigateOptions): void => {\n  navigate('/', options);\n};\n\n/**\n * Navigate to the metrics dashboard page\n */\nexport const navigateToMetrics = (options?: NavigateOptions): void => {\n  navigate('/metrics', options);\n};\n\n/**\n * Navigate to the planning hub page\n */\nexport const navigateToPlanningHub = (options?: NavigateOptions): void => {\n  navigate('/planning-hub', options);\n};\n\n/**\n * Navigate to an external URL\n * This always uses window.location to ensure correct behavior\n * @param url The external URL to navigate to\n * @param newTab Whether to open in a new tab\n */\nexport const navigateToExternal = (url: string, newTab = false): void => {\n  if (newTab) {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  } else {\n    window.location.href = url;\n  }\n};\n\n// Default export as an object with all navigation methods\nconst Navigation = {\n  initialize: initializeNavigation,\n  navigate,\n  toPODetail: navigateToPODetail,\n  toPOCreation: navigateToPOCreation,\n  toPOList: navigateToPOList,\n  toDashboard: navigateToDashboard,\n  toMetrics: navigateToMetrics,\n  toPlanningHub: navigateToPlanningHub,\n  toExternal: navigateToExternal\n};\n\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Row, Col, Card, Badge, Button, Tabs, Tab, Alert, Spinner } from 'react-bootstrap';\nimport { format } from 'date-fns';\n\n// Components\nimport StatusActionPanel from '@/components/action-panels/StatusActionPanel';\nimport WorkflowVisualizer from '@/components/status-workflow/WorkflowVisualizer';\nimport Navigation from '@/utils/navigation';\nimport Logger from '@/utils/logger';\n\n// Redux\nimport { RootState, AppDispatch } from '@/store';\nimport { fetchPODetail, updatePO, updatePOStatus } from '@/store/slices/poDetailSlice';\n\n// Types\nimport { POStatus, PurchaseOrder, POProduct, PODocument, POHistoryEntry } from '@/types/purchaseOrder';\n\n/**\n * PODetailPage Component\n * \n * This page displays detailed information about a specific purchase order\n * and provides status-specific actions through the status action panels.\n * It also visualizes the PO workflow and allows for status transitions.\n */\nconst PODetailPage: React.FC = () => {\n  // Get PO ID from URL parameters\n  const { poNumber } = useParams<{ poNumber: string }>();\n  console.log('PODetailPage mounted. PO Number from URL:', poNumber);\n  const dispatch = useDispatch<AppDispatch>();\n  \n  // Local state\n  const [activeTab, setActiveTab] = useState<string>('details');\n  \n  // Redux state\n  const { \n    purchaseOrder, \n    loading, \n    error, \n    availableTransitions \n  } = useSelector((state: RootState) => state.poDetail);\n  \n  // Fetch PO details on mount and when ID changes\n  useEffect(() => {\n    if (poNumber) {\n      console.log('Dispatching fetchPODetail action for PO Number:', poNumber);\n      dispatch(fetchPODetail(poNumber));\n    } else {\n      console.error('No PO Number found in URL params!');\n    }\n  }, [dispatch, poNumber]);\n  \n  /**\n   * Handle PO update\n   */\n  const handlePOUpdate = async (updateData: Partial<PurchaseOrder>) => {\n    if (!poNumber || !purchaseOrder) return;\n    \n    try {\n      await dispatch(updatePO({ poNumber, updateData })).unwrap();\n      // Refetch to get updated data\n      dispatch(fetchPODetail(poNumber));\n    } catch (error) {\n      Logger.error('Failed to update PO:', error);\n      // Error is handled by the slice and will be available in the error state\n    }\n  };\n  \n  /**\n   * Handle status change\n   */\n  const handleStatusChange = async (newStatus: POStatus, notes?: string) => {\n    if (!poNumber || !purchaseOrder) return;\n    \n    try {\n      await dispatch(updatePOStatus({\n        poNumber,\n        newStatus,\n        notes,\n        oldStatus: purchaseOrder.header.status\n      })).unwrap();\n      \n      // Refetch to get updated data\n      dispatch(fetchPODetail(poNumber));\n    } catch (error) {\n      Logger.error('Failed to update PO status:', error);\n      // Error is handled by the slice and will be available in the error state\n    }\n  };\n  \n  /**\n   * Format a date for display\n   */\n  const formatDate = (dateStr: string | undefined) => {\n    if (!dateStr) return 'N/A';\n    try {\n      return format(new Date(dateStr), 'MMM d, yyyy');\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  /**\n   * Format currency for display\n   */\n  const formatCurrency = (amount: number | undefined) => {\n    if (amount === undefined) return 'N/A';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  \n  /**\n   * Get status badge variant\n   */\n  const getStatusVariant = (status: POStatus) => {\n    switch (status) {\n      case POStatus.UPLOADED:\n        return 'warning';\n      case POStatus.CONFIRMED:\n        return 'info';\n      case POStatus.SHIPPED:\n        return 'primary';\n      case POStatus.INVOICED:\n        return 'secondary';\n      case POStatus.DELIVERED:\n        return 'success';\n      case POStatus.CANCELLED:\n        return 'danger';\n      default:\n        return 'light';\n    }\n  };\n  \n  // Loading state\n  if (loading && !purchaseOrder) {\n    return (\n      <Container className=\"py-5 text-center\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n        <p className=\"mt-3\">Loading purchase order details...</p>\n      </Container>\n    );\n  }\n  \n  // Error state\n  if (error && !purchaseOrder) {\n    return (\n      <Container className=\"py-5\">\n        <Alert variant=\"danger\">\n          <Alert.Heading>Error Loading Purchase Order</Alert.Heading>\n          <p>{error}</p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button \n              variant=\"outline-danger\"\n              onClick={() => Navigation.toPOList()}\n            >\n              Back to Purchase Orders\n            </Button>\n          </div>\n        </Alert>\n      </Container>\n    );\n  }\n  \n  // If no PO data yet\n  if (!purchaseOrder) {\n    return null;\n  }\n  \n  return (\n    <Container fluid className=\"py-4\">\n      {/* Page Header */}\n      <div className=\"page-header d-sm-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 className=\"h2 mb-1\">\n            Purchase Order: {purchaseOrder.header.poNumber}\n          </h1>\n          <div className=\"text-muted\">\n            {formatDate(purchaseOrder.header.orderDate)} · {purchaseOrder.products.length} items · {formatCurrency(purchaseOrder.totalCost)}\n          </div>\n        </div>\n        \n        <div className=\"mt-3 mt-sm-0 d-flex gap-2\">\n          <Badge \n            pill \n            bg={getStatusVariant(purchaseOrder.header.status)}\n            className=\"fs-6 d-flex align-items-center px-3 py-2\"\n          >\n            {purchaseOrder.header.status}\n          </Badge>\n          \n          <div className=\"dropdown\">\n            <Button \n              variant=\"outline-secondary\" \n              className=\"dropdown-toggle\"\n              data-bs-toggle=\"dropdown\"\n            >\n              <i className=\"bi bi-three-dots\"></i>\n            </Button>\n            <ul className=\"dropdown-menu dropdown-menu-end\">\n              <li>\n                <a className=\"dropdown-item\" href=\"#export\">\n                  <i className=\"bi bi-download me-2\"></i>\n                  Export to PDF\n                </a>\n              </li>\n              <li>\n                <a className=\"dropdown-item\" href=\"#print\">\n                  <i className=\"bi bi-printer me-2\"></i>\n                  Print\n                </a>\n              </li>\n              <li><hr className=\"dropdown-divider\" /></li>\n              <li>\n                <a className=\"dropdown-item text-danger\" href=\"#cancel\">\n                  <i className=\"bi bi-x-circle me-2\"></i>\n                  Cancel Order\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      {/* Breadcrumb */}\n      <nav aria-label=\"breadcrumb\" className=\"mb-4\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/purchase-orders\">Purchase Orders</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">\n            {purchaseOrder.header.poNumber}\n          </li>\n        </ol>\n      </nav>\n      \n      {/* Main Content */}\n      <Row>\n        {/* Left Column - PO Details */}\n        <Col lg={8}>\n          <Card className=\"mb-4\">\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\n              <h5 className=\"mb-0\">Purchase Order Information</h5>\n              <Button \n                variant=\"outline-secondary\" \n                size=\"sm\"\n                onClick={() => setActiveTab('details')}\n              >\n                <i className=\"bi bi-pencil me-1\"></i>\n                Edit\n              </Button>\n            </Card.Header>\n            \n            <Card.Body>\n              <Tabs\n                activeKey={activeTab}\n                onSelect={(k) => k && setActiveTab(k)}\n                className=\"mb-4\"\n              >\n                <Tab eventKey=\"details\" title=\"Details\">\n                  {/* PO Details */}\n                  <Row>\n                    <Col md={6}>\n                      <h6 className=\"mb-3\">Order Information</h6>\n                      <table className=\"table table-sm table-borderless\">\n                        <tbody>\n                          <tr>\n                            <td className=\"fw-medium w-40\">PO Number:</td>\n                            <td>{purchaseOrder.header.poNumber}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"fw-medium\">Order Date:</td>\n                            <td>{formatDate(purchaseOrder.header.orderDate)}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"fw-medium\">Status:</td>\n                            <td>\n                              <Badge bg={getStatusVariant(purchaseOrder.header.status)}>\n                                {purchaseOrder.header.status}\n                              </Badge>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"fw-medium\">Total Cost:</td>\n                            <td>{formatCurrency(purchaseOrder.totalCost)}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"fw-medium\">Total Items:</td>\n                            <td>{purchaseOrder.products.length}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </Col>\n                    \n                    <Col md={6}>\n                      <h6 className=\"mb-3\">Contact Information</h6>\n                      <table className=\"table table-sm table-borderless\">\n                        <tbody>\n                          <tr>\n                            <td className=\"fw-medium w-40\">Buyer:</td>\n                            <td>\n                              {purchaseOrder.header.buyerInfo.firstName} {purchaseOrder.header.buyerInfo.lastName}\n                              <div className=\"text-muted small\">\n                                {purchaseOrder.header.buyerInfo.email}\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"fw-medium\">Location:</td>\n                            <td>\n                              {purchaseOrder.header.syscoLocation.name}\n                              {purchaseOrder.header.syscoLocation.address && (\n                                <div className=\"text-muted small\">\n                                  {purchaseOrder.header.syscoLocation.address}\n                                </div>\n                              )}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </Col>\n                  </Row>\n                  \n                  <hr />\n                  \n                  {/* Products Table */}\n                  <h6 className=\"mb-3\">Products</h6>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-bordered table-hover\">\n                      <thead className=\"table-light\">\n                        <tr>\n                          <th>SUPC</th>\n                          <th>Description</th>\n                          <th>Pack Size</th>\n                          <th className=\"text-center\">Quantity</th>\n                          <th className=\"text-end\">FOB Cost</th>\n                          <th className=\"text-end\">Total</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {purchaseOrder.products.map((product: POProduct, index: number) => (\n                          <tr key={index}>\n                            <td>{product.supc}</td>\n                            <td>{product.description || 'N/A'}</td>\n                            <td>{product.packSize || 'N/A'}</td>\n                            <td className=\"text-center\">{product.quantity}</td>\n                            <td className=\"text-end\">{formatCurrency(product.fobCost)}</td>\n                            <td className=\"text-end\">{formatCurrency(product.total)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th colSpan={4}></th>\n                          <th className=\"text-end\">Total:</th>\n                          <th className=\"text-end\">{formatCurrency(purchaseOrder.totalCost)}</th>\n                        </tr>\n                      </tfoot>\n                    </table>\n                  </div>\n                </Tab>\n                \n                <Tab eventKey=\"activity\" title=\"Activity Log\">\n                  {/* Activity Timeline */}\n                  <h6 className=\"mb-3\">Status History</h6>\n                  <div className=\"timeline mb-4\">\n                    {purchaseOrder.history && purchaseOrder.history.length > 0 ? (\n                      <div className=\"timeline-container\">\n                        {purchaseOrder.history.map((entry: POHistoryEntry, index: number) => (\n                          <div key={index} className=\"timeline-item\">\n                            <div className=\"timeline-icon bg-primary\">\n                              <i className=\"bi bi-clock\"></i>\n                            </div>\n                            <div className=\"timeline-content\">\n                              <div className=\"timeline-date text-muted\">\n                                {formatDate(entry.timestamp)}\n                              </div>\n                              <h6 className=\"timeline-title\">\n                                <Badge bg={getStatusVariant(entry.status as POStatus)}>\n                                  {entry.status}\n                                </Badge>\n                                {entry.user && <span className=\"ms-2 fw-normal\">by {entry.user}</span>}\n                              </h6>\n                              {entry.notes && (\n                                <div className=\"timeline-text\">\n                                  {entry.notes}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <Alert variant=\"info\">\n                        No history available for this purchase order.\n                      </Alert>\n                    )}\n                  </div>\n                </Tab>\n                \n                <Tab eventKey=\"documents\" title=\"Documents\">\n                  {/* Documents Section */}\n                  <h6 className=\"mb-3\">Attached Documents</h6>\n                  {purchaseOrder.documents && purchaseOrder.documents.length > 0 ? (\n                    <div className=\"list-group\">\n                      {purchaseOrder.documents.map((doc: PODocument) => (\n                        <div key={doc.id} className=\"list-group-item list-group-item-action d-flex align-items-center\">\n                          <div>\n                            <i className=\"bi bi-file-earmark me-2\"></i>\n                            <span className=\"fw-medium\">{doc.name}</span>\n                            <div className=\"text-muted small\">\n                              {doc.type} · {formatDate(doc.uploadedAt)}\n                            </div>\n                          </div>\n                          <Button\n                            variant=\"outline-primary\"\n                            size=\"sm\"\n                            className=\"ms-auto\"\n                            as=\"a\"\n                            href={doc.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <i className=\"bi bi-eye me-1\"></i>\n                            View\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <Alert variant=\"info\">\n                      No documents attached to this purchase order.\n                    </Alert>\n                  )}\n                </Tab>\n                \n                <Tab eventKey=\"delivery\" title=\"Delivery Info\">\n                  {/* Shipping & Delivery Info */}\n                  <h6 className=\"mb-3\">Shipping Information</h6>\n                  {purchaseOrder.shipping ? (\n                    <Row className=\"mb-4\">\n                      <Col md={6}>\n                        <table className=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td className=\"fw-medium w-40\">Carrier:</td>\n                              <td>{purchaseOrder.shipping.carrier}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Tracking #:</td>\n                              <td>\n                                <a href={`https://www.google.com/search?q=${purchaseOrder.shipping.carrier}+tracking+${purchaseOrder.shipping.trackingNumber}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                  {purchaseOrder.shipping.trackingNumber}\n                                  <i className=\"bi bi-box-arrow-up-right ms-2 small\"></i>\n                                </a>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </Col>\n                      <Col md={6}>\n                        <table className=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td className=\"fw-medium w-40\">Ship Date:</td>\n                              <td>{formatDate(purchaseOrder.shipping.shippingDate)}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Est. Delivery:</td>\n                              <td>{formatDate(purchaseOrder.shipping.estimatedDeliveryDate)}</td>\n                            </tr>\n                            {purchaseOrder.shipping.actualDeliveryDate && (\n                              <tr>\n                                <td className=\"fw-medium\">Actual Delivery:</td>\n                                <td>{formatDate(purchaseOrder.shipping.actualDeliveryDate)}</td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      </Col>\n                    </Row>\n                  ) : (\n                    <Alert variant=\"info\" className=\"mb-4\">\n                      No shipping information available.\n                    </Alert>\n                  )}\n                  \n                  <h6 className=\"mb-3\">Delivery Information</h6>\n                  {purchaseOrder.delivery ? (\n                    <Row className=\"mb-4\">\n                      <Col md={6}>\n                        <table className=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td className=\"fw-medium w-40\">Delivered On:</td>\n                              <td>{formatDate(purchaseOrder.delivery.deliveryDate)}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Received By:</td>\n                              <td>{purchaseOrder.delivery.receivedBy}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Condition:</td>\n                              <td>\n                                <Badge bg={\n                                  purchaseOrder.delivery.condition === 'good' ? 'success' :\n                                  purchaseOrder.delivery.condition === 'damaged' ? 'danger' : 'warning'\n                                }>\n                                  {purchaseOrder.delivery.condition === 'good' ? 'Good - No issues' :\n                                   purchaseOrder.delivery.condition === 'damaged' ? 'Damaged' : 'Partial'}\n                                </Badge>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </Col>\n                    </Row>\n                  ) : (\n                    <Alert variant=\"info\">\n                      No delivery information available.\n                    </Alert>\n                  )}\n                </Tab>\n                \n                <Tab eventKey=\"invoice\" title=\"Invoice\">\n                  {/* Invoice Details */}\n                  <h6 className=\"mb-3\">Invoice Information</h6>\n                  {purchaseOrder.invoice ? (\n                    <Row className=\"mb-4\">\n                      <Col md={6}>\n                        <table className=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td className=\"fw-medium w-40\">Invoice #:</td>\n                              <td>{purchaseOrder.invoice.invoiceNumber}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Invoice Date:</td>\n                              <td>{formatDate(purchaseOrder.invoice.invoiceDate)}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </Col>\n                      <Col md={6}>\n                        <table className=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td className=\"fw-medium w-40\">Amount:</td>\n                              <td>{formatCurrency(purchaseOrder.invoice.amount)}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Due Date:</td>\n                              <td>{formatDate(purchaseOrder.invoice.dueDate)}</td>\n                            </tr>\n                            <tr>\n                              <td className=\"fw-medium\">Status:</td>\n                              <td>\n                                <Badge bg={\n                                  purchaseOrder.invoice.status === 'paid' ? 'success' :\n                                  purchaseOrder.invoice.status === 'overdue' ? 'danger' : 'warning'\n                                }>\n                                  {purchaseOrder.invoice.status || 'Pending'}\n                                </Badge>\n                              </td>\n                            </tr>\n                            {purchaseOrder.invoice.paidDate && (\n                              <tr>\n                                <td className=\"fw-medium\">Paid On:</td>\n                                <td>{formatDate(purchaseOrder.invoice.paidDate)}</td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      </Col>\n                    </Row>\n                  ) : (\n                    <Alert variant=\"info\">\n                      No invoice information available.\n                    </Alert>\n                  )}\n                </Tab>\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        {/* Right Column - Workflow and Actions */}\n        <Col lg={4}>\n          {/* Workflow Visualizer */}\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Order Workflow</h5>\n            </Card.Header>\n            <Card.Body>\n              <WorkflowVisualizer\n                currentStatus={purchaseOrder.header.status}\n                statusHistory={purchaseOrder.history}\n                availableTransitions={availableTransitions}\n                onStatusChange={handleStatusChange}\n              />\n            </Card.Body>\n          </Card>\n          \n          {/* Status Action Panel */}\n          <StatusActionPanel\n            po={purchaseOrder}\n            onUpdate={handlePOUpdate}\n            onStatusChange={handleStatusChange}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PODetailPage;","import React, { useState } from 'react';\nimport { Container, Card, Form, Button, Row, Col, Table, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Navigation from '@/utils/navigation';\nimport { ApiService } from '@/services/ApiService';\nimport { POStatus } from '@/types/purchaseOrder';\n\n/**\n * POCreatePage Component\n * \n * Page that provides a form for creating a new purchase order.\n * Includes sections for header information, product items, and additional details.\n */\nconst POCreatePage: React.FC = () => {\n  const [validated, setValidated] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  // Placeholder state for form data\n  const [formData, setFormData] = useState({\n    poNumber: '',\n    orderDate: new Date().toISOString().split('T')[0],\n    buyerFirstName: '',\n    buyerLastName: '',\n    buyerEmail: '',\n    locationName: '',\n    locationAddress: '',\n    deliveryDate: '',\n    deliveryInstructions: ''\n  });\n\n  // Placeholder state for product items\n  const [productItems, setProductItems] = useState([\n    { id: 1, supc: '', description: '', quantity: 1, price: 0, total: 0 }\n  ]);\n\n  // Handle form input changes\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Handle product item changes\n  const handleProductChange = (id: number, field: string, value: string | number) => {\n    setProductItems(prevItems =>\n      prevItems.map(item => {\n        if (item.id === id) {\n          const updatedItem = { ...item, [field]: value };\n          \n          // Recalculate total if quantity or price changed\n          if (field === 'quantity' || field === 'price') {\n            const quantity = field === 'quantity' ? Number(value) : item.quantity;\n            const price = field === 'price' ? Number(value) : item.price;\n            updatedItem.total = quantity * price;\n          }\n          \n          return updatedItem;\n        }\n        return item;\n      })\n    );\n  };\n\n  // Add new product item\n  const handleAddProduct = () => {\n    const newId = Math.max(...productItems.map(item => item.id), 0) + 1;\n    setProductItems([\n      ...productItems,\n      { id: newId, supc: '', description: '', quantity: 1, price: 0, total: 0 }\n    ]);\n  };\n\n  // Remove product item\n  const handleRemoveProduct = (id: number) => {\n    if (productItems.length > 1) {\n      setProductItems(productItems.filter(item => item.id !== id));\n    }\n  };\n\n  // Calculate order total\n  const calculateTotal = () => {\n    return productItems.reduce((sum, item) => sum + item.total, 0);\n  };\n\n  // Format PO data for API submission\n  const formatPOData = () => {\n    // Convert form data to the structure expected by the API\n    return {\n      header: {\n        poNumber: '', // Will be generated by the backend\n        status: POStatus.UPLOADED, // Initial status for new POs\n        orderDate: formData.orderDate,\n        buyerInfo: {\n          firstName: formData.buyerFirstName,\n          lastName: formData.buyerLastName,\n          email: formData.buyerEmail\n        },\n        syscoLocation: {\n          name: formData.locationName,\n          address: formData.locationAddress\n        },\n        deliveryInfo: {\n          date: formData.deliveryDate || new Date().toISOString(),\n          \n          instructions: formData.deliveryInstructions\n        }\n      },\n      products: productItems.map(item => ({\n        supc: item.supc,\n        description: item.description,\n        quantity: item.quantity,\n        fobCost: item.price,\n        total: item.total\n      })),\n      totalCost: calculateTotal(),\n      weights: {\n        grossWeight: 0,\n        netWeight: 0\n      },\n      revision: 1, // Initial revision number\n      history: []\n    };\n  };\n  \n  // Submit the PO to the API\n  const submitPO = async () => {\n    setIsSubmitting(true);\n    setErrorMessage(null);\n    try {\n      const poData = formatPOData();\n      const response = await ApiService.createPO(poData);\n      setShowSuccess(true);\n      return response;\n    } catch (error) {\n      setErrorMessage(error instanceof Error ? error.message : 'Failed to create purchase order');\n      return null;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    const form = e.currentTarget;\n    if (!form.checkValidity()) {\n      e.stopPropagation();\n      setValidated(true);\n      return;\n    }\n\n    // Submit data to API\n    const createdPO = await submitPO();\n\n    if (createdPO) {\n      // Navigate to PO details page after a delay\n      setTimeout(() => {\n        const poNumber = createdPO.header.poNumber;\n        Navigation.toPODetail(poNumber);\n      }, 2000);\n    } else {\n      // Error is already handled in submitPO\n      window.scrollTo(0, 0); // Scroll to top to show error\n    }\n  };\n\n  return (\n    <Container fluid>\n      {/* Page Header */}\n      <div className=\"d-flex align-items-center justify-content-between mb-4\">\n        <h1 className=\"h2 mb-0 text-gray-800\">Create New Purchase Order</h1>\n      </div>\n      \n      {showSuccess && (\n        <Alert \n          variant=\"success\" \n          dismissible \n          onClose={() => setShowSuccess(false)}\n          className=\"mb-4\"\n        >\n          <Alert.Heading>Purchase Order Created Successfully!</Alert.Heading>\n          <p>Your purchase order has been created and is being processed. You will be redirected to the PO details page momentarily.</p>\n        </Alert>\n      )}\n      \n      {errorMessage && (\n        <Alert \n          variant=\"danger\" \n          dismissible \n          onClose={() => setErrorMessage(null)}\n          className=\"mb-4\"\n        >\n          <Alert.Heading>Error Creating Purchase Order</Alert.Heading>\n          <p>{errorMessage}</p>\n        </Alert>\n      )}\n      \n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        {/* Header Information Card */}\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Header className=\"bg-light py-3\">\n            <h5 className=\"mb-0 fw-bold\">Order Information</h5>\n          </Card.Header>\n          <Card.Body>\n            <Row className=\"g-3\">\n              <Col md={6} lg={3}>\n                <Form.Group controlId=\"poNumber\">\n                  <Form.Label>PO Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Auto-generated\"\n                    name=\"poNumber\"\n                    disabled\n                  />\n                </Form.Group>\n              </Col>\n              \n              <Col md={6} lg={3}>\n                <Form.Group controlId=\"orderDate\">\n                  <Form.Label>Order Date *</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"orderDate\"\n                    value={formData.orderDate}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide an order date.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={6} lg={3}>\n                <Form.Group controlId=\"deliveryDate\">\n                  <Form.Label>Requested Delivery Date *</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"deliveryDate\"\n                    value={formData.deliveryDate}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a delivery date.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={6} lg={3}>\n                <Form.Group controlId=\"status\">\n                  <Form.Label>Status</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"UPLOADED\"\n                    disabled\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        \n        {/* Buyer Information Card */}\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Header className=\"bg-light py-3\">\n            <h5 className=\"mb-0 fw-bold\">Buyer Information</h5>\n          </Card.Header>\n          <Card.Body>\n            <Row className=\"g-3\">\n              <Col md={6}>\n                <Form.Group controlId=\"buyerFirstName\">\n                  <Form.Label>First Name *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter first name\"\n                    name=\"buyerFirstName\"\n                    value={formData.buyerFirstName}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a first name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={6}>\n                <Form.Group controlId=\"buyerLastName\">\n                  <Form.Label>Last Name *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter last name\"\n                    name=\"buyerLastName\"\n                    value={formData.buyerLastName}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a last name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={12}>\n                <Form.Group controlId=\"buyerEmail\">\n                  <Form.Label>Email Address *</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    name=\"buyerEmail\"\n                    value={formData.buyerEmail}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a valid email address.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        \n        {/* Location Information */}\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Header className=\"bg-light py-3\">\n            <h5 className=\"mb-0 fw-bold\">Location Information</h5>\n          </Card.Header>\n          <Card.Body>\n            <Row className=\"g-3\">\n              <Col md={6}>\n                <Form.Group controlId=\"locationName\">\n                  <Form.Label>Location Name *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter location name\"\n                    name=\"locationName\"\n                    value={formData.locationName}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a location name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={6}>\n                <Form.Group controlId=\"locationAddress\">\n                  <Form.Label>Address *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter address\"\n                    name=\"locationAddress\"\n                    value={formData.locationAddress}\n                    onChange={handleInputChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide an address.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n              \n              <Col md={12}>\n                <Form.Group controlId=\"deliveryInstructions\">\n                  <Form.Label>Delivery Instructions</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={2}\n                    placeholder=\"Enter any special delivery instructions\"\n                    name=\"deliveryInstructions\"\n                    value={formData.deliveryInstructions}\n                    onChange={handleInputChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        \n        {/* Product Items */}\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Header className=\"bg-light py-3 d-flex justify-content-between\">\n            <h5 className=\"mb-0 fw-bold\">Product Items</h5>\n            <Button \n              variant=\"primary\" \n              size=\"sm\" \n              onClick={handleAddProduct}\n            >\n              <i className=\"bi bi-plus\"></i> Add Item\n            </Button>\n          </Card.Header>\n          <Card.Body>\n            <div className=\"table-responsive\">\n              <Table bordered>\n                <thead className=\"table-light\">\n                  <tr>\n                    <th style={{ width: '5%' }}>#</th>\n                    <th style={{ width: '20%' }}>SUPC *</th>\n                    <th style={{ width: '30%' }}>Description</th>\n                    <th style={{ width: '10%' }}>Quantity *</th>\n                    <th style={{ width: '15%' }}>Unit Price *</th>\n                    <th style={{ width: '15%' }}>Total</th>\n                    <th style={{ width: '5%' }}>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {productItems.map((item, index) => (\n                    <tr key={item.id}>\n                      <td>{index + 1}</td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"SUPC\"\n                          value={item.supc}\n                          onChange={(e) => handleProductChange(item.id, 'supc', e.target.value)}\n                          required\n                          size=\"sm\"\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Product description\"\n                          value={item.description}\n                          onChange={(e) => handleProductChange(item.id, 'description', e.target.value)}\n                          size=\"sm\"\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"number\"\n                          min=\"1\"\n                          value={item.quantity}\n                          onChange={(e) => handleProductChange(item.id, 'quantity', Number(e.target.value))}\n                          required\n                          size=\"sm\"\n                        />\n                      </td>\n                      <td>\n                        <Form.Control\n                          type=\"number\"\n                          min=\"0\"\n                          step=\"0.01\"\n                          value={item.price}\n                          onChange={(e) => handleProductChange(item.id, 'price', Number(e.target.value))}\n                          required\n                          size=\"sm\"\n                        />\n                      </td>\n                      <td className=\"text-end\">\n                        {new Intl.NumberFormat('en-US', {\n                          style: 'currency',\n                          currency: 'USD'\n                        }).format(item.total)}\n                      </td>\n                      <td className=\"text-center\">\n                        <Button\n                          variant=\"outline-danger\"\n                          size=\"sm\"\n                          onClick={() => handleRemoveProduct(item.id)}\n                          disabled={productItems.length <= 1}\n                        >\n                          <i className=\"bi bi-trash\"></i>\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan={5} className=\"text-end fw-bold\">Order Total:</td>\n                    <td className=\"text-end fw-bold\">\n                      {new Intl.NumberFormat('en-US', {\n                        style: 'currency',\n                        currency: 'USD'\n                      }).format(calculateTotal())}\n                    </td>\n                    <td></td>\n                  </tr>\n                </tfoot>\n              </Table>\n            </div>\n          </Card.Body>\n        </Card>\n        \n        {/* Form Actions */}\n        <div className=\"mb-4 d-flex justify-content-between\">\n          <Button variant=\"outline-secondary\">\n            <i className=\"bi bi-arrow-left me-1\"></i> \n            <Link to=\"/purchase-orders\" className=\"text-decoration-none text-secondary\">\n              Cancel\n            </Link>\n          </Button>\n          \n          <div>\n            <Button variant=\"outline-primary\" className=\"me-2\" type=\"reset\">\n              <i className=\"bi bi-arrow-counterclockwise me-1\"></i> Reset\n            </Button>\n            <Button \n              variant=\"success\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {isSubmitting && <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>}\n              <i className=\"bi bi-check2-circle me-1\"></i> Create Purchase Order\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </Container>\n  );\n};\n\nexport default POCreatePage;","import Logger from './logger';\n\n/**\n * Debug Helper for tracking component lifecycle and rendering issues\n */\nexport class DebugHelper {\n  private static readonly DEBUG_ENABLED = true;\n\n  /**\n   * Track component mounting\n   * @param componentName Name of the component\n   * @param props Optional props to log\n   */\n  public static componentDidMount(componentName: string, props?: any): void {\n    if (!this.DEBUG_ENABLED) return;\n    Logger.debug(`[MOUNT] ${componentName} mounted`, props ? { props } : undefined);\n  }\n\n  /**\n   * Track component unmounting\n   * @param componentName Name of the component\n   */\n  public static componentWillUnmount(componentName: string): void {\n    if (!this.DEBUG_ENABLED) return;\n    Logger.debug(`[UNMOUNT] ${componentName} will unmount`);\n  }\n\n  /**\n   * Track component updates\n   * @param componentName Name of the component\n   * @param prevProps Previous props (optional)\n   * @param nextProps Next props (optional)\n   */\n  public static componentDidUpdate(componentName: string, prevProps?: any, nextProps?: any): void {\n    if (!this.DEBUG_ENABLED) return;\n    \n    Logger.debug(`[UPDATE] ${componentName} updated`, {\n      ...(prevProps ? { prevProps } : {}),\n      ...(nextProps ? { nextProps } : {})\n    });\n  }\n\n  /**\n   * Track rendering errors\n   * @param componentName Name of the component\n   * @param error The error that occurred\n   */\n  public static renderError(componentName: string, error: Error): void {\n    Logger.error(`[RENDER ERROR] ${componentName} failed to render:`, error);\n  }\n\n  /**\n   * Track data fetching\n   * @param componentName Name of the component\n   * @param dataType Type of data being fetched\n   * @param status Status of the fetch (start, success, error)\n   * @param details Additional details\n   */\n  public static dataFetch(\n    componentName: string, \n    dataType: string, \n    status: 'start' | 'success' | 'error',\n    details?: any\n  ): void {\n    if (!this.DEBUG_ENABLED) return;\n    \n    Logger.debug(`[DATA ${status.toUpperCase()}] ${componentName} - ${dataType}`, details);\n  }\n\n  /**\n   * Track visualization rendering\n   * @param componentName Name of the component\n   * @param renderedItems Number of items rendered\n   * @param renderTime Time taken to render in ms (optional)\n   */\n  public static visualizationRendered(\n    componentName: string,\n    renderedItems: number,\n    renderTime?: number\n  ): void {\n    if (!this.DEBUG_ENABLED) return;\n    \n    Logger.debug(\n      `[VISUALIZATION] ${componentName} rendered ${renderedItems} items` + \n      (renderTime ? ` in ${renderTime}ms` : '')\n    );\n  }\n}\n\nexport default DebugHelper;","import { Component, ErrorInfo, ReactNode } from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport Logger from '@/utils/logger';\nimport DebugHelper from '@/utils/debugHelper';\n\ninterface Props {\n  componentName?: string;\n  children: ReactNode;\n  fallback?: ReactNode;\n  onRetry?: () => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\n/**\n * ErrorBoundary Component\n *\n * A React error boundary that catches errors in its child component tree\n * and displays a fallback UI instead of crashing the entire application.\n */\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log the error to the console and any error reporting service\n    const componentName = this.props.componentName || 'Unknown';\n    Logger.error(`[ERROR BOUNDARY] Error caught in ${componentName}:`, error);\n    Logger.error(`[ERROR BOUNDARY] Component Stack:`, errorInfo.componentStack);\n    \n    // Use the debug helper to track this error\n    DebugHelper.renderError(componentName, error);\n    \n    this.setState({\n      errorInfo\n    });\n  }\n\n  handleReset = (): void => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n    \n    if (this.props.onRetry) {\n      this.props.onRetry();\n    }\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      const customFallback = this.props.fallback;\n      if (customFallback) {\n        return customFallback;\n      }\n      \n      // Default fallback UI\n      return (\n        <Alert variant=\"danger\" className=\"m-3\">\n          <Alert.Heading>Component Error</Alert.Heading>\n          <p>\n            There was an error rendering the {this.props.componentName || 'component'}.\n          </p>\n          {this.state.error && (\n            <pre className=\"error-message p-2 bg-light\">\n              {this.state.error.toString()}\n            </pre>\n          )}\n          <div className=\"d-flex justify-content-end\">\n            <Button\n              variant=\"outline-danger\"\n              size=\"sm\"\n              onClick={this.handleReset}\n            >\n              Try Again\n            </Button>\n          </div>\n        </Alert>\n      );\n    }\n\n    // When there's no error, render children normally\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React, { useState, useEffect, lazy, Suspense, useMemo } from 'react';\nimport { Container, Row, Col, Card, Button, Nav, Tab, Form, Dropdown } from 'react-bootstrap';\nimport { ApiService } from '@/services/ApiService'; \n// Lazy load visualization components\nconst CalendarView = lazy(() => import('@/components/visualizations/CalendarView'));\nconst KanbanBoard = lazy(() => import('@/components/visualizations/KanbanBoard'));\nconst TimelineView = lazy(() => import('@/components/visualizations/TimelineView'));\nconst GeographicMap = lazy(() => import('@/components/visualizations/GeographicMap'));\nimport Logger from '@/utils/logger';\nimport DebugHelper from '@/utils/debugHelper';\nimport Navigation from '@/utils/navigation';\nimport ErrorBoundary from '@/components/common/ErrorBoundary';\n\n/**\n * PlanningHubPage Component\n * \n * A visualization hub for planning purchase orders across different views\n * including calendar, kanban, timeline, and geographic perspectives.\n */\nconst PlanningHubPage: React.FC = () => {\n  const [viewMode, setViewMode] = useState<'calendar' | 'kanban' | 'timeline' | 'map'>('calendar');\n  // Loading state for refreshes\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // Calendar view specific state\n  const [calendarDateField, setCalendarDateField] = useState<'orderDate' | 'deliveryDate' | 'shipDate' | 'invoiceDate'>('orderDate');\n  const [calendarDateRange, setCalendarDateRange] = useState<'this-month' | 'next-month' | 'next-3-months' | 'custom'>('this-month');\n  const [calendarRange, setCalendarRange] = useState<'month' | 'week' | 'day'>('month');\n\n  // Kanban board specific state\n  const [kanbanGroupBy, setKanbanGroupBy] = useState<'status' | 'supplier' | 'location' | 'buyer'>('status');\n  const [kanbanSortBy, setKanbanSortBy] = useState<'orderDate' | 'amount' | 'dueDate' | 'priority'>('orderDate');\n  const [kanbanFilterStatus, setKanbanFilterStatus] = useState<'all' | 'open' | 'completed' | 'custom'>('all');\n  \n  // Timeline view specific state\n  const [timelineRange, setTimelineRange] = useState<'month' | 'quarter' | '6months' | 'year' | 'custom'>('month');\n  const [timelineGroupBy, setTimelineGroupBy] = useState<'none' | 'supplier' | 'status' | 'location'>('none');\n  \n  // Timeline view milestone type\n  const [timelineMilestoneType, setTimelineMilestoneType] = useState<'all' | 'status' | 'delivery' | 'payment'>('all');\n  \n  // Geographic map specific state\n  const [mapRegion, setMapRegion] = useState<'all' | 'north-america' | 'europe' | 'asia-pacific' | 'latin-america'>('all');\n  const [mapTimePeriod, setMapTimePeriod] = useState<'current-month' | 'last-3-months' | 'ytd' | 'custom'>('current-month');\n  const [mapDeliveryStatus, setMapDeliveryStatus] = useState<'all' | 'pending' | 'in-transit' | 'delivered'>('all');\n  \n  // Selected items for batch operations\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n  const [isBatchProcessing, setIsBatchProcessing] = useState<boolean>(false);\n  \n\n  // Refresh data only when view mode changes\n  useEffect(() => {\n    DebugHelper.componentDidMount('PlanningHubPage', { viewMode });\n    // Preload data for current view\n    refreshCurrentView();\n    \n    return () => {\n      DebugHelper.componentWillUnmount('PlanningHubPage');\n    };\n  }, [viewMode]);\n\n  // Track total PO count\n  const [totalPOCount, setTotalPOCount] = useState<number>(0);\n\n  // Create loading placeholder to reduce layout shifts\n  const loadingPlaceholder = useMemo(() => (\n    <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '600px' }}>\n      <span className=\"spinner-border text-primary\" style={{ width: '3rem', height: '3rem' }} />\n    </div>\n  ), []);\n  \n  // Handle calendar view configuration changes\n  const handleCalendarViewChange = (field: string, value: string) => {\n    if (field === 'dateField') {\n      setCalendarDateField(value as 'orderDate' | 'deliveryDate' | 'shipDate' | 'invoiceDate');  \n    } else if (field === 'dateRange') {\n      setCalendarDateRange(value as 'this-month' | 'next-month' | 'next-3-months' | 'custom');\n    } else if (field === 'range') {\n      setCalendarRange(value as 'month' | 'week' | 'day');  \n    }\n  };\n  \n  // Handle kanban board configuration changes\n  const handleKanbanViewChange = (field: string, value: string) => {\n    if (field === 'groupBy') {\n      setKanbanGroupBy(value as 'status' | 'supplier' | 'location' | 'buyer');\n    } else if (field === 'sortBy') {\n      setKanbanSortBy(value as 'orderDate' | 'amount' | 'dueDate' | 'priority');\n    } else if (field === 'filterStatus') {\n      setKanbanFilterStatus(value as 'all' | 'open' | 'completed' | 'custom');\n    }\n  };\n  \n  // Handle timeline view configuration changes\n  const handleTimelineViewChange = (field: string, value: string) => {\n    if (field === 'timeRange') {\n      setTimelineRange(value as 'month' | 'quarter' | '6months' | 'year' | 'custom');\n    } else if (field === 'groupBy') {\n      setTimelineGroupBy(value as 'none' | 'supplier' | 'status' | 'location');\n    } else if (field === 'milestoneType') {\n      setTimelineMilestoneType(value as 'all' | 'status' | 'delivery' | 'payment');\n    }\n  };\n  \n  // Handle map view configuration changes\n  const handleMapViewChange = (field: string, value: string) => {\n    if (field === 'region') {\n      setMapRegion(value as 'all' | 'north-america' | 'europe' | 'asia-pacific' | 'latin-america');\n    } else if (field === 'deliveryStatus') {\n      setMapDeliveryStatus(value as 'all' | 'pending' | 'in-transit' | 'delivered');\n    } else if (field === 'timePeriod') {\n      setMapTimePeriod(value as 'current-month' | 'last-3-months' | 'ytd' | 'custom');\n    }\n  };\n  \n  // Refresh the current view data\n  const handleTimeRangeChange = (newRange: 'month' | 'quarter' | '6months' | 'year' | 'custom') => {\n    Logger.debug('PlanningHubPage.handleTimeRangeChange called with:', newRange);\n    \n    // Set the timeline range state\n    if (newRange !== timelineRange) {\n      setTimelineRange(newRange as 'month' | 'quarter' | '6months' | 'year' | 'custom');\n      \n      // If there's additional logic that should happen on time range change,\n      // it can be added here. This provides a clean separation of concerns\n      // without misusing the PO selection callback.\n      refreshCurrentView();\n    }\n  };\n  \n  const refreshCurrentView = async () => {\n    if (!isLoading) {\n      setIsLoading(true);\n      \n      // Get date range based on current view\n      const now = new Date();\n      let startDate = new Date(now);\n      let endDate = new Date(now);\n      \n      // Adjust date ranges based on view mode\n      if (viewMode === 'calendar') {\n        if (calendarDateRange === 'this-month') {\n          startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n          endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n        } else if (calendarDateRange === 'next-month') {\n          startDate = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n          endDate = new Date(now.getFullYear(), now.getMonth() + 2, 0);\n        } else if (calendarDateRange === 'next-3-months') {\n          startDate = new Date();\n          endDate = new Date();\n          endDate.setMonth(endDate.getMonth() + 3);\n        }\n      } else if (viewMode === 'timeline') {\n        if (timelineRange === 'month') {\n          startDate.setMonth(startDate.getMonth() - 1);\n        } else if (timelineRange === 'quarter') {\n          startDate.setMonth(startDate.getMonth() - 3);\n        } else if (timelineRange === '6months') {\n          startDate.setMonth(startDate.getMonth() - 6);\n        } else if (timelineRange === 'year') {\n          startDate.setFullYear(startDate.getFullYear() - 1);\n        }\n      }\n      \n      try {\n        // Fetch PO data from API with proper limit\n        const response = await ApiService.fetchPOs({\n          startDate: startDate.toISOString(),\n          endDate: endDate.toISOString(),\n          limit: 100, // Get more data for visualizations\n          page: 1\n        });\n  \n        // Store data and counts\n        if (response && response.metadata) {\n          setTotalPOCount(response.metadata.total);\n        }\n      } catch (err) {\n        Logger.error('Error refreshing data:', err);\n      } finally {\n        // Add a small delay to prevent rapid re-requests if user clicks quickly\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 300);\n      }\n    }\n  };\n  \n  // Apply filters for the current view\n  const handleApplyFilters = () => {\n    Logger.debug('handleApplyFilters called');\n    Logger.debug(`Filter button clicked - current view mode: ${viewMode}`);\n    // For now we'll just refresh the data\n    // In a more complex implementation, we would pass filter params to the components\n    refreshCurrentView();\n  };\n\n  // Handle status change from kanban board drag drop\n  const handleStatusChange = async (poNumber: string, newStatus: string) => {\n    Logger.debug(`handleStatusChange called with: ${poNumber}, ${newStatus}`);\n    \n    try {\n      setIsLoading(true);\n      \n      if (!poNumber || !newStatus) {\n        Logger.error('Invalid arguments for status change');\n        return;\n      }\n      \n      // Call the actual API to update status\n      await ApiService.updateStatus(poNumber, newStatus as any);\n      Logger.info(`Successfully changed status of ${poNumber} to ${newStatus}`);\n      \n      // Refresh data to show the updated status\n      refreshCurrentView();\n    } finally {\n    }\n  };\n\n  // Handle batch selection changes from visualization components\n  // This function will be properly connected when the visualization\n  const handleBatchSelectionChange = (items: string[]) => {\n    // Set the selected items\n    setSelectedItems(items);\n    \n    // Log selection changes\n    Logger.debug(`Selection changed: ${items.length} items selected: ${items.join(', ')}`);\n  };\n  \n  // Handle batch operation execution\n  const handleBatchOperation = (operation: 'statusChange' | 'edit' | 'duplicate' | 'export' | 'delete', params?: Record<string, any>) => {\n    Logger.debug('handleBatchOperation called with:', { operation, params });\n    Logger.debug(`Executing batch operation: ${operation}`, { params });\n    \n    if (selectedItems.length === 0) return;\n    \n    setIsBatchProcessing(true);\n    \n    // Simulate API call with a timeout\n    setTimeout(() => {\n      // In a real implementation, this would call an API with the operation and selected items\n      Logger.info(`Completed batch operation: ${operation}`, { selectedItems, params });\n      \n      setIsBatchProcessing(false);\n      \n      // After the operation completes, update selection\n      handleBatchSelectionChange([]);\n      setSelectedItems([]); // Clear selection after operation completes\n    }, 1500);\n  };\n  \n  // Handle PO selection in visualizations\n  const handlePOSelect = (poNumber: string) => {\n    Logger.debug('handlePOSelect called with:', { poNumber, type: typeof poNumber });\n    \n    try {\n      if (typeof poNumber === 'string' && poNumber.startsWith('PO')) {\n        // Navigate to the PO detail page\n        Logger.info('[NAVIGATION] Navigating to PO detail page:', `/purchase-orders/${poNumber}`);\n        \n        // Wrap in try-catch to prevent unhandled exceptions from navigation\n        try {\n          Navigation.toPODetail(poNumber);\n        } catch (navError) {\n          Logger.error('[NAVIGATION ERROR] Failed to navigate:', navError);\n        }\n      } else {\n        Logger.debug('[NAVIGATION] Non-PO selection detected:', poNumber);  // For non-PO selections like filter values\n      }\n    } catch (error) {\n      Logger.error('[CRITICAL] Unexpected error in handlePOSelect:', error);\n    }\n  };\n  \n  // Error handler to catch rendering errors for visualization components\n  const handleRenderError = (componentName: string, error: Error) => {\n    Logger.error(`[CRITICAL] Error rendering ${componentName}:`, error);\n    DebugHelper.renderError(componentName, error);\n  };\n  \n  // Wrap component rendering with error handling\n  const safeRender = (node: React.ReactNode, componentName: string): React.ReactNode => {\n    try {\n      Logger.debug(`[RENDER] About to render ${componentName}`);\n      return node;\n    } catch (error) {\n      handleRenderError(componentName, error as Error);\n      return (\n        <div className=\"alert alert-danger m-3\">\n          Error rendering {componentName}. Please check the console for details.\n        </div>\n      );\n    }\n  };\n  \n  return (\n    <Container fluid>\n      {/* Page Header */}\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n        <h1 className=\"h2 mb-0 text-gray-800\">Planning Hub</h1>\n        \n        {/* Total PO count indicator */}\n        <div className=\"d-flex align-items-center me-3\">\n          <span className=\"badge bg-primary p-2 rounded-pill\">\n            {isLoading ? \"Loading...\" : `${totalPOCount} Purchase Orders`}\n          </span> \n        </div>\n        \n        <div>\n          <Button variant=\"primary\" onClick={() => Navigation.toPOCreation()}>\n            {/* Note: This button navigates to the purchase order creation page */}\n            <i className=\"bi bi-plus-lg me-1\"></i>\n            New PO\n          </Button>\n        </div>\n      </div>\n      \n      {/* Visualization Controls */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header className=\"bg-light py-3\">\n          <Row className=\"align-items-center\">\n            <Col>\n              <h5 className=\"m-0 fw-bold\">Visualization Options</h5>\n            </Col>\n            <Col xs=\"auto\">\n              <Nav \n                variant=\"pills\" \n                activeKey={viewMode} \n                onSelect={(key) => setViewMode(key as any)}\n                className=\"nav-pills-toggle\"\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey=\"calendar\" title=\"Calendar View\">\n                    <i className=\"bi bi-calendar3 me-1\"></i>\n                    <span className=\"d-none d-md-inline\">Calendar</span>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"kanban\" title=\"Kanban Board\">\n                    <i className=\"bi bi-kanban me-1\"></i>\n                    <span className=\"d-none d-md-inline\">Kanban</span>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"timeline\" title=\"Timeline View\">\n                    <i className=\"bi bi-bar-chart-steps me-1\"></i>\n                    <span className=\"d-none d-md-inline\">Timeline</span>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"map\" title=\"Geographic Map\">\n                    <i className=\"bi bi-geo-alt me-1\"></i>\n                    <span className=\"d-none d-md-inline\">Map</span>\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n          </Row>\n        </Card.Header>\n        \n        <Card.Body>\n          <Tab.Content>\n            <Tab.Pane active={viewMode === 'calendar'}>\n              <Row className=\"g-3\">\n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"calendarDateRange\">\n                    <Form.Label>Date Range</Form.Label>\n                    <Form.Select value={calendarDateRange} onChange={(e) => handleCalendarViewChange('dateRange', e.target.value)}>\n                      <option value=\"this-month\">This Month</option>\n                      <option value=\"next-month\">Next Month</option>\n                      <option value=\"next-3-months\">Next 3 Months</option>\n                      <option>Custom Range</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"calendarViewType\">\n                    <Form.Label>View Type</Form.Label>\n                    <Form.Select \n                      value={calendarRange} \n                      onChange={(e) => handleCalendarViewChange('range', e.target.value)}\n                    >\n                      <option value=\"month\">Month View</option>\n                      <option value=\"week\">Week View</option>\n                      <option value=\"day\">Day View</option>\n                      <option value=\"agenda\">Agenda View</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"calendarDateField\">\n                    <Form.Label>Date Field</Form.Label>\n                    <Form.Select \n                      value={calendarDateField} \n                      onChange={(e) => handleCalendarViewChange('dateField', e.target.value)}\n                    >\n                      <option value=\"orderDate\">Order Date</option>\n                      <option value=\"deliveryDate\">Expected Delivery</option>\n                      <option value=\"shipDate\">Ship Date</option>\n                      <option value=\"invoiceDate\">Actual Delivery</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col lg={3} className=\"d-flex align-items-end\">\n                  <Button variant=\"primary\" onClick={handleApplyFilters} disabled={isLoading}>{isLoading ? \"Loading...\" : \"Apply Filters\"}</Button>\n                </Col>\n              </Row>\n            </Tab.Pane>\n            \n            <Tab.Pane active={viewMode === 'kanban'}>\n              <Row className=\"g-3\">\n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"kanbanGroupBy\">\n                    <Form.Label>Group By</Form.Label>\n                    <Form.Select value={kanbanGroupBy} onChange={(e) => handleKanbanViewChange('groupBy', e.target.value)}>\n                      <option>Status</option>\n                      <option>Supplier</option>\n                      <option>Location</option>\n                      <option>Buyer</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"kanbanSortBy\">\n                    <Form.Label>Sort By</Form.Label>\n                    <Form.Select value={kanbanSortBy} onChange={(e) => handleKanbanViewChange('sortBy', e.target.value)}>\n                      <option>Order Date</option>\n                      <option>Amount</option>\n                      <option>Due Date</option>\n                      <option>Priority</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group>\n                    <Form.Label>Filter Status</Form.Label>\n                    <Form.Select value={kanbanFilterStatus} onChange={(e) => handleKanbanViewChange('filterStatus', e.target.value)}>\n                      <option value=\"all\">All Statuses</option>\n                      <option value=\"open\">Open Orders Only</option>\n                      <option value=\"completed\">Completed Orders Only</option>\n                      <option value=\"custom\">Custom Selection</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col lg={3} className=\"d-flex align-items-end\">\n                  <Button variant=\"primary\" onClick={handleApplyFilters} disabled={isLoading}>{isLoading ? \"Loading...\" : \"Apply Layout\"}</Button>\n                </Col>\n              </Row>\n            </Tab.Pane>\n            \n            <Tab.Pane active={viewMode === 'timeline'}>\n              <Row className=\"g-3\">\n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"timelineTimeRange\">\n                    <Form.Label>Time Range</Form.Label>\n                    <Form.Select value={timelineRange} onChange={(e) => handleTimelineViewChange('timeRange', e.target.value)}>\n                      <option>Last 30 Days</option>\n                      <option>Last 90 Days</option>\n                      <option>Last 6 Months</option>\n                      <option>Last Year</option>\n                      <option>Custom Range</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"timelineGroupBy\">\n                    <Form.Label>Group By</Form.Label>\n                    <Form.Select value={timelineGroupBy} onChange={(e) => handleTimelineViewChange('groupBy', e.target.value)}>\n                      <option>None</option>\n                      <option>Supplier</option>\n                      <option>Status</option>\n                      <option>Location</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group>\n                    <Form.Label>Milestone Type</Form.Label>\n                    <Form.Select value={timelineMilestoneType} onChange={(e) => handleTimelineViewChange('milestoneType', e.target.value)}>\n                      <option value=\"all\">All Events</option>\n                      <option value=\"status\">Status Changes Only</option>\n                      <option value=\"delivery\">Delivery Milestones</option>\n                      <option value=\"payment\">Payment Milestones</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col lg={3} className=\"d-flex align-items-end\">\n                  <Button variant=\"primary\" onClick={handleApplyFilters} disabled={isLoading}>{isLoading ? \"Loading...\" : \"Apply View\"}</Button>\n                </Col>\n              </Row>\n            </Tab.Pane>\n            \n            <Tab.Pane active={viewMode === 'map'}>\n              <Row className=\"g-3\">\n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"mapRegion\">\n                    <Form.Label>Region</Form.Label>\n                    <Form.Select value={mapRegion} onChange={(e) => handleMapViewChange('region', e.target.value)}>\n                      <option>All Regions</option>\n                      <option>North America</option>\n                      <option>Europe</option>\n                      <option>Asia Pacific</option>\n                      <option>Latin America</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group controlId=\"mapDeliveryStatus\">\n                    <Form.Label>Delivery Status</Form.Label>\n                    <Form.Select value={mapDeliveryStatus} onChange={(e) => handleMapViewChange('deliveryStatus', e.target.value)}>\n                      <option>All Orders</option>\n                      <option>Pending Delivery</option>\n                      <option>In Transit</option>\n                      <option>Delivered</option>\n                    </Form.Select>\n                  </Form.Group>\n                </Col>\n                \n                <Col md={4} lg={3}>\n                  <Form.Group>\n                    <Form.Label>Time Period</Form.Label>\n                    <Form.Select value={mapTimePeriod} onChange={(e) => handleMapViewChange('timePeriod', e.target.value)}>\n                      <option value=\"current-month\">Current Month</option>\n                      <option value=\"last-3-months\">Last 3 Months</option>\n                      <option value=\"ytd\">YTD</option>\n                      <option value=\"custom\">Custom Range</option>\n                    </Form.Select> \n                  </Form.Group>\n                </Col>\n                \n                <Col lg={3} className=\"d-flex align-items-end\">\n                  <Button variant=\"primary\" onClick={handleApplyFilters} disabled={isLoading}>{isLoading ? \"Loading...\" : \"Update Map\"}</Button>\n                </Col>\n              </Row>\n            </Tab.Pane>\n          </Tab.Content>\n        </Card.Body>\n      </Card>\n      \n      {/* Visualization content */}\n      <Card className=\"mb-4 shadow-sm\" style={{ minHeight: '600px' }}>\n        <Card.Body className=\"p-0\">\n          <Suspense fallback={loadingPlaceholder}>\n          {viewMode === 'calendar' && (\n            <div className=\"calendar-container\" style={{ height: '600px' }}>\n              {safeRender(<CalendarView \n                dateField={calendarDateField} \n                range={calendarRange}\n                onPOSelect={handlePOSelect} \n                className=\"h-100\"\n              />, 'CalendarView')}\n            </div>\n          )}\n          \n          {viewMode === 'kanban' && (\n            <div className=\"kanban-container\" style={{ height: '600px' }}>\n              {safeRender(<KanbanBoard \n                groupBy={kanbanGroupBy} \n                sortBy={kanbanSortBy}\n                filterStatus={kanbanFilterStatus}\n                onPOSelect={handlePOSelect}\n                onStatusChange={handleStatusChange}\n                className=\"h-100\"\n              />, 'KanbanBoard')}\n            </div>\n          )}\n          \n          {viewMode === 'timeline' && (\n            <div className=\"timeline-container\" style={{ height: '600px' }}>\n              {safeRender(\n                <ErrorBoundary \n                  componentName=\"TimelineView\" \n                  onRetry={() => refreshCurrentView()}\n                >\n                  <TimelineView \n                    timeRange={timelineRange} \n                    groupBy={timelineGroupBy}\n                    onTimeRangeChange={handleTimeRangeChange}\n                    onPOSelect={handlePOSelect}\n                    milestoneType={timelineMilestoneType} \n                    className=\"h-100\"\n                  />\n                </ErrorBoundary>,\n                'TimelineView')}\n            </div>\n          )}\n          \n          {viewMode === 'map' && (\n            <div className=\"map-container\" style={{ height: '600px' }}>\n              {safeRender(<GeographicMap \n                region={mapRegion}\n                deliveryStatus={mapDeliveryStatus}\n                timePeriod={mapTimePeriod}\n                onBatchSelectionChange={handleBatchSelectionChange}\n                onPOSelect={handlePOSelect} \n                className=\"h-100\"\n              />, 'GeographicMap')}\n            </div>\n          )}\n          </Suspense>\n        </Card.Body>\n      </Card>\n      \n      {/* Operations Panel (batch actions) */}\n      <Card className=\"shadow-sm\">\n        <Card.Header className=\"bg-light py-3\">\n          <h5 className=\"mb-0 fw-bold\">Batch Operations</h5>\n        </Card.Header>\n        <Card.Body>\n          <p className=\"mb-3\">\n            Selected Items: <span className=\"fw-bold\">{selectedItems.length}</span>\n            {selectedItems.length > 0 && (\n              <small className=\"ms-2 text-muted\">({selectedItems.join(\", \")})</small>\n            )}\n          </p>\n          \n          <div className=\"d-flex flex-wrap gap-2\">\n            <Dropdown>\n              <Dropdown.Toggle variant=\"primary\" disabled={selectedItems.length === 0 || isBatchProcessing}>\n                <i className=\"bi bi-check-circle me-1\"></i> Status Change\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => handleBatchOperation('statusChange', { status: 'CONFIRMED' })}>Mark as Confirmed</Dropdown.Item>\n                <Dropdown.Item onClick={() => handleBatchOperation('statusChange', { status: 'SHIPPED' })}>Mark as Shipped</Dropdown.Item>\n                <Dropdown.Item onClick={() => handleBatchOperation('statusChange', { status: 'DELIVERED' })}>Mark as Delivered</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item className=\"text-danger\" onClick={() => handleBatchOperation('statusChange', { status: 'CANCELLED' })}>Mark as Cancelled</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            \n            <Button variant=\"outline-primary\" disabled={selectedItems.length === 0 || isBatchProcessing} onClick={() => handleBatchOperation('edit')}>\n              <i className=\"bi bi-pencil me-1\"></i> Edit Selected\n            </Button>\n            \n            <Button variant=\"outline-primary\" disabled={selectedItems.length === 0 || isBatchProcessing} onClick={() => handleBatchOperation('duplicate')}>\n              <i className=\"bi bi-files me-1\"></i> Duplicate\n            </Button>\n            \n            <Button variant=\"outline-primary\" disabled={selectedItems.length === 0 || isBatchProcessing} onClick={() => handleBatchOperation('export')}>\n              <i className=\"bi bi-file-earmark-excel me-1\"></i> Export\n            </Button>\n            \n            <Button variant=\"outline-danger\" disabled={selectedItems.length === 0 || isBatchProcessing} onClick={() => handleBatchOperation('delete')}>\n              <i className=\"bi bi-trash me-1\"></i> {isBatchProcessing ? \"Processing...\" : \"Delete\"}\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default PlanningHubPage;\n","import React, { useEffect, useRef } from 'react';\nimport { Chart, ChartOptions, ChartData, registerables } from 'chart.js';\n\n// Register all Chart.js components\nChart.register(...registerables);\n\ninterface LineChartProps {\n  data: ChartData<'line'>;\n  options?: ChartOptions<'line'>;\n  height?: number;\n  width?: number;\n  className?: string;\n}\n\n/**\n * LineChart Component\n * \n * A reusable line chart component using Chart.js for displaying time series data.\n * Ideal for trends and historical analysis of metrics over time.\n */\nconst LineChart: React.FC<LineChartProps> = ({\n  data,\n  options,\n  height = 320,\n  width = 100,\n  className = ''\n}) => {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstanceRef = useRef<Chart<'line'> | null>(null);\n  \n  // Default chart options\n  const defaultOptions: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'end'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.05)'\n        }\n      }\n    }\n  };\n  \n  // Create or update the chart when data changes\n  useEffect(() => {\n    if (chartRef.current) {\n      // Destroy previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      \n      // Create new chart\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        chartInstanceRef.current = new Chart(ctx, {\n          type: 'line',\n          data,\n          options: {\n            ...defaultOptions,\n            ...options\n          }\n        });\n      }\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data, options]);\n  \n  return (\n    <div className={`line-chart-container ${className}`} style={{ height, width: `${width}%` }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default LineChart;","import React, { useEffect, useRef } from 'react';\nimport { \n  Chart, \n  ChartOptions, \n  ChartData, \n  registerables,\n  TooltipItem\n} from 'chart.js';\n\n// Register all Chart.js components\nChart.register(...registerables);\n\ninterface PieChartProps {\n  data: ChartData<'pie'> | ChartData<'doughnut'>;\n  options?: ChartOptions<'pie'> | ChartOptions<'doughnut'>;\n  type?: 'pie' | 'doughnut';\n  height?: number;\n  width?: number;\n  className?: string;\n  legendPosition?: 'top' | 'bottom' | 'left' | 'right' | false;\n}\n\n// Type for the chart instance based on the chart type\ntype PieOrDoughnutChart = Chart<'pie'> | Chart<'doughnut'>;\n\n/**\n * PieChart Component\n * \n * A reusable pie/doughnut chart component using Chart.js for displaying\n * categorical distributions and proportions. Perfect for showing status\n * distributions, category breakdowns, and proportion analysis.\n */\nconst PieChart: React.FC<PieChartProps> = ({\n  data,\n  options,\n  type = 'pie',\n  height = 320,\n  width = 100,\n  className = '',\n  legendPosition = 'right'\n}) => {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstanceRef = useRef<PieOrDoughnutChart | null>(null);\n  \n  // Default chart options\n  const defaultOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: legendPosition ? {\n        position: legendPosition,\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      } : {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context: TooltipItem<'pie' | 'doughnut'>) {\n            const label = context.label || '';\n            const value = context.formattedValue;\n            const dataset = context.dataset;\n            const total = (dataset.data as number[]).reduce((acc, current) => acc + current, 0);\n            const percentage = Math.round(((context.raw as number) / total) * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    // Make doughnut charts have a reasonable hole size\n    cutout: type === 'doughnut' ? '60%' : undefined\n  };\n  \n  // Create or update the chart when data changes\n  useEffect(() => {\n    if (chartRef.current) {\n      // Destroy previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      \n      // Create new chart\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        // Here we use @ts-ignore to bypass type checking because Chart.js typing\n        // has difficulty with dynamically determined chart types\n        // @ts-ignore\n        chartInstanceRef.current = new Chart<'pie' | 'doughnut'>(ctx, {\n          type,\n          data: data as ChartData<'pie'>,\n          options: {\n            ...defaultOptions,\n            ...(options || {})\n          }\n        });\n      }\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data, options, type]);\n  \n  return (\n    <div className={`pie-chart-container ${className}`} style={{ height, width: `${width}%` }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default PieChart;","import React, { useEffect, useRef } from 'react';\nimport { Chart, ChartOptions, ChartData, registerables } from 'chart.js';\n\n// Register all Chart.js components\nChart.register(...registerables);\n\ninterface BarChartProps {\n  data: ChartData<'bar'>;\n  options?: ChartOptions<'bar'>;\n  height?: number;\n  width?: number;\n  className?: string;\n  horizontal?: boolean;\n}\n\n/**\n * BarChart Component\n * \n * A reusable bar chart component using Chart.js for comparing values across categories.\n * Can be displayed horizontally or vertically, making it versatile for different use cases\n * like comparing processing times, volumes by category, or status counts.\n */\nconst BarChart: React.FC<BarChartProps> = ({\n  data,\n  options,\n  height = 320,\n  width = 100,\n  className = '',\n  horizontal = false\n}) => {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstanceRef = useRef<Chart<'bar'> | null>(null);\n  \n  // Default chart options\n  const defaultOptions: ChartOptions<'bar'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: horizontal ? 'y' : 'x',\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'end'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: !horizontal,\n          color: 'rgba(0, 0, 0, 0.05)'\n        },\n        stacked: false\n      },\n      y: {\n        grid: {\n          display: horizontal,\n          color: 'rgba(0, 0, 0, 0.05)'\n        },\n        beginAtZero: true,\n        stacked: false\n      }\n    }\n  };\n  \n  // Create or update the chart when data changes\n  useEffect(() => {\n    if (chartRef.current) {\n      // Destroy previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      \n      // Create new chart\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        chartInstanceRef.current = new Chart(ctx, {\n          type: 'bar',\n          data,\n          options: {\n            ...defaultOptions,\n            ...options\n          }\n        });\n      }\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data, options, horizontal]);\n  \n  return (\n    <div className={`bar-chart-container ${className}`} style={{ height, width: `${width}%` }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default BarChart;","/*!\n * chartjs-adapter-date-fns v3.0.0\n * https://www.chartjs.org\n * (c) 2022 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\n\nconst FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns', // DEBUG\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n    const type = typeof value;\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n    return isValid(value) ? value.getTime() : null;\n  },\n\n  format: function(time, fmt) {\n    return format(time, fmt, this.options);\n  },\n\n  add: function(time, amount, unit) {\n    switch (unit) {\n    case 'millisecond': return addMilliseconds(time, amount);\n    case 'second': return addSeconds(time, amount);\n    case 'minute': return addMinutes(time, amount);\n    case 'hour': return addHours(time, amount);\n    case 'day': return addDays(time, amount);\n    case 'week': return addWeeks(time, amount);\n    case 'month': return addMonths(time, amount);\n    case 'quarter': return addQuarters(time, amount);\n    case 'year': return addYears(time, amount);\n    default: return time;\n    }\n  },\n\n  diff: function(max, min, unit) {\n    switch (unit) {\n    case 'millisecond': return differenceInMilliseconds(max, min);\n    case 'second': return differenceInSeconds(max, min);\n    case 'minute': return differenceInMinutes(max, min);\n    case 'hour': return differenceInHours(max, min);\n    case 'day': return differenceInDays(max, min);\n    case 'week': return differenceInWeeks(max, min);\n    case 'month': return differenceInMonths(max, min);\n    case 'quarter': return differenceInQuarters(max, min);\n    case 'year': return differenceInYears(max, min);\n    default: return 0;\n    }\n  },\n\n  startOf: function(time, unit, weekday) {\n    switch (unit) {\n    case 'second': return startOfSecond(time);\n    case 'minute': return startOfMinute(time);\n    case 'hour': return startOfHour(time);\n    case 'day': return startOfDay(time);\n    case 'week': return startOfWeek(time);\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\n    case 'month': return startOfMonth(time);\n    case 'quarter': return startOfQuarter(time);\n    case 'year': return startOfYear(time);\n    default: return time;\n    }\n  },\n\n  endOf: function(time, unit) {\n    switch (unit) {\n    case 'second': return endOfSecond(time);\n    case 'minute': return endOfMinute(time);\n    case 'hour': return endOfHour(time);\n    case 'day': return endOfDay(time);\n    case 'week': return endOfWeek(time);\n    case 'month': return endOfMonth(time);\n    case 'quarter': return endOfQuarter(time);\n    case 'year': return endOfYear(time);\n    default: return time;\n    }\n  }\n});\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport function addSeconds(date, amount) {\n  return addMilliseconds(date, amount * 1000);\n}\n\n// Fallback for modularized imports:\nexport default addSeconds;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of minutes to be added.\n *\n * @returns The new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport function addMinutes(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInMinute);\n}\n\n// Fallback for modularized imports:\nexport default addMinutes;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\n\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of hours to be added.\n *\n * @returns The new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nexport function addHours(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInHour);\n}\n\n// Fallback for modularized imports:\nexport default addHours;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount) {\n  const days = amount * 7;\n  return addDays(date, days);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of quarters to be added.\n *\n * @returns The new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nexport function addQuarters(date, amount) {\n  const months = amount * 3;\n  return addMonths(date, months);\n}\n\n// Fallback for modularized imports:\nexport default addQuarters;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount) {\n  return addMonths(date, amount * 12);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInDays } from \"./differenceInDays.mjs\";\n\n/**\n * The {@link differenceInWeeks} function options.\n */\n\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * @example\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\nexport function differenceInWeeks(dateLeft, dateRight, options) {\n  const diff = differenceInDays(dateLeft, dateRight) / 7;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInWeeks;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMonths } from \"./differenceInMonths.mjs\";\n\n/**\n * The {@link differenceInQuarters} function options.\n */\n\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of quarters between the given dates.\n *\n * @description\n * Get the number of quarters between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\nexport function differenceInQuarters(dateLeft, dateRight, options) {\n  const diff = differenceInMonths(dateLeft, dateRight) / 3;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInQuarters;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nexport function startOfSecond(date) {\n  const _date = toDate(date);\n  _date.setMilliseconds(0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfSecond;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nexport function startOfMinute(date) {\n  const _date = toDate(date);\n  _date.setSeconds(0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMinute;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport function startOfHour(date) {\n  const _date = toDate(date);\n  _date.setMinutes(0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfHour;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nexport function startOfQuarter(date) {\n  const _date = toDate(date);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3);\n  _date.setMonth(month, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfQuarter;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nexport function endOfSecond(date) {\n  const _date = toDate(date);\n  _date.setMilliseconds(999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfSecond;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nexport function endOfMinute(date) {\n  const _date = toDate(date);\n  _date.setSeconds(59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMinute;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nexport function endOfHour(date) {\n  const _date = toDate(date);\n  _date.setMinutes(59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfHour;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfQuarter(date) {\n  const _date = toDate(date);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3) + 3;\n  _date.setMonth(month, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfQuarter;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n","import React, { useEffect, useRef } from 'react';\nimport { Chart, ChartOptions, ChartData, registerables, TooltipItem } from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // Time scale adapter\n\n// Register all Chart.js components\nChart.register(...registerables);\n\ninterface ForecastDataPoint {\n  date: Date | string;\n  value: number;\n  isPrediction?: boolean;\n}\n\n// Define simpler data structure for time series that Chart.js can handle\ntype ChartPoint = {\n  x: number;  // Timestamp in milliseconds\n  y: number;  // Value\n};\n\n// Define the fill type for Chart.js datasets with proper types\n// Fill modes for line charts - true, false or relative index\nexport type FillMode = boolean | number;\n\ninterface ForecastChartProps {\n  historicalData: ForecastDataPoint[];\n  forecastData: ForecastDataPoint[];\n  options?: ChartOptions<'line'>;\n  xAxisLabel?: string;\n  yAxisLabel?: string;\n  height?: number;\n  width?: number;\n  className?: string;\n  confidenceInterval?: {\n    upper: ForecastDataPoint[];\n    lower: ForecastDataPoint[];\n  };\n}\n\n/**\n * ForecastChart Component\n * \n * A specialized line chart for time series forecasting and predictive analytics.\n * Displays historical data alongside predictions with optional confidence intervals.\n * Ideal for delivery time forecasting, inventory projections, and trend analysis.\n */\nconst ForecastChart: React.FC<ForecastChartProps> = ({\n  historicalData,\n  forecastData,\n  options,\n  xAxisLabel = 'Date',\n  yAxisLabel = 'Value',\n  height = 350,\n  width = 100,\n  className = '',\n  confidenceInterval\n}) => {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstanceRef = useRef<Chart<'line'> | null>(null);\n  \n  // Process the data into the format Chart.js expects\n  const formatData = (): ChartData<'line'> => {\n    // Convert historical data points\n    const historicalPoints: ChartPoint[] = historicalData.map(point => ({\n      x: new Date(typeof point.date === 'string' ? point.date : point.date).getTime(),\n      y: point.value\n    }));\n    \n    // Convert forecast data points\n    const forecastPoints: ChartPoint[] = forecastData.map(point => ({\n      x: new Date(typeof point.date === 'string' ? point.date : point.date).getTime(),\n      y: point.value\n    }));\n    \n    const datasets = [\n      {\n        label: 'Historical Data',\n        data: historicalPoints,\n        borderColor: '#4e73df',\n        backgroundColor: 'rgba(78, 115, 223, 0.05)',\n        borderWidth: 2,\n        pointRadius: 3,\n        pointBackgroundColor: '#4e73df',\n        fill: false,\n        tension: 0.1\n      },\n      {\n        label: 'Forecast',\n        data: forecastPoints,\n        borderColor: '#1cc88a',\n        backgroundColor: 'rgba(28, 200, 138, 0.05)',\n        borderWidth: 2,\n        borderDash: [5, 5],\n        pointRadius: 3,\n        pointBackgroundColor: '#1cc88a',\n        fill: false,\n        tension: 0.1\n      }\n    ];\n    \n    // Add confidence interval datasets if provided\n    if (confidenceInterval) {\n      // Upper bound\n      const upperPoints: ChartPoint[] = confidenceInterval.upper.map(point => ({\n        x: new Date(typeof point.date === 'string' ? point.date : point.date).getTime(),\n        y: point.value\n      }));\n      \n      // Lower bound\n      const lowerPoints: ChartPoint[] = confidenceInterval.lower.map(point => ({\n        x: new Date(typeof point.date === 'string' ? point.date : point.date).getTime(),\n        y: point.value\n      }));\n      \n      datasets.push({\n        label: 'Upper Bound',\n        data: upperPoints,\n        borderColor: 'rgba(28, 200, 138, 0.3)',\n        backgroundColor: 'transparent',\n        borderWidth: 1,\n        borderDash: [3, 3],\n        pointRadius: 0,\n        pointBackgroundColor: 'rgba(28, 200, 138, 0.3)',\n        tension: 0.1,\n        fill: false\n      });\n      \n      datasets.push({\n        label: 'Lower Bound',\n        data: lowerPoints,\n        borderColor: 'rgba(28, 200, 138, 0.3)',\n        backgroundColor: 'rgba(28, 200, 138, 0.1)',\n        borderWidth: 1,\n        borderDash: [3, 3],\n        pointRadius: 0,\n        pointBackgroundColor: 'rgba(28, 200, 138, 0.3)',\n        tension: 0.1,\n        fill: true // Fill to the baseline\n      });\n    }\n    \n    return {\n      datasets\n    };\n  };\n  \n  // Default chart options\n  const defaultOptions: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'end',\n        labels: {\n          boxWidth: 12,\n          usePointStyle: true\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          title: function(context: TooltipItem<'line'>[]) {\n            const date = context[0].parsed.x;\n            return new Date(date).toLocaleDateString(undefined, {\n              year: 'numeric',\n              month: 'short',\n              day: 'numeric'\n            });\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'MMM d, yyyy',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: !!xAxisLabel,\n          text: xAxisLabel\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          display: !!yAxisLabel,\n          text: yAxisLabel\n        },\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.05)'\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      line: {\n        tension: 0.3\n      }\n    }\n  };\n  \n  // Create or update the chart when data changes\n  useEffect(() => {\n    if (chartRef.current) {\n      // Destroy previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      \n      // Create new chart\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        chartInstanceRef.current = new Chart<'line'>(ctx, {\n          type: 'line',\n          data: formatData(),\n          options: {\n            ...defaultOptions,\n            ...options\n          }\n        });\n      }\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [historicalData, forecastData, options, confidenceInterval, xAxisLabel, yAxisLabel]);\n  \n  return (\n    <div className={`forecast-chart-container ${className}`} style={{ height, width: `${width}%` }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default ForecastChart;","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Dropdown, Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppDispatch, RootState } from '@/store';\nimport { \n  fetchMetrics, \n  fetchDetailedMetrics,\n  setDateRange,\n  StatusMetric,\n  TimelineMetric\n} from '@/store/slices/metricsSlice';\n\n// Import chart components\nimport LineChart from '@/components/charts/LineChart';\nimport PieChart from '@/components/charts/PieChart';\nimport BarChart from '@/components/charts/BarChart';\nimport ForecastChart from '@/components/charts/ForecastChart';\nimport { POStatus } from '@/types/purchaseOrder';\n\n/**\n * MetricsDashboardPage Component\n * \n * A comprehensive analytics dashboard that displays key metrics and insights\n * about purchase orders, with interactive visualizations and filtering options.\n */\n\n// Define a supplier metric interface for top suppliers\n// This is used for the suppliers table display\ninterface SupplierMetric {\n  name: string;\n  count: number;\n  totalValue: number;\n  onTimePercentage: number;\n}\n\nconst MetricsDashboardPage: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { data, detailedData, loading, error } = \n    useSelector((state: RootState) => state.metrics);\n  \n  // Time range state\n  const [timeRange, setTimeRange] = useState<'week' | 'month' | 'quarter' | 'year' | 'custom'>('month');\n  const [refreshInterval, setRefreshInterval] = useState<number | null>(null);\n  \n  // Additional loading states for better UX\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n  \n  // Get current date filters from the Redux store\n  const { startDate, endDate } = useSelector((state: RootState) => state.metrics.filters);\n  \n  // Load metrics data on component mount and when time range changes\n  useEffect(() => {\n    // Update date filters based on timeRange\n    updateDateFilters();\n  }, [timeRange]); // Only depend on timeRange changing\n  \n  // Fetch metrics when date filters are updated\n  useEffect(() => {\n    if (startDate && endDate) {\n      loadMetricsData();\n    }\n  }, [startDate, endDate]);\n  \n  // Setup auto-refresh if interval is set\n  useEffect(() => {\n    let intervalId: number | null = null;\n    \n    if (refreshInterval) {\n      intervalId = window.setInterval(() => {\n        refreshMetricsData();\n      }, refreshInterval * 1000);\n    }\n    \n    return () => {\n      if (intervalId !== null) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [refreshInterval, startDate, endDate]);\n  \n  // Update date filters based on selected time range\n  const updateDateFilters = useCallback(() => {\n    const now = new Date();\n    let startDate = new Date();\n    \n    // Calculate start date based on selected time range\n    if (timeRange === 'week') startDate.setDate(now.getDate() - 7);\n    else if (timeRange === 'month') startDate.setDate(now.getDate() - 30);\n    else if (timeRange === 'quarter') startDate.setDate(now.getDate() - 90);\n    else if (timeRange === 'year') startDate.setDate(now.getDate() - 365);\n    else return; // Don't update for custom range\n    \n    // Format dates as ISO strings\n    const formattedStartDate = startDate.toISOString().split('T')[0];\n    const formattedEndDate = now.toISOString().split('T')[0];\n    \n    // Update Redux store with new date range\n    dispatch(setDateRange({ startDate: formattedStartDate, endDate: formattedEndDate }));\n  }, [dispatch, timeRange]);\n  \n  // Load metrics data from APIs\n  const loadMetricsData = useCallback(() => {\n    // Only show full loading state if we don't have any data yet\n    if (!data) {\n      setIsRefreshing(false); // This is not a refresh, it's an initial load\n    } else {\n      setIsRefreshing(true); // We're refreshing existing data\n    }\n    \n    // Fetch basic metrics\n    dispatch(fetchMetrics())\n      .unwrap()\n      .then(() => {\n        // Update last updated timestamp on successful load\n        setLastUpdated(new Date());\n      })\n      .catch((error) => {\n        console.error('Error fetching metrics:', error);\n      })\n      .finally(() => {\n        setIsRefreshing(false);\n      });\n    \n    // Fetch detailed metrics\n    dispatch(fetchDetailedMetrics())\n      .catch((error) => {\n        console.error('Error fetching detailed metrics:', error);\n      });\n  }, [dispatch, data]);\n  \n  // Handle manual refresh\n  const refreshMetricsData = useCallback(() => {\n    setIsRefreshing(true);\n    loadMetricsData();\n  }, [loadMetricsData]);\n  \n  // Handle time range change\n  const handleTimeRangeChange = (range: 'week' | 'month' | 'quarter' | 'year' | 'custom') => {\n    setTimeRange(range);\n  };\n  \n  // Handle refresh interval change\n  const handleRefreshChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value;\n    setRefreshInterval(value ? parseInt(value) : null);\n  };\n  \n  // Generate chart data for volume trends from real or mock data\n  const getVolumeChartData = useMemo(() => {\n    // Use real data if available, otherwise generate mock data\n    if (data?.timeline && data.timeline.length > 0) {\n      // Group timeline data by date and count orders\n      const dateMap: Record<string, number> = {};\n      data.timeline.forEach((item: TimelineMetric) => {\n        // Extract just the date part (yyyy-mm-dd)\n        const date = item.date.split('T')[0];\n        dateMap[date] = (dateMap[date] || 0) + item.count;\n      });\n      \n      // Sort dates\n      const sortedDates = Object.keys(dateMap).sort();\n      \n      // Extract labels and data points\n      const labels = sortedDates.map(date => {\n        const d = new Date(date);\n        return d.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n      });\n      \n      const values = sortedDates.map(date => dateMap[date]);\n      \n      return {\n        labels,\n        datasets: [\n          {\n            label: 'Orders',\n            data: values,\n            borderColor: '#4e73df',\n            backgroundColor: 'rgba(78, 115, 223, 0.05)',\n            tension: 0.3,\n            fill: true\n          }\n        ]\n      };\n    } else {\n      // Generate mock data if real data is not available\n      const labels = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n      ];\n      \n      // Generate random data for demonstration\n      const currentYearData = Array.from({ length: 12 }, () => Math.floor(Math.random() * 100) + 80);\n      const previousYearData = Array.from({ length: 12 }, () => Math.floor(Math.random() * 90) + 70);\n      \n      return {\n        labels,\n        datasets: [\n          {\n            label: 'This Year',\n            data: currentYearData,\n            borderColor: '#4e73df',\n            backgroundColor: 'rgba(78, 115, 223, 0.05)',\n            tension: 0.3,\n            fill: true\n          },\n          {\n            label: 'Last Year',\n            data: previousYearData,\n            borderColor: '#858796',\n            backgroundColor: 'rgba(133, 135, 150, 0.05)',\n            tension: 0.3,\n            borderDash: [5, 5],\n            fill: false\n          }\n        ]\n      };\n    }\n  }, [data]);\n  \n  // Generate status distribution chart data from real or mock data\n  const getStatusChartData = useMemo(() => {\n    // Get status colors mapping\n    const statusColors: Record<string, string> = {\n      [POStatus.UPLOADED]: '#4e73df',  // Blue\n      [POStatus.CONFIRMED]: '#1cc88a', // Green\n      [POStatus.SHIPPED]: '#36b9cc',   // Cyan\n      [POStatus.INVOICED]: '#f6c23e',  // Yellow\n      [POStatus.DELIVERED]: '#858796', // Gray\n      [POStatus.CANCELLED]: '#e74a3b'  // Red\n    };\n    \n    // Use real data if available, otherwise generate mock data\n    if (data?.statusDistribution && data.statusDistribution.length > 0) {\n      const statuses = data.statusDistribution.map((item: StatusMetric) => item.status);\n      const percentages = data.statusDistribution.map((item: StatusMetric) => item.percentage);\n      const colors = data.statusDistribution.map((item: StatusMetric) => \n        statusColors[item.status] || '#858796');\n      \n      return {\n        labels: statuses,\n        datasets: [\n          {\n            data: percentages,\n            backgroundColor: colors,\n            borderWidth: 1,\n            hoverOffset: 5\n          }\n        ]\n      };\n    } else {\n      // Generate mock data if real data is not available\n      const statuses = [\n        POStatus.UPLOADED,\n        POStatus.CONFIRMED,\n        POStatus.SHIPPED,\n        POStatus.INVOICED,\n        POStatus.DELIVERED,\n        POStatus.CANCELLED\n      ];\n      \n      // Distribution percentages should add up to 100%\n      const percentages = [15, 25, 20, 15, 20, 5];\n      \n      // Colors for each status\n      const colors = statuses.map(status => statusColors[status] || '#858796');\n      \n      return {\n        labels: statuses,\n        datasets: [\n          {\n            data: percentages,\n            backgroundColor: colors,\n            borderWidth: 1,\n            hoverOffset: 5\n          }\n        ]\n      };\n    }\n  }, [data]);\n  \n  // Generate processing time chart data from real or mock data\n  const getProcessingTimeChartData = useMemo(() => {\n    // Use real data if available, otherwise generate mock data\n    if (detailedData?.processingTimes) {\n      // Map processing time data from API\n      const processingTimes = detailedData.processingTimes;\n      const stages = Object.keys(processingTimes).filter(key => key !== 'total');\n      const times = stages.map(stage => processingTimes[stage]);\n      \n      // Add total as the last item\n      stages.push('Total Processing Time');\n      times.push(processingTimes.total || 0);\n      \n      return {\n        labels: stages.map(s => s.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())), // Format labels\n        datasets: [\n          {\n            label: 'Days',\n            data: times,\n            backgroundColor: [\n              '#4e73df', // Uploaded to Confirmed\n              '#36b9cc', // Confirmed to Shipped\n              '#1cc88a', // Shipped to Invoiced\n              '#f6c23e', // Invoiced to Delivered\n              '#858796'  // Total\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n    } else {\n      // Generate mock data if real data is not available\n      const stages = [\n        'Uploaded to Confirmed',\n        'Confirmed to Shipped',\n        'Shipped to Invoiced',\n        'Invoiced to Delivered',\n        'Total Processing Time'\n      ];\n      \n      const times = [1.2, 2.5, 0.8, 1.4, 5.9]; // in days\n      \n      return {\n        labels: stages,\n        datasets: [\n          {\n            label: 'Days',\n            data: times,\n            backgroundColor: [\n              '#4e73df', // Uploaded to Confirmed\n              '#36b9cc', // Confirmed to Shipped\n              '#1cc88a', // Shipped to Invoiced\n              '#f6c23e', // Invoiced to Delivered\n              '#858796'  // Total\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n    }\n  }, [detailedData]);\n  \n  // Generate forecast chart data using historical data if available\n  const getForecastChartData = useMemo(() => {\n    // Historical data - last 30 days\n    const today = new Date();\n    let historicalData: { date: Date; value: number }[] = [];\n    \n    // Use real timeline data if available, otherwise generate mock data\n    if (data?.timeline && data.timeline.length > 0) {\n      // Convert timeline data to forecast format\n      historicalData = data.timeline\n        .filter((item: TimelineMetric) => \n          new Date(item.date) >= new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000))\n        .map((item: TimelineMetric) => ({\n          date: new Date(item.date),\n          value: item.count\n        }));\n    }\n    \n    // If no historical data or not enough data points, generate reasonable placeholder data\n    // but only in development mode\n    if ((!historicalData.length || historicalData.length < 10) && process.env.NODE_ENV === 'development') {\n      console.log('Using placeholder data for forecast chart (development only)');\n      historicalData = Array.from<unknown, { date: Date; value: number }>({ length: 30 }, (_, i) => {\n        const date = new Date();\n        date.setDate(today.getDate() - (30 - i));\n        return {\n          date,\n          value: 5 + Math.random() * 3 + (i / 10) // slight upward trend with noise\n        };\n      });\n    }\n    \n    // Should ideally get real forecast data from the API\n    // but using placeholder data in development mode\n    let forecastData: Array<{ date: Date; value: number }> = [];\n    let upperBound: Array<{ date: Date; value: number }> = [];\n    let lowerBound: Array<{ date: Date; value: number }> = [];\n    \n    if (process.env.NODE_ENV === 'development') {\n      // Forecast data - next 14 days\n      forecastData = Array.from({ length: 14 }, (_, i) => {\n        const date = new Date();\n        date.setDate(today.getDate() + i + 1);\n        return {\n          date,\n          value: 8 + Math.random() * 2 + (i / 10) // continuing the trend with less noise\n        };\n      });\n      \n      // Confidence interval - upper and lower bounds\n      upperBound = forecastData.map(point => ({\n        date: point.date,\n        value: point.value + 1.5 + (Math.random() * 0.5) // Add buffer for upper bound\n      }));\n      \n      lowerBound = forecastData.map(point => ({\n        date: point.date,\n        value: Math.max(0, point.value - 1.5 - (Math.random() * 0.5)) // Ensure no negative values\n      }));\n    }\n    \n    return {\n      historicalData,\n      forecastData,\n      confidenceInterval: {\n        upper: upperBound,\n        lower: lowerBound\n      }\n    };\n  }, [data]);\n  \n  // Render initial loading state\n  if (loading && !data) {\n    return (\n      <Container fluid className=\"text-center py-5\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n        <p className=\"mt-3\">Loading metrics data...</p>\n        <p className=\"text-muted\">This may take a moment while we connect to the metrics service.</p>\n      </Container>\n    );\n  }\n  \n  // Format functions for displaying metrics\n  const formatNumber = (num: number | undefined): string => {\n    if (num === undefined) return '0';\n    return new Intl.NumberFormat('en-US').format(num);\n  };\n  \n  const formatCurrency = (amount: number | undefined): string => {\n    if (amount === undefined) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n  \n  // Format date for display\n  const formatDate = (date: Date | null): string => {\n    if (!date) return 'Never';\n    return date.toLocaleString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  };\n  \n  // Get metric values without fallbacks\n  const totalOrders = data?.totalOrders || 0;\n  const totalValue = data?.totalValue || 0;\n  const onTimeDelivery = data?.onTimePercentage || 0;\n  const avgProcessingTime = detailedData?.processingTimes?.total || 0;\n  \n  // Get trend indicators (these would come from API in real implementation)\n  const ordersChange = { value: 12, direction: 'up' };  // 12% increase\n  const valueChange = { value: 3.7, direction: 'up' };  // 3.7% increase\n  const deliveryChange = { value: 2, direction: 'down' };  // 2% decrease\n  const processingChange = { value: 1.3, direction: 'up' };  // 1.3 days improvement\n  \n  return (\n    <Container fluid>\n      {/* Page Header */}\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n        <h1 className=\"h2 mb-0 text-gray-800\">Metrics & Analytics</h1>\n        <div>\n          <Dropdown className=\"d-inline-block me-2\">\n            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-time-range\">\n              <i className=\"bi bi-calendar-range me-1\"></i>\n              {timeRange === 'week' && 'Last 7 Days'}\n              {timeRange === 'month' && 'Last 30 Days'}\n              {timeRange === 'quarter' && 'Last 90 Days'}\n              {timeRange === 'year' && 'Last Year'}\n              {timeRange === 'custom' && 'Custom Range'}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => handleTimeRangeChange('week')}>Last 7 Days</Dropdown.Item>\n              <Dropdown.Item onClick={() => handleTimeRangeChange('month')}>Last 30 Days</Dropdown.Item>\n              <Dropdown.Item onClick={() => handleTimeRangeChange('quarter')}>Last 90 Days</Dropdown.Item>\n              <Dropdown.Item onClick={() => handleTimeRangeChange('year')}>Last Year</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item onClick={() => handleTimeRangeChange('custom')}>Custom Range</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          \n          <Button variant=\"primary\" onClick={refreshMetricsData} disabled={isRefreshing}>\n            <i className=\"bi bi-download me-1\"></i>\n            Export Report\n          </Button>\n        </div>\n      </div>\n      \n      {/* Error alert */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\">\n          <i className=\"bi bi-exclamation-triangle-fill me-2\"></i> \n          {error}\n          <Button \n            variant=\"outline-danger\" \n            size=\"sm\" \n            className=\"ms-3\"\n            onClick={refreshMetricsData}\n          >\n            <i className=\"bi bi-arrow-repeat me-1\"></i> Retry\n          </Button>\n        </Alert>\n      )}\n      \n      {/* Refresh interval & Last updated */}\n      <div className=\"mb-4 d-flex justify-content-between align-items-center\">\n        <div className=\"d-flex align-items-center\">\n          <div className=\"me-3\">\n            <i className=\"bi bi-arrow-repeat me-1\"></i> \n            Auto-refresh:\n          </div>\n          <Form.Select \n            className=\"w-auto\" \n            value={refreshInterval?.toString() || ''} \n            onChange={handleRefreshChange}\n          >\n            <option value=\"\">Off</option>\n            <option value=\"30\">Every 30 seconds</option>\n            <option value=\"60\">Every minute</option>\n            <option value=\"300\">Every 5 minutes</option>\n            <option value=\"600\">Every 10 minutes</option>\n          </Form.Select>\n          \n          {isRefreshing && (\n            <div className=\"ms-3 text-primary\">\n              <Spinner animation=\"border\" size=\"sm\" className=\"me-1\" />\n              Refreshing...\n            </div>\n          )}\n        </div>\n        \n        {lastUpdated && (\n          <div className=\"text-muted small\">\n            <i className=\"bi bi-clock me-1\"></i>\n            Last updated: {formatDate(lastUpdated)}\n            <Button \n              variant=\"link\" \n              className=\"p-0 ms-2\" \n              onClick={refreshMetricsData}\n              disabled={isRefreshing}\n            >\n              <i className=\"bi bi-arrow-repeat\"></i>\n            </Button>\n          </div>\n        )}\n      </div>\n      \n      {/* Key Performance Indicators */}\n      <Row className=\"g-3 mb-4\">\n        <Col xl={3} md={6}>\n          <Card className=\"h-100 py-2 shadow-sm\" style={{ borderLeft: '0.25rem solid #4e73df' }}>\n            <Card.Body>\n              <Row className=\"align-items-center\">\n                <div className=\"col\">\n                  <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                    Total POs ({timeRange})\n                  </div>\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{formatNumber(totalOrders)}</div>\n                  <div className=\"text-muted mt-2 small\">\n                    <span className={`text-${ordersChange.direction === 'up' ? 'success' : 'danger'} me-1`}>\n                      <i className={`bi bi-arrow-${ordersChange.direction}`}></i> {ordersChange.value}%\n                    </span>\n                    vs previous period\n                  </div>\n                </div>\n                <div className=\"col-auto\">\n                  <i className=\"bi bi-file-text-fill fa-2x text-primary opacity-25 fs-1\"></i>\n                </div>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col xl={3} md={6}>\n          <Card className=\"h-100 py-2 shadow-sm\" style={{ borderLeft: '0.25rem solid #1cc88a' }}>\n            <Card.Body>\n              <Row className=\"align-items-center\">\n                <div className=\"col\">\n                  <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                    Total Value ({timeRange})\n                  </div>\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{formatCurrency(totalValue)}</div>\n                  <div className=\"text-muted mt-2 small\">\n                    <span className={`text-${valueChange.direction === 'up' ? 'success' : 'danger'} me-1`}>\n                      <i className={`bi bi-arrow-${valueChange.direction}`}></i> {valueChange.value}%\n                    </span>\n                    vs previous period\n                  </div>\n                </div>\n                <div className=\"col-auto\">\n                  <i className=\"bi bi-currency-dollar fa-2x text-success opacity-25 fs-1\"></i>\n                </div>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col xl={3} md={6}>\n          <Card className=\"h-100 py-2 shadow-sm\" style={{ borderLeft: '0.25rem solid #36b9cc' }}>\n            <Card.Body>\n              <Row className=\"align-items-center\">\n                <div className=\"col\">\n                  <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                    On-Time Delivery\n                  </div>\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{onTimeDelivery}%</div>\n                  <div className=\"text-muted mt-2 small\">\n                    <span className={`text-${deliveryChange.direction === 'up' ? 'success' : 'danger'} me-1`}>\n                      <i className={`bi bi-arrow-${deliveryChange.direction}`}></i> {deliveryChange.value}%\n                    </span>\n                    vs previous period\n                  </div>\n                </div>\n                <div className=\"col-auto\">\n                  <i className=\"bi bi-truck fa-2x text-info opacity-25 fs-1\"></i>\n                </div>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col xl={3} md={6}>\n          <Card className=\"h-100 py-2 shadow-sm\" style={{ borderLeft: '0.25rem solid #f6c23e' }}>\n            <Card.Body>\n              <Row className=\"align-items-center\">\n                <div className=\"col\">\n                  <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                    Processing Time (Avg)\n                  </div>\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{avgProcessingTime} days</div>\n                  <div className=\"text-muted mt-2 small\">\n                    <span className={`text-${processingChange.direction === 'up' ? 'success' : 'danger'} me-1`}>\n                      <i className={`bi bi-arrow-${processingChange.direction}`}></i> {processingChange.value} days\n                    </span>\n                    improvement\n                  </div>\n                </div>\n                <div className=\"col-auto\">\n                  <i className=\"bi bi-hourglass-split fa-2x text-warning opacity-25 fs-1\"></i>\n                </div>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      \n      {/* Charts Row */}\n      <Row className=\"g-3 mb-4\">\n        <Col lg={8}>\n          <Card className=\"shadow-sm\">\n            <Card.Header className=\"bg-light py-3 d-flex flex-row align-items-center justify-content-between\">\n              <h6 className=\"m-0 font-weight-bold\">Purchase Order Volume Trends</h6>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-trend-options\" className=\"no-arrow\">\n                  <i className=\"bi bi-three-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                  <Dropdown.Item><i className=\"bi bi-download me-2\"></i> Export as Image</Dropdown.Item>\n                  <Dropdown.Item><i className=\"bi bi-file-earmark-excel me-2\"></i> Export Data</Dropdown.Item>\n                  <Dropdown.Item onClick={refreshMetricsData}><i className=\"bi bi-arrow-repeat me-2\"></i> Refresh</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"chart-area\" style={{ height: '320px' }}>\n                <LineChart \n                  data={getVolumeChartData}\n                  height={320}\n                  width={100}\n                />\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col lg={4}>\n          <Card className=\"shadow-sm\">\n            <Card.Header className=\"bg-light py-3 d-flex flex-row align-items-center justify-content-between\">\n              <h6 className=\"m-0 font-weight-bold\">Status Distribution</h6>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-distribution-options\" className=\"no-arrow\">\n                  <i className=\"bi bi-three-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                  <Dropdown.Item><i className=\"bi bi-download me-2\"></i> Export as Image</Dropdown.Item>\n                  <Dropdown.Item><i className=\"bi bi-file-earmark-excel me-2\"></i> Export Data</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"chart-pie\">\n                <div style={{ height: '350px' }}>\n                  <PieChart \n                    data={getStatusChartData}\n                    height={350}\n                  />\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      \n      {/* Additional Metrics Row */}\n      <Row className=\"g-3 mb-4\">\n        <Col md={6}>\n          <Card className=\"shadow-sm h-100\">\n            <Card.Header className=\"bg-light py-3 d-flex flex-row align-items-center justify-content-between\">\n              <h6 className=\"m-0 font-weight-bold\">Top Suppliers by Volume</h6>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-suppliers-options\" className=\"no-arrow\">\n                  <i className=\"bi bi-three-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                  <Dropdown.Item><i className=\"bi bi-download me-2\"></i> Export to Excel</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead className=\"table-light\">\n                    <tr>\n                      <th>Supplier</th>\n                      <th>POs</th>\n                      <th>Value</th>\n                      <th>On-Time %</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {((data?.topBuyers as unknown as SupplierMetric[]) || []).map((supplier: SupplierMetric, index: number) => (\n                      <tr key={index}>\n                        <td>{supplier.name}</td>\n                        <td>{formatNumber(supplier.count)}</td>\n                        <td>{formatCurrency(supplier.totalValue)}</td>\n                        <td>{supplier.onTimePercentage}%</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col md={6}>\n          <Card className=\"shadow-sm h-100\">\n            <Card.Header className=\"bg-light py-3 d-flex flex-row align-items-center justify-content-between\">\n              <h6 className=\"m-0 font-weight-bold\">Processing Time by Status</h6>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-time-options\" className=\"no-arrow\">\n                  <i className=\"bi bi-three-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                  <Dropdown.Item><i className=\"bi bi-download me-2\"></i> Export to Excel</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Header>\n            <Card.Body>\n              <div style={{ height: '300px' }}>\n                <BarChart \n                  data={getProcessingTimeChartData}\n                  horizontal={true}\n                />\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      \n      {/* Predictive Analytics Card */}\n      <Card className=\"shadow-sm mb-4\">\n        <Card.Header className=\"bg-light py-3 d-flex justify-content-between align-items-center\">\n          <h6 className=\"m-0 font-weight-bold\">Predictive Analytics</h6>\n          <div className=\"badge bg-info\">\n            Beta Feature\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Row className=\"g-3\">\n            <Col md={4}>\n              <Card className=\"border-0 shadow-sm h-100\">\n                <Card.Body className=\"text-center p-4\">\n                  <div className=\"display-6 text-primary mb-3\">\n                    <i className=\"bi bi-calendar-check\"></i>\n                  </div>\n                  <h5>Delivery Time Forecasting</h5>\n                  <p className=\"text-muted\">\n                    Predict delivery times based on historical data, supplier performance, and seasonal patterns.\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n            \n            <Col md={4}>\n              <Card className=\"border-0 shadow-sm h-100\">\n                <Card.Body className=\"text-center p-4\">\n                  <div className=\"display-6 text-primary mb-3\">\n                    <i className=\"bi bi-people\"></i>\n                  </div>\n                  <h5>Capacity Planning</h5>\n                  <p className=\"text-muted\">\n                    Project future PO volumes and resource requirements based on historical trends and business factors.\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n            \n            <Col md={4}>\n              <Card className=\"border-0 shadow-sm h-100\">\n                <Card.Body className=\"text-center p-4\">\n                  <div className=\"display-6 text-primary mb-3\">\n                    <i className=\"bi bi-shield-check\"></i>\n                  </div>\n                  <h5>Risk Assessment</h5>\n                  <p className=\"text-muted\">\n                    Identify potential issues in the PO lifecycle and provide proactive alerts for at-risk orders.\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          \n          {/* Delivery Time Forecast Chart */}\n          <Card className=\"mt-4 shadow-sm\">\n            <Card.Header className=\"py-3\">\n              <h6 className=\"m-0 fw-bold\">Delivery Time Forecasting</h6>\n            </Card.Header>\n            <Card.Body>\n              <p className=\"text-muted mb-3\">\n                Based on historical data patterns, here's the predicted average delivery time for the next 14 days. \n                The shaded area represents the confidence interval of the predictions.\n              </p>\n              \n              <div style={{ height: '400px' }}>\n                <ForecastChart \n                  {...getForecastChartData}\n                  xAxisLabel=\"Date\"\n                  yAxisLabel=\"Days to Deliver\"\n                />\n              </div>\n            </Card.Body>\n          </Card>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default MetricsDashboardPage;","import React from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n/**\n * NotFoundPage Component\n * \n * Displays a friendly 404 page when users navigate to a non-existent route.\n * Provides helpful navigation options to get users back on track.\n */\nconst NotFoundPage: React.FC = () => {\n  return (\n    <Container className=\"py-5\">\n      <Row className=\"justify-content-center\">\n        <Col md={8} lg={6}>\n          <Card className=\"shadow-sm border-0 text-center\">\n            <Card.Body className=\"p-5\">\n              <div className=\"display-1 text-muted mb-4\">\n                <i className=\"bi bi-map\"></i>\n              </div>\n              \n              <h1 className=\"mb-3\">404 - Page Not Found</h1>\n              \n              <p className=\"lead mb-4 text-muted\">\n                Oops! The page you're looking for doesn't exist or has been moved.\n              </p>\n              \n              <div className=\"mb-4\">\n                <Row className=\"justify-content-center g-3\">\n                  <Col xs={12} sm=\"auto\">\n                    <Button \n                      variant=\"primary\" \n                      className=\"w-100\"\n                    >\n                      <i className=\"bi bi-house-door me-2\"></i>\n                      <Link to=\"/\" className=\"text-white text-decoration-none\">\n                        Go to Dashboard\n                      </Link>\n                    </Button>\n                  </Col>\n                  \n                  <Col xs={12} sm=\"auto\">\n                    <Button \n                      variant=\"outline-secondary\" \n                      className=\"w-100\"\n                      onClick={() => window.history.back()}\n                    >\n                      <i className=\"bi bi-arrow-left me-2\"></i>\n                      Go Back\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n              \n              <div className=\"text-center mt-4\">\n                <h6 className=\"mb-3\">Need Help?</h6>\n                <div className=\"d-flex justify-content-center gap-3\">\n                  <Link to=\"/help\" className=\"text-decoration-none\">\n                    <i className=\"bi bi-question-circle me-1\"></i>\n                    Help Center\n                  </Link>\n                  <Link to=\"/support\" className=\"text-decoration-none\">\n                    <i className=\"bi bi-headset me-1\"></i>\n                    Contact Support\n                  </Link>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;","import React, { Suspense, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n// Layout components\nimport AppHeader from '@/components/common/AppHeader';\nimport AppSidebar from '@/components/common/AppSidebar';\nimport AppFooter from '@/components/common/AppFooter';\n\n// Page components\nimport DashboardPage from '@/pages/DashboardPage';\nimport POListPage from '@/pages/POListPage';\nimport PODetailPage from '@/pages/PODetailPage';\nimport POCreatePage from '@/pages/POCreatePage';\nimport PlanningHubPage from '@/pages/PlanningHubPage';\nimport MetricsDashboardPage from '@/pages/MetricsDashboardPage';\nimport NotFoundPage from '@/pages/NotFoundPage';\n\n// Utilities\nimport Navigation from '@/utils/navigation';\n\n// Styles\nimport './styles/App.scss';\n\nconst App: React.FC = () => {\n  // Get the navigate function from React Router\n  const navigate = useNavigate();\n  // Initialize the navigation utility\n  React.useEffect(() => { Navigation.initialize(navigate); }, [navigate]);\n\n  // Log routes for debugging\n  useEffect(() => {\n    console.log(\"App component mounted with routes for PO Details\");\n  }, []);\n  \n  return (\n    <div className=\"app-container d-flex flex-column min-vh-100\">\n      <AppHeader />\n      \n      <div className=\"app-content d-flex flex-grow-1\">\n        <AppSidebar />\n        \n        <main className=\"flex-grow-1 p-3 p-md-4 overflow-auto\">\n          <Container fluid>\n            <Routes>\n              <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n              <Route path=\"/dashboard\" element={<DashboardPage />} />\n              <Route path=\"/purchase-orders\" element={<POListPage />} />\n              <Route path=\"/purchase-orders/create\" element={<POCreatePage />} />\n              <Route \n                path=\"/purchase-orders/:poNumber\" \n                element={\n                  <Suspense fallback={<div className=\"text-center p-5\">Loading purchase order details...</div>}>\n                    <PODetailPage />\n                  </Suspense>\n                } \n              />\n              <Route path=\"/planning-hub\" element={<PlanningHubPage />} />\n              <Route path=\"/metrics\" element={<MetricsDashboardPage />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </Container>\n        </main>\n      </div>\n      \n      <AppFooter />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { store } from './store';\nimport './styles/index.scss';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);"],"file":"assets/index-CzAoGVZ8.js"}